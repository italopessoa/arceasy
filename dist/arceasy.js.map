{"version":3,"sources":["webpack:///arceasy.js","webpack:///webpack/bootstrap 26c14f863ebf34e1f200","webpack:///./map.js","webpack:///./logger.js","webpack:///./view.js","webpack:///./layers.js","webpack:///./config.js","webpack:///./index.js","webpack:///../~/esri-loader/src/esri-loader.js"],"names":["modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","global","constructors","start","options","undefined","_esriLoader","esriLoader","_interopRequireWildcard","_logger","logger","_view","_config","obj","newObj","key","default","_options","element","fatal","scale","warn","center","longitude","latitude","basemap","stars","atmosphere","cors","proxy","loaded","cdn","isLoaded","bootstrap","err","error","log","dojoLoader","url","dojoRequire","esriConfig","Map","Geometry","Camera","Extent","SceneView","FeatureLayer","TileLayer","GraphicsLayer","watchUtils","Collection","UniqueValueRenderer","ClassBreaksRenderer","SimpleRenderer","ExtrudeSymbol3DLayer","PolygonSymbol3D","SimpleMarkerSymbol","PictureMarkerSymbol","SimpleLineSymbol","SimpleFillSymbol","Graphic","Point","PointSymbol3D","ObjectSymbol3DLayer","Search","jsonUtils","on","forEach","elm","request","corsEnabledServers","push","proxyUrl","layer","utils","renderer","map","createMap","view","createView","ground","layers","logCounter","errorCounter","fatalCounter","warnCounter","message","_object","console","prefix","Error","changeBasemap","newPosition","_map","View","search","container","viewingMode","starsEnabled","atmosphereEnabled","then","controlUI","watcherRunning","whenTrue","extent","allLayers","indx","arr","minScale","maxScale","raw","visible","esri","type","urlQuery","xmin","xmax","ymin","ymax","title","definitionExpression","environment","quality","searchWidget","ui","add","position","index","remove","_ref","coordinates","camera","goTo","tilt","heading","showAll","hideAll","setOpacity","setVisibility","addNew","create","layerConstructors","utilsConstructors","finalConstructor","id","constructor","_layer","fromJSON","findLayer","find","visibility","_opacity","opacity","changeVisibility","_layers","__webpack_exports__","getScript","document","querySelector","window","callback","script","createElement","src","dataset","onload","body","appendChild","script_1","onScriptLoad_1","removeEventListener","addEventListener"],"mappings":"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","file":"arceasy.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.global = exports.constructors = exports.start = exports.options = undefined;\n\nvar _esriLoader = __webpack_require__(6);\n\nvar esriLoader = _interopRequireWildcard(_esriLoader);\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _view = __webpack_require__(2);\n\nvar _config = __webpack_require__(4);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Simple function to set globaly options about the map\n * To start using ArcEasy you need invocate this function first\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars are enabled\n * @param  {Boolean} options.atmosphere - If atmosphere are enabled\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nvar options = function options(_options) {\n    if (_options) {\n        _options.element || logger.fatal('You need pass an valid DOM element');\n\n        _options.scale || logger.warn('You not set scale. Usign default scale: ' + _config.global.options.scale);\n\n        _options.center.longitude || logger.warn('You not set intial longitude. Usign default: ' + _config.global.options.longitude);\n\n        _options.center.latitude || logger.warn('You not set intial latitude. Usign default: ' + _config.global.options.latitude);\n\n        _options.basemap || logger.warn('You not set initial basemap. Usign default: ' + _config.global.options.basemap);\n\n        _options.stars || logger.warn('You not set if map usign stars. Usign default: ' + _config.global.options.stars);\n\n        _options.atmosphere || logger.warn('You not set if map usign atmosphere efect. Usign default: ' + _config.global.options.atmosphere);\n\n        _options.cors || logger.warn('You not set any URL to enable CORS requests');\n\n        _options.proxy || logger.warn('You not set any URL to proxy your requests');\n\n        _config.global.options = {\n            element: _options.element,\n            scale: _options.scale || _config.global.options.scale,\n            center: {\n                longitude: _options.longitude || _config.global.options.longitude,\n                latitude: _options.latitude || _config.global.options.latitude\n            },\n            basemap: _options.basemap || _config.global.options.basemap,\n            stars: _options.stars || _config.global.options.stars,\n            atmosphere: _options.atmosphere || _config.global.options.atmosphere,\n            cors: _options.cors || '',\n            proxy: _options.proxy || ''\n        };\n\n        _config.global.loaded = true;\n    } else {\n        logger.fatal('You need pass some informations to describe your map');\n    }\n};\n\n/**\n * The BigBang function\n * To create your map you need invocate this function\n * @param  {String} cdn - URL to official ESRI CDN or your own ESRI CDN provided by you\n */\nvar start = function start(cdn) {\n    if (cdn !== undefined && _config.global.loaded) {\n        // Has the ArcGIS API been added to the page?\n        if (!esriLoader.isLoaded()) {\n            // No, lazy load it the ArcGIS API before using its classes\n            esriLoader.bootstrap(function (err) {\n                if (err) {\n                    logger.error(err);\n                }\n                // Once it's loaded, create the map\n                logger.log('Waiting ESRI server...');\n                dojoLoader();\n            }, {\n                // Use a specific version instead of latest 4.x\n                url: cdn\n            });\n        } else {\n            // ArcGIS API is already loaded, just create the map\n            logger.log('Waiting ESRI server...');\n            dojoLoader();\n        }\n    } else {\n        logger.fatal('Fatal error! You must provider an CDN.');\n    }\n};\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nvar dojoLoader = function dojoLoader() {\n    if (_config.global.loaded) {\n        esriLoader.dojoRequire(['esri/config', 'esri/Map', 'esri/geometry/Geometry', 'esri/Camera', 'esri/geometry/Extent', 'esri/views/SceneView', 'esri/layers/FeatureLayer', 'esri/layers/TileLayer', 'esri/layers/GraphicsLayer', 'esri/core/watchUtils', 'esri/core/Collection', 'esri/renderers/UniqueValueRenderer', 'esri/renderers/ClassBreaksRenderer', 'esri/renderers/SimpleRenderer', 'esri/symbols/ExtrudeSymbol3DLayer', 'esri/symbols/PolygonSymbol3D', 'esri/symbols/SimpleMarkerSymbol', 'esri/symbols/PictureMarkerSymbol', 'esri/symbols/SimpleLineSymbol', 'esri/symbols/SimpleFillSymbol', 'esri/Graphic', 'esri/geometry/Point', 'esri/symbols/PointSymbol3D', 'esri/symbols/ObjectSymbol3DLayer', 'esri/widgets/Search', 'esri/renderers/support/jsonUtils', 'dojo/on', 'dojo/domReady!'], function (esriConfig, Map, Geometry, Camera, Extent, SceneView, FeatureLayer, TileLayer, GraphicsLayer, watchUtils, Collection, UniqueValueRenderer, ClassBreaksRenderer, SimpleRenderer, ExtrudeSymbol3DLayer, PolygonSymbol3D, SimpleMarkerSymbol, PictureMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, Graphic, Point, PointSymbol3D, ObjectSymbol3DLayer, Search, jsonUtils, on) {\n            _config.global.options.cors.forEach(function (elm) {\n                esriConfig.request.corsEnabledServers.push(elm);\n            });\n\n            esriConfig.request.proxyUrl = _config.global.options.proxy || '';\n\n            _config.constructors.Map = Map;\n            _config.constructors.SceneView = SceneView;\n\n            _config.constructors.layer.FeatureLayer = FeatureLayer;\n            _config.constructors.layer.TileLayer = TileLayer;\n            _config.constructors.layer.GraphicsLayer = GraphicsLayer;\n\n            _config.constructors.utils.watchUtils = watchUtils;\n            _config.constructors.utils.Search = Search;\n            _config.constructors.utils.jsonUtils = jsonUtils;\n            _config.constructors.utils.Extent = Extent;\n            _config.constructors.utils.Camera = Camera;\n\n            _config.constructors.renderer.UniqueValueRenderer = UniqueValueRenderer;\n            _config.constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer;\n            _config.constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer;\n            _config.constructors.renderer.PolygonSymbol3D = PolygonSymbol3D;\n            _config.constructors.renderer.SimpleRenderer = SimpleRenderer;\n            _config.constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol;\n            _config.constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol;\n            _config.constructors.renderer.SimpleLineSymbol = SimpleLineSymbol;\n            _config.constructors.renderer.SimpleFillSymbol = SimpleFillSymbol;\n            _config.constructors.renderer.Graphic = Graphic;\n            _config.constructors.renderer.Point = Point;\n            _config.constructors.renderer.PointSymbol3D = PointSymbol3D;\n            _config.constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer;\n\n            if (_config.constructors.Map && _config.constructors.SceneView) {\n                logger.log('All constructorss created!');\n\n                _config.global.map = createMap(_config.constructors.Map, _config.global.options.basemap);\n\n                _config.global.view = (0, _view.createView)(_config.global.map, _config.constructors.SceneView, _config.global.options);\n            } else {\n                logger.error('Error during creating the necessary constructors... Try again.');\n            }\n        });\n    } else {\n        logger.fatal('Fatal error! You need set some map options.');\n    }\n};\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nvar createMap = function createMap(Map, basemap) {\n    logger.log('Creating map...');\n\n    var map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation',\n        layers: []\n    });\n\n    return map;\n};\n\nexports.options = options;\nexports.start = start;\nexports.constructors = _config.constructors;\nexports.global = _config.global;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.warn = exports.fatal = exports.error = exports.log = undefined;\n\nvar _config = __webpack_require__(4);\n\nvar logCounter = 0;\nvar errorCounter = 0;\nvar fatalCounter = 0;\nvar warnCounter = 0;\n\nvar log = function log(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    logCounter++;\n\n    return console.log(logCounter + ' ' + _config.prefix + ' ' + message, object);\n};\n\nvar error = function error(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    errorCounter++;\n\n    return console.error(errorCounter + ' ' + _config.prefix + ' ' + message, object);\n};\n\nvar fatal = function fatal(message) {\n    fatalCounter++;\n\n    throw new Error(fatalCounter + ' ' + _config.prefix + ' ' + message);\n};\n\nvar warn = function warn(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    warnCounter++;\n\n    return console.warn(warnCounter + ' ' + _config.prefix + ' ' + message, object);\n};\n\nexports.log = log;\nexports.error = error;\nexports.fatal = fatal;\nexports.warn = warn;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.changeBasemap = exports.newPosition = exports.createView = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _map = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Create view inside map\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {Boolean} options.stars - If stars are enabled\n * @param  {Boolean} options.atmosphere - If atmosphere are enabled\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nvar createView = function createView(map, View, options) {\n    logger.log('Creating View...');\n\n    var search = _map.constructors.utils.Search,\n        watchUtils = _map.constructors.utils.watchUtils,\n        view = new View({\n        container: options.element,\n        map: map,\n        scale: options.scale,\n        center: [options.longitude, options.latitude],\n        viewingMode: 'global',\n        starsEnabled: options.stars,\n        atmosphereEnabled: options.atmosphere\n    });\n\n    view.then(function () {\n        logger.log('View ready!');\n\n        controlUI(view, search);\n        watcherRunning(map, view, watchUtils);\n    });\n\n    return view;\n},\n    watcherRunning = function watcherRunning(map, view, watchUtils) {\n    watchUtils.whenTrue(view, 'stationary', function () {\n        if (view.extent) {\n            logger.log('View changed! Mapping all layers...');\n\n            console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale);\n\n            map.allLayers.map(function (elm, indx, arr) {\n                if ((view.scale < elm.minScale && view.scale > elm.maxScale || elm.minScale === 0 && elm.maxScale === 0) && elm.raw !== undefined && elm.visible) {\n                    if (elm.raw.esri.type === 0) {\n                        var urlQuery = '!xmin=' + view.extent.xmin + '!xmax=' + view.extent.xmax + '!ymin=' + view.extent.ymin + '!ymax=' + view.extent.ymax;\n\n                        logger.log('Getting extent to request ' + elm.title);\n                        logger.log('Requesting to server: ' + elm.raw.esri.url + '/where=' + urlQuery);\n\n                        elm.definitionExpression = urlQuery;\n                    }\n\n                    logger.log('Drawing layer: ' + elm.title);\n                }\n            });\n        }\n    });\n},\n    controlUI = function controlUI(view, Search) {\n    logger.log('Changing UI elements...');\n    view.environment.atmosphere.quality = 'low';\n\n    var searchWidget = new Search({\n        view: view\n    });\n\n    view.ui.add(searchWidget, {\n        position: 'top-left',\n        index: 2\n    });\n\n    view.ui.remove(['zoom', 'compass', 'navigation-toggle']);\n},\n    newPosition = function newPosition(_ref) {\n    var coordinates = _ref.coordinates,\n        scale = _ref.scale,\n        camera = _ref.camera;\n\n    var view = _map.global.view;\n\n    view.goTo({\n        center: [coordinates.longitude, coordinates.latitude],\n        scale: scale,\n        tilt: camera.tilt,\n        heading: camera.heading\n    });\n\n    logger.log('Changing map position...');\n},\n    changeBasemap = function changeBasemap(basemap) {\n    var map = _map.global.map;\n\n    map.basemap = basemap;\n\n    logger.log('Change basemap...');\n};\n\nexports.createView = createView;\nexports.newPosition = newPosition;\nexports.changeBasemap = changeBasemap;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.showAll = exports.hideAll = exports.setOpacity = exports.setVisibility = exports.addNew = exports.create = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(4);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Recieve all layers to add on map\n * @constructor\n * @param  {Array} layers - List of layers\n * @param  {Number} layers[].esri.type - Define the type of layer\n * @param  {Number} [layers[].esri.type = 0] - Layer is FeatureLayer\n * @param  {Number} [layers[].esri.type = 1] - Layer is TileLayer\n */\nvar create = function create(layers) {\n    var layerConstructors = _config.constructors.layer;\n    var utilsConstructors = _config.constructors.utils;\n    var finalConstructor = void 0;\n\n    layers.forEach(function (layer, indx) {\n        if (layer.esri.type === 0) {\n            logger.log('Creating new Feature Layer...');\n            finalConstructor = layerConstructors.FeatureLayer;\n        } else if (layer.esri.type === 1) {\n            logger.log('Creating new Tile Layer...');\n            finalConstructor = layerConstructors.TileLayer;\n        }\n\n        logger.log('Adding id by index on layer');\n        layer.id = indx;\n\n        addNew(finalConstructor, utilsConstructors.watchUtils, utilsConstructors.jsonUtils, layer);\n    });\n};\n\n/**\n * Recieve a single layer object and add on map\n * @param {Function} constructor - ESRI Layer Constructor\n * @param {Function} watchUtils - ESRI watcher Constructor\n * @param {Function} jsonUtils - ESRI JSON Utility Constructor\n * @param {Object} _layer - Valid Layer object previously worked\n */\nvar addNew = function addNew(constructor, watchUtils, jsonUtils, _layer) {\n    logger.log('Adding layer on map: ' + _layer.title + ' | Initial visibility: ' + _layer.esri.visible);\n    logger.log('Loading layer from: ' + _layer.esri.url);\n\n    var layer = new constructor({\n        id: _layer.id,\n        url: _layer.esri.url,\n        definitionExpression: _layer.esri.definitionExpression,\n        raw: _layer,\n        visible: _layer.esri.visible\n    });\n\n    if (layer.raw.esri.renderer) {\n        logger.log('Applying renderer...');\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.esri.renderer);\n    }\n\n    // if (layer.raw.esri.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(function () {\n        logger.log('Layer ' + layer.title + ' ready!');\n        logger.log('View waiting changes...');\n\n        if (layer.raw.esri.type === 1) {\n            layer.minScale = layer.raw.esri.minScale !== null ? layer.raw.esri.minScale : 0;\n            layer.maxScale = layer.raw.esri.maxScale !== null ? layer.raw.esri.maxScale : 0;\n\n            logger.log('minScale: ' + layer.minScale + ' and maxScale: ' + layer.maxScale + ' defined manually');\n        }\n    });\n\n    _config.global.map.add(layer);\n};\n\n/**\n * Find specific layer in map\n * @param  {String|Number} _layer - Layer title or ID\n * @return {Object} Layer that will be manipulated\n */\nvar findLayer = function findLayer(_layer) {\n    var map = _config.global.map;\n\n    return map.allLayers.find(function (layer) {\n        if (layer.raw !== undefined) {\n            if (layer.raw.title === _layer || layer.raw.id === _layer) {\n                return layer;\n            }\n        }\n    });\n};\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} visibility - Set if layer is visible or not\n */\nvar setVisibility = function setVisibility(_layer, visibility) {\n    var layer = findLayer(_layer);\n\n    if (layer) {\n        layer.visible = visibility;\n        logger.log('Change visibility of layer: ' + _layer + ' to: ' + visibility);\n    } else {\n        logger.error('Can\\'t find layer: ' + _layer + ' in map. You already added this layer?');\n    }\n};\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nvar setOpacity = function setOpacity(_layer, _opacity) {\n    var layer = findLayer(_layer);\n\n    if (layer) {\n        layer.opacity = _opacity / 100;\n        logger.log('Change opacity of layer: ' + _layer + ' to: ' + _opacity);\n    } else {\n        logger.error('Can\\'t find layer: ' + _layer + ' in map. You already added this layer?');\n    }\n};\n\n/**\n * Change visibility of all layers using parameter\n * @param  {Boolean} visibility - new opacity\n */\nvar changeVisibility = function changeVisibility(visibility) {\n    var map = _config.global.map;\n\n    map.allLayers.map(function (layer) {\n        if (layer.raw !== undefined) {\n            if (layer.visible === !visibility) {\n                layer.visible = visibility;\n                logger.log('Change visibility of layer: ' + layer.raw.title + ' to: ' + visibility);\n            }\n        }\n    });\n};\n\n/**\n * Set visibility of all layers to false\n */\nvar hideAll = function hideAll() {\n    changeVisibility(false);\n};\n\n/**\n * Set visibility of all layers to true\n */\nvar showAll = function showAll() {\n    changeVisibility(true);\n};\n\nexports.create = create;\nexports.addNew = addNew;\nexports.setVisibility = setVisibility;\nexports.setOpacity = setOpacity;\nexports.hideAll = hideAll;\nexports.showAll = showAll;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar prefix = exports.prefix = '[ArcEasy]';\n\nvar global = exports.global = {\n    map: '',\n    view: '',\n    options: {\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: '',\n        atmosphere: '',\n        cors: '',\n        proxy: ''\n    },\n    loaded: false\n};\n\nvar constructors = exports.constructors = {\n    layer: {\n        FeatureLayer: '',\n        TileLayer: ''\n    },\n    map: '',\n    container: '',\n    view: '',\n    utils: {\n        watchUtils: '',\n        Search: '',\n        jsonUtils: '',\n        Extent: ''\n    },\n    renderer: {\n        UniqueValueRenderer: '',\n        ClassBreaksRenderer: '',\n        ExtrudeSymbol3DLayer: '',\n        PolygonSymbol3D: '',\n        SimpleRenderer: '',\n        SimpleMarkerSymbol: '',\n        PictureMarkerSymbol: '',\n        SimpleLineSymbol: '',\n        SimpleFillSymbol: ''\n    }\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.layers = exports.view = exports.map = undefined;\n\nvar _map = __webpack_require__(0);\n\nvar map = _interopRequireWildcard(_map);\n\nvar _view = __webpack_require__(2);\n\nvar view = _interopRequireWildcard(_view);\n\nvar _layers = __webpack_require__(3);\n\nvar layers = _interopRequireWildcard(_layers);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.map = map;\nexports.view = view;\nexports.layers = layers;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"isLoaded\"] = isLoaded;\n/* harmony export (immutable) */ __webpack_exports__[\"bootstrap\"] = bootstrap;\n/* harmony export (immutable) */ __webpack_exports__[\"dojoRequire\"] = dojoRequire;\n// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nfunction isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nfunction bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nfunction dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n});\n//# sourceMappingURL=esri-loader.js.map\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// arceasy.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 26c14f863ebf34e1f200","import * as esriLoader from 'esri-loader'\nimport * as logger from './logger'\nimport { createView } from './view'\nimport { global, constructors } from './config'\n\n/**\n * Simple function to set globaly options about the map\n * To start using ArcEasy you need invocate this function first\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars are enabled\n * @param  {Boolean} options.atmosphere - If atmosphere are enabled\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nconst options = options => {\n    if (options) {\n        options.element ||\n            logger.fatal(`You need pass an valid DOM element`)\n\n        options.scale ||\n            logger.warn(`You not set scale. Usign default scale: ${global.options.scale}`)\n\n        options.center.longitude ||\n            logger.warn(`You not set intial longitude. Usign default: ${global.options.longitude}`)\n\n        options.center.latitude ||\n            logger.warn(`You not set intial latitude. Usign default: ${global.options.latitude}`)\n\n        options.basemap ||\n            logger.warn(`You not set initial basemap. Usign default: ${global.options.basemap}`)\n\n        options.stars ||\n            logger.warn(`You not set if map usign stars. Usign default: ${global.options.stars}`)\n\n        options.atmosphere ||\n            logger.warn(`You not set if map usign atmosphere efect. Usign default: ${global.options.atmosphere}`)\n\n        options.cors ||\n            logger.warn(`You not set any URL to enable CORS requests`)\n\n        options.proxy ||\n            logger.warn(`You not set any URL to proxy your requests`)\n\n        global.options = {\n            element: options.element,\n            scale: options.scale || global.options.scale,\n            center: {\n                longitude: options.longitude || global.options.longitude,\n                latitude: options.latitude || global.options.latitude\n            },\n            basemap: options.basemap || global.options.basemap,\n            stars: options.stars || global.options.stars,\n            atmosphere: options.atmosphere || global.options.atmosphere,\n            cors: options.cors || '',\n            proxy: options.proxy || ''\n        }\n\n        global.loaded = true\n    } else {\n        logger.fatal(`You need pass some informations to describe your map`)\n    }\n}\n\n/**\n * The BigBang function\n * To create your map you need invocate this function\n * @param  {String} cdn - URL to official ESRI CDN or your own ESRI CDN provided by you\n */\nconst start = cdn => {\n    if (cdn !== undefined && global.loaded) {\n        // Has the ArcGIS API been added to the page?\n        if (!esriLoader.isLoaded()) {\n            // No, lazy load it the ArcGIS API before using its classes\n            esriLoader.bootstrap(err => {\n                if (err) {\n                    logger.error(err)\n                }\n                // Once it's loaded, create the map\n                logger.log(`Waiting ESRI server...`)\n                dojoLoader()\n            }, {\n                // Use a specific version instead of latest 4.x\n                url: cdn\n            })\n        } else {\n            // ArcGIS API is already loaded, just create the map\n            logger.log(`Waiting ESRI server...`)\n            dojoLoader()\n        }\n    } else {\n        logger.fatal(`Fatal error! You must provider an CDN.`)\n    }\n}\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nconst dojoLoader = () => {\n    if (global.loaded) {\n        esriLoader.dojoRequire([\n            'esri/config',\n            'esri/Map',\n            'esri/geometry/Geometry',\n            'esri/Camera',\n            'esri/geometry/Extent',\n            'esri/views/SceneView',\n            'esri/layers/FeatureLayer',\n            'esri/layers/TileLayer',\n            'esri/layers/GraphicsLayer',\n            'esri/core/watchUtils',\n            'esri/core/Collection',\n            'esri/renderers/UniqueValueRenderer',\n            'esri/renderers/ClassBreaksRenderer',\n            'esri/renderers/SimpleRenderer',\n            'esri/symbols/ExtrudeSymbol3DLayer',\n            'esri/symbols/PolygonSymbol3D',\n            'esri/symbols/SimpleMarkerSymbol',\n            'esri/symbols/PictureMarkerSymbol',\n            'esri/symbols/SimpleLineSymbol',\n            'esri/symbols/SimpleFillSymbol',\n            'esri/Graphic',\n            'esri/geometry/Point',\n            'esri/symbols/PointSymbol3D',\n            'esri/symbols/ObjectSymbol3DLayer',\n            'esri/widgets/Search',\n            'esri/renderers/support/jsonUtils',\n            'dojo/on',\n            'dojo/domReady!'\n        ], (\n            esriConfig,\n            Map,\n            Geometry,\n            Camera,\n            Extent,\n            SceneView,\n            FeatureLayer,\n            TileLayer,\n            GraphicsLayer,\n            watchUtils,\n            Collection,\n            UniqueValueRenderer,\n            ClassBreaksRenderer,\n            SimpleRenderer,\n            ExtrudeSymbol3DLayer,\n            PolygonSymbol3D,\n            SimpleMarkerSymbol,\n            PictureMarkerSymbol,\n            SimpleLineSymbol,\n            SimpleFillSymbol,\n            Graphic,\n            Point,\n            PointSymbol3D,\n            ObjectSymbol3DLayer,\n            Search,\n            jsonUtils,\n            on\n        ) => {\n            global.options.cors.forEach(elm => {\n                esriConfig.request.corsEnabledServers.push(elm)\n            })\n\n            esriConfig.request.proxyUrl = global.options.proxy || ''\n\n            constructors.Map = Map\n            constructors.SceneView = SceneView\n\n            constructors.layer.FeatureLayer = FeatureLayer\n            constructors.layer.TileLayer = TileLayer\n            constructors.layer.GraphicsLayer = GraphicsLayer\n\n            constructors.utils.watchUtils = watchUtils\n            constructors.utils.Search = Search\n            constructors.utils.jsonUtils = jsonUtils\n            constructors.utils.Extent = Extent\n            constructors.utils.Camera = Camera\n\n            constructors.renderer.UniqueValueRenderer = UniqueValueRenderer\n            constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer\n            constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer\n            constructors.renderer.PolygonSymbol3D = PolygonSymbol3D\n            constructors.renderer.SimpleRenderer = SimpleRenderer\n            constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol\n            constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol\n            constructors.renderer.SimpleLineSymbol = SimpleLineSymbol\n            constructors.renderer.SimpleFillSymbol = SimpleFillSymbol\n            constructors.renderer.Graphic = Graphic\n            constructors.renderer.Point = Point\n            constructors.renderer.PointSymbol3D = PointSymbol3D\n            constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer\n\n            if (constructors.Map && constructors.SceneView) {\n                logger.log(`All constructorss created!`)\n\n                global.map = createMap(constructors.Map, global.options.basemap)\n\n                global.view = createView(\n                    global.map,\n                    constructors.SceneView,\n                    global.options\n                )\n            } else {\n                logger.error(`Error during creating the necessary constructors... Try again.`)\n            }\n        })\n    } else {\n        logger.fatal(`Fatal error! You need set some map options.`)\n    }\n}\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nconst createMap = (Map, basemap) => {\n    logger.log(`Creating map...`)\n\n    const map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation',\n        layers: []\n    })\n\n    return map\n}\n\nexport {\n    options,\n    start,\n    constructors,\n    global\n}\n\n\n\n// WEBPACK FOOTER //\n// ./map.js","import { prefix } from './config'\n\nlet logCounter = 0\nlet errorCounter = 0\nlet fatalCounter = 0\nlet warnCounter = 0\n\nconst log = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    logCounter++\n\n    return console.log(`${logCounter} ${prefix} ${message}`, object)\n}\n\nconst error = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    errorCounter++\n\n    return console.error(`${errorCounter} ${prefix} ${message}`, object)\n}\n\nconst fatal = (message) => {\n    fatalCounter++\n\n    throw new Error(`${fatalCounter} ${prefix} ${message}`)\n}\n\nconst warn = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    warnCounter++\n\n    return console.warn(`${warnCounter} ${prefix} ${message}`, object)\n}\n\nexport {\n    log,\n    error,\n    fatal,\n    warn\n}\n\n\n\n// WEBPACK FOOTER //\n// ./logger.js","import * as logger from './logger'\nimport { constructors, global } from './map'\n\n/**\n * Create view inside map\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {Boolean} options.stars - If stars are enabled\n * @param  {Boolean} options.atmosphere - If atmosphere are enabled\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nconst createView = (map, View, options) => {\n        logger.log('Creating View...')\n\n        const search = constructors.utils.Search,\n            watchUtils = constructors.utils.watchUtils,\n            view = new View({\n                container: options.element,\n                map: map,\n                scale: options.scale,\n                center: [\n                    options.longitude,\n                    options.latitude\n                ],\n                viewingMode: 'global',\n                starsEnabled: options.stars,\n                atmosphereEnabled: options.atmosphere\n            })\n\n        view.then(() => {\n            logger.log('View ready!')\n\n            controlUI(view, search)\n            watcherRunning(map, view, watchUtils)\n        })\n\n        return view\n    },\n    watcherRunning = (map, view, watchUtils) => {\n        watchUtils.whenTrue(view, 'stationary', () => {\n            if (view.extent) {\n                logger.log(`View changed! Mapping all layers...`)\n\n                console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale)\n\n                map.allLayers.map((elm, indx, arr) => {\n                    if (((view.scale < elm.minScale &&\n                            view.scale > elm.maxScale) ||\n                            (elm.minScale === 0 &&\n                            elm.maxScale === 0)) &&\n                            (elm.raw !== undefined &&\n                            elm.visible)) {\n                        if (elm.raw.esri.type === 0) {\n                            const urlQuery = `!xmin=${view.extent.xmin}!xmax=${view.extent.xmax}!ymin=${view.extent.ymin}!ymax=${view.extent.ymax}`\n\n                            logger.log(`Getting extent to request ${elm.title}`)\n                            logger.log(`Requesting to server: ${elm.raw.esri.url}/where=${urlQuery}`)\n\n                            elm.definitionExpression = urlQuery\n                        }\n\n                        logger.log(`Drawing layer: ${elm.title}`)\n                    }\n                })\n            }\n        })\n    },\n    controlUI = (view, Search) => {\n        logger.log('Changing UI elements...')\n        view.environment.atmosphere.quality = 'low'\n\n        const searchWidget = new Search({\n            view: view\n        })\n\n        view.ui.add(searchWidget, {\n            position: 'top-left',\n            index: 2\n        })\n\n        view.ui.remove([\n            'zoom',\n            'compass',\n            'navigation-toggle'\n        ])\n    },\n    newPosition = ({coordinates, scale, camera}) => {\n        const view = global.view\n\n        view.goTo({\n            center: [\n                coordinates.longitude,\n                coordinates.latitude\n            ],\n            scale: scale,\n            tilt: camera.tilt,\n            heading: camera.heading\n        })\n\n        logger.log(`Changing map position...`)\n    },\n    changeBasemap = basemap => {\n        const map = global.map\n\n        map.basemap = basemap\n\n        logger.log(`Change basemap...`)\n    }\n\nexport {\n    createView,\n    newPosition,\n    changeBasemap\n}\n\n\n\n// WEBPACK FOOTER //\n// ./view.js","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Recieve all layers to add on map\n * @constructor\n * @param  {Array} layers - List of layers\n * @param  {Number} layers[].esri.type - Define the type of layer\n * @param  {Number} [layers[].esri.type = 0] - Layer is FeatureLayer\n * @param  {Number} [layers[].esri.type = 1] - Layer is TileLayer\n */\nconst create = layers => {\n    const layerConstructors = constructors.layer\n    const utilsConstructors = constructors.utils\n    let finalConstructor\n\n    layers.forEach((layer, indx) => {\n        if (layer.esri.type === 0) {\n            logger.log(`Creating new Feature Layer...`)\n            finalConstructor = layerConstructors.FeatureLayer\n        } else if (layer.esri.type === 1) {\n            logger.log(`Creating new Tile Layer...`)\n            finalConstructor = layerConstructors.TileLayer\n        }\n\n        logger.log(`Adding id by index on layer`)\n        layer.id = indx\n\n        addNew(\n            finalConstructor,\n            utilsConstructors.watchUtils,\n            utilsConstructors.jsonUtils,\n            layer\n        )\n    })\n}\n\n/**\n * Recieve a single layer object and add on map\n * @param {Function} constructor - ESRI Layer Constructor\n * @param {Function} watchUtils - ESRI watcher Constructor\n * @param {Function} jsonUtils - ESRI JSON Utility Constructor\n * @param {Object} _layer - Valid Layer object previously worked\n */\nconst addNew = (constructor, watchUtils, jsonUtils, _layer) => {\n    logger.log(`Adding layer on map: ${_layer.title} | Initial visibility: ${_layer.esri.visible}`)\n    logger.log(`Loading layer from: ${_layer.esri.url}`)\n\n    const layer = new constructor({\n        id: _layer.id,\n        url: _layer.esri.url,\n        definitionExpression: _layer.esri.definitionExpression,\n        raw: _layer,\n        visible: _layer.esri.visible\n    })\n\n    if (layer.raw.esri.renderer) {\n        logger.log(`Applying renderer...`)\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.esri.renderer)\n    }\n\n    // if (layer.raw.esri.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(() => {\n        logger.log(`Layer ${layer.title} ready!`)\n        logger.log(`View waiting changes...`)\n\n        if (layer.raw.esri.type === 1) {\n            layer.minScale = layer.raw.esri.minScale !== null\n                ? layer.raw.esri.minScale\n                : 0\n            layer.maxScale = layer.raw.esri.maxScale !== null\n                ? layer.raw.esri.maxScale\n                : 0\n\n            logger.log(`minScale: ${layer.minScale} and maxScale: ${layer.maxScale} defined manually`)\n        }\n    })\n\n    global.map.add(layer)\n}\n\n/**\n * Find specific layer in map\n * @param  {String|Number} _layer - Layer title or ID\n * @return {Object} Layer that will be manipulated\n */\nconst findLayer = _layer => {\n    const map = global.map\n\n    return map.allLayers.find(layer => {\n        if (layer.raw !== undefined) {\n            if (layer.raw.title === _layer ||\n                layer.raw.id === _layer) {\n                return layer\n            }\n        }\n    })\n}\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} visibility - Set if layer is visible or not\n */\nconst setVisibility = (_layer, visibility) => {\n    const layer = findLayer(_layer)\n\n    if (layer) {\n        layer.visible = visibility\n        logger.log(`Change visibility of layer: ${_layer} to: ${visibility}`)\n    } else {\n        logger.error(`Can't find layer: ${_layer} in map. You already added this layer?`)\n    }\n}\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nconst setOpacity = (_layer, _opacity) => {\n    const layer = findLayer(_layer)\n\n    if (layer) {\n        layer.opacity = _opacity / 100\n        logger.log(`Change opacity of layer: ${_layer} to: ${_opacity}`)\n    } else {\n        logger.error(`Can't find layer: ${_layer} in map. You already added this layer?`)\n    }\n}\n\n/**\n * Change visibility of all layers using parameter\n * @param  {Boolean} visibility - new opacity\n */\nconst changeVisibility = visibility => {\n    const map = global.map\n\n    map.allLayers.map(layer => {\n        if (layer.raw !== undefined) {\n            if (layer.visible === !visibility) {\n                layer.visible = visibility\n                logger.log(`Change visibility of layer: ${layer.raw.title} to: ${visibility}`)\n            }\n        }\n    })\n}\n\n/**\n * Set visibility of all layers to false\n */\nconst hideAll = () => {\n    changeVisibility(false)\n}\n\n/**\n * Set visibility of all layers to true\n */\nconst showAll = () => {\n    changeVisibility(true)\n}\n\nexport {\n    create,\n    addNew,\n    setVisibility,\n    setOpacity,\n    hideAll,\n    showAll\n}\n\n\n\n// WEBPACK FOOTER //\n// ./layers.js","export const prefix = '[ArcEasy]'\n\nexport const global = {\n    map: '',\n    view: '',\n    options: {\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: '',\n        atmosphere: '',\n        cors: '',\n        proxy: ''\n    },\n    loaded: false\n}\n\nexport const constructors = {\n    layer: {\n        FeatureLayer: '',\n        TileLayer: ''\n    },\n    map: '',\n    container: '',\n    view: '',\n    utils: {\n        watchUtils: '',\n        Search: '',\n        jsonUtils: '',\n        Extent: ''\n    },\n    renderer: {\n        UniqueValueRenderer: '',\n        ClassBreaksRenderer: '',\n        ExtrudeSymbol3DLayer: '',\n        PolygonSymbol3D: '',\n        SimpleRenderer: '',\n        SimpleMarkerSymbol: '',\n        PictureMarkerSymbol: '',\n        SimpleLineSymbol: '',\n        SimpleFillSymbol: ''\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./config.js","import * as map from './map'\nimport * as view from './view'\nimport * as layers from './layers'\n\nexport {\n    map,\n    view,\n    layers\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nexport function isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nexport function bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nexport function dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\nexport default {\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n};\n//# sourceMappingURL=esri-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/esri-loader/src/esri-loader.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}