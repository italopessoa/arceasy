{"version":3,"sources":["webpack:///arceasy.js","webpack:///webpack/bootstrap 001398967add9b8fa196","webpack:///./map.js","webpack:///./logger.js","webpack:///./view.js","webpack:///./layers.js","webpack:///./config.js","webpack:///./index.js","webpack:///../~/esri-loader/src/esri-loader.js"],"names":["modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","global","constructors","start","options","undefined","_esriLoader","esriLoader","_interopRequireWildcard","_logger","logger","_view","obj","newObj","key","default","map","view","element","scale","center","longitude","latitude","basemap","stars","atmosphere","cors","proxy","loaded","layer","FeatureLayer","TileLayer","container","utils","watchUtils","Search","jsonUtils","Extent","renderer","UniqueValueRenderer","ClassBreaksRenderer","ExtrudeSymbol3DLayer","PolygonSymbol3D","SimpleRenderer","SimpleMarkerSymbol","PictureMarkerSymbol","SimpleLineSymbol","SimpleFillSymbol","_options","fatal","warn","cdn","isLoaded","bootstrap","err","error","log","dojoLoader","url","dojoRequire","esriConfig","Map","Geometry","Camera","SceneView","GraphicsLayer","Collection","Graphic","Point","PointSymbol3D","ObjectSymbol3DLayer","on","forEach","elm","request","corsEnabledServers","push","proxyUrl","createMap","createView","ground","layers","_config","logCounter","errorCounter","fatalCounter","warnCounter","message","_object","console","prefix","Error","changeBasemap","newPosition","_map","View","search","viewingMode","starsEnabled","atmosphereEnabled","then","controlUI","watcherRunning","whenTrue","extent","allLayers","indx","arr","minScale","maxScale","raw","visible","esri","type","urlQuery","xmin","xmax","ymin","ymax","title","definitionExpression","environment","quality","searchWidget","ui","add","position","index","remove","_ref","coordinates","camera","goTo","tilt","heading","showAll","hideAll","setOpacity","setVisibility","addNew","create","layerConstructors","utilsConstructors","finalConstructor","id","constructor","_layer","fromJSON","status","_opacity","opacity","_layers","__webpack_exports__","getScript","document","querySelector","window","callback","script","createElement","src","dataset","onload","body","appendChild","script_1","onScriptLoad_1","removeEventListener","addEventListener"],"mappings":"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","file":"arceasy.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.global = exports.constructors = exports.start = exports.options = undefined;\n\nvar _esriLoader = __webpack_require__(6);\n\nvar esriLoader = _interopRequireWildcard(_esriLoader);\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _view = __webpack_require__(2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar global = {\n    map: '',\n    view: '',\n    options: {\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: '',\n        atmosphere: '',\n        cors: '',\n        proxy: ''\n    },\n    loaded: false\n};\n\nvar constructors = {\n    layer: {\n        FeatureLayer: '',\n        TileLayer: ''\n    },\n    map: '',\n    container: '',\n    view: '',\n    utils: {\n        watchUtils: '',\n        Search: '',\n        jsonUtils: '',\n        Extent: ''\n    },\n    renderer: {\n        UniqueValueRenderer: '',\n        ClassBreaksRenderer: '',\n        ExtrudeSymbol3DLayer: '',\n        PolygonSymbol3D: '',\n        SimpleRenderer: '',\n        SimpleMarkerSymbol: '',\n        PictureMarkerSymbol: '',\n        SimpleLineSymbol: '',\n        SimpleFillSymbol: ''\n    }\n};\n\n/**\n * To start using ArcEasy you need invocate this function first.\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars are enabled\n * @param  {Boolean} options.atmosphere - If atmosphere are enabled\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nvar options = function options(_options) {\n    if (_options) {\n        _options.element || logger.fatal('You need pass an valid DOM element');\n\n        _options.scale || logger.warn('You not set scale. Usign default scale: ' + global.options.scale);\n\n        _options.center.longitude || logger.warn('You not set intial longitude. Usign default: ' + global.options.longitude);\n\n        _options.center.latitude || logger.warn('You not set intial latitude. Usign default: ' + global.options.latitude);\n\n        _options.basemap || logger.warn('You not set initial basemap. Usign default: ' + global.options.basemap);\n\n        _options.stars || logger.warn('You not set if map usign stars. Usign default: ' + global.options.stars);\n\n        _options.atmosphere || logger.warn('You not set if map usign atmosphere efect. Usign default: ' + global.options.atmosphere);\n\n        _options.cors || logger.warn('You not set any URL to enable CORS requests');\n\n        _options.proxy || logger.warn('You not set any URL to proxy your requests');\n\n        global.options = {\n            element: _options.element,\n            scale: _options.scale || global.options.scale,\n            center: {\n                longitude: _options.longitude || global.options.longitude,\n                latitude: _options.latitude || global.options.latitude\n            },\n            basemap: _options.basemap || global.options.basemap,\n            stars: _options.stars || global.options.stars,\n            atmosphere: _options.atmosphere || global.options.atmosphere,\n            cors: _options.cors || '',\n            proxy: _options.proxy || ''\n        };\n\n        global.loaded = true;\n    } else {\n        logger.fatal('You need pass some informations to describe your map');\n    }\n};\n\n/**\n * The BigBang function.\n * To create your map you need invocate this function\n * @param  {String} cdn - URL to official ESRI CDN or your own ESRI CDN provided by you\n */\nvar start = function start(cdn) {\n    if (cdn !== undefined && global.loaded) {\n        // Has the ArcGIS API been added to the page?\n        if (!esriLoader.isLoaded()) {\n            // No, lazy load it the ArcGIS API before using its classes\n            esriLoader.bootstrap(function (err) {\n                if (err) {\n                    logger.error(err);\n                }\n                // Once it's loaded, create the map\n                logger.log('Waiting ESRI server...');\n                dojoLoader();\n            }, {\n                // Use a specific version instead of latest 4.x\n                url: cdn\n            });\n        } else {\n            // ArcGIS API is already loaded, just create the map\n            logger.log('Waiting ESRI server...');\n            dojoLoader();\n        }\n    } else {\n        logger.fatal('Fatal error! You must provider an CDN.');\n    }\n};\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nvar dojoLoader = function dojoLoader() {\n    if (global.loaded) {\n        esriLoader.dojoRequire(['esri/config', 'esri/Map', 'esri/geometry/Geometry', 'esri/Camera', 'esri/geometry/Extent', 'esri/views/SceneView', 'esri/layers/FeatureLayer', 'esri/layers/TileLayer', 'esri/layers/GraphicsLayer', 'esri/core/watchUtils', 'esri/core/Collection', 'esri/renderers/UniqueValueRenderer', 'esri/renderers/ClassBreaksRenderer', 'esri/renderers/SimpleRenderer', 'esri/symbols/ExtrudeSymbol3DLayer', 'esri/symbols/PolygonSymbol3D', 'esri/symbols/SimpleMarkerSymbol', 'esri/symbols/PictureMarkerSymbol', 'esri/symbols/SimpleLineSymbol', 'esri/symbols/SimpleFillSymbol', 'esri/Graphic', 'esri/geometry/Point', 'esri/symbols/PointSymbol3D', 'esri/symbols/ObjectSymbol3DLayer', 'esri/widgets/Search', 'esri/renderers/support/jsonUtils', 'dojo/on', 'dojo/domReady!'], function (esriConfig, Map, Geometry, Camera, Extent, SceneView, FeatureLayer, TileLayer, GraphicsLayer, watchUtils, Collection, UniqueValueRenderer, ClassBreaksRenderer, SimpleRenderer, ExtrudeSymbol3DLayer, PolygonSymbol3D, SimpleMarkerSymbol, PictureMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, Graphic, Point, PointSymbol3D, ObjectSymbol3DLayer, Search, jsonUtils, on) {\n            global.options.cors.forEach(function (elm) {\n                esriConfig.request.corsEnabledServers.push(elm);\n            });\n\n            esriConfig.request.proxyUrl = global.options.proxy || '';\n\n            constructors.Map = Map;\n            constructors.SceneView = SceneView;\n\n            constructors.layer.FeatureLayer = FeatureLayer;\n            constructors.layer.TileLayer = TileLayer;\n            constructors.layer.GraphicsLayer = GraphicsLayer;\n\n            constructors.utils.watchUtils = watchUtils;\n            constructors.utils.Search = Search;\n            constructors.utils.jsonUtils = jsonUtils;\n            constructors.utils.Extent = Extent;\n            constructors.utils.Camera = Camera;\n\n            constructors.renderer.UniqueValueRenderer = UniqueValueRenderer;\n            constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer;\n            constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer;\n            constructors.renderer.PolygonSymbol3D = PolygonSymbol3D;\n            constructors.renderer.SimpleRenderer = SimpleRenderer;\n            constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol;\n            constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol;\n            constructors.renderer.SimpleLineSymbol = SimpleLineSymbol;\n            constructors.renderer.SimpleFillSymbol = SimpleFillSymbol;\n            constructors.renderer.Graphic = Graphic;\n            constructors.renderer.Point = Point;\n            constructors.renderer.PointSymbol3D = PointSymbol3D;\n            constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer;\n\n            if (constructors.Map && constructors.SceneView) {\n                logger.log('All constructorss created!');\n\n                global.map = createMap(constructors.Map, global.options.basemap);\n\n                global.view = (0, _view.createView)(global.map, constructors.SceneView, global.options);\n            } else {\n                logger.error('Error during creating the necessary constructors... Try again.');\n            }\n        });\n    } else {\n        logger.fatal('Fatal error! You need set some map options.');\n    }\n};\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nvar createMap = function createMap(Map, basemap) {\n    logger.log('Creating map...');\n\n    var map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation',\n        layers: []\n    });\n\n    return map;\n};\n\nexports.options = options;\nexports.start = start;\nexports.constructors = constructors;\nexports.global = global;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.warn = exports.fatal = exports.error = exports.log = undefined;\n\nvar _config = __webpack_require__(4);\n\nvar logCounter = 0;\nvar errorCounter = 0;\nvar fatalCounter = 0;\nvar warnCounter = 0;\n\nvar log = function log(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    logCounter++;\n\n    return console.log(logCounter + ' ' + _config.prefix + ' ' + message, object);\n};\n\nvar error = function error(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    errorCounter++;\n\n    return console.error(errorCounter + ' ' + _config.prefix + ' ' + message, object);\n};\n\nvar fatal = function fatal(message) {\n    fatalCounter++;\n\n    throw new Error(fatalCounter + ' ' + _config.prefix + ' ' + message);\n};\n\nvar warn = function warn(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    warnCounter++;\n\n    return console.warn(warnCounter + ' ' + _config.prefix + ' ' + message, object);\n};\n\nexports.log = log;\nexports.error = error;\nexports.fatal = fatal;\nexports.warn = warn;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.changeBasemap = exports.newPosition = exports.createView = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _map = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Create view inside map\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {Boolean} options.stars - If stars are enabled\n * @param  {Boolean} options.atmosphere - If atmosphere are enabled\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nvar createView = function createView(map, View, options) {\n    logger.log('Creating View...');\n\n    var search = _map.constructors.utils.Search,\n        watchUtils = _map.constructors.utils.watchUtils,\n        view = new View({\n        container: options.element,\n        map: map,\n        scale: options.scale,\n        center: [options.longitude, options.latitude],\n        viewingMode: 'global',\n        starsEnabled: options.stars,\n        atmosphereEnabled: options.atmosphere\n    });\n\n    view.then(function () {\n        logger.log('View ready!');\n\n        controlUI(view, search);\n        watcherRunning(map, view, watchUtils);\n    });\n\n    return view;\n},\n    watcherRunning = function watcherRunning(map, view, watchUtils) {\n    watchUtils.whenTrue(view, 'stationary', function () {\n        if (view.extent) {\n            logger.log('View changed! Mapping all layers...');\n\n            console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale);\n\n            map.allLayers.map(function (elm, indx, arr) {\n                if ((view.scale < elm.minScale && view.scale > elm.maxScale || elm.minScale === 0 && elm.maxScale === 0) && elm.raw !== undefined && elm.visible) {\n                    if (elm.raw.esri.type === 0) {\n                        var urlQuery = '!xmin=' + view.extent.xmin + '!xmax=' + view.extent.xmax + '!ymin=' + view.extent.ymin + '!ymax=' + view.extent.ymax;\n\n                        logger.log('Getting extent to request ' + elm.title);\n                        logger.log('Requesting to server: ' + elm.raw.esri.url + '/where=' + urlQuery);\n\n                        elm.definitionExpression = urlQuery;\n                    }\n\n                    logger.log('Drawing layer: ' + elm.title);\n                }\n            });\n        }\n    });\n},\n    controlUI = function controlUI(view, Search) {\n    logger.log('Changing UI elements...');\n    view.environment.atmosphere.quality = 'low';\n\n    var searchWidget = new Search({\n        view: view\n    });\n\n    view.ui.add(searchWidget, {\n        position: 'top-left',\n        index: 2\n    });\n\n    view.ui.remove(['zoom', 'compass', 'navigation-toggle']);\n},\n    newPosition = function newPosition(_ref) {\n    var coordinates = _ref.coordinates,\n        scale = _ref.scale,\n        camera = _ref.camera;\n\n    var view = _map.global.view;\n\n    view.goTo({\n        center: [coordinates.longitude, coordinates.latitude],\n        scale: scale,\n        tilt: camera.tilt,\n        heading: camera.heading\n    });\n\n    logger.log('Changing map position...');\n},\n    changeBasemap = function changeBasemap(basemap) {\n    var map = _map.global.map;\n\n    map.basemap = basemap;\n\n    logger.log('Change basemap...');\n};\n\nexports.createView = createView;\nexports.newPosition = newPosition;\nexports.changeBasemap = changeBasemap;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.showAll = exports.hideAll = exports.setOpacity = exports.setVisibility = exports.addNew = exports.create = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _map = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Recieve all layers to add on map\n * @constructor\n * @param  {Array} layers - List of layers\n * @param  {Number} layers[].esri.type - Define the type of layer\n * @param  {Number} [layers[].esri.type = 0] - Layer is FeatureLayer\n * @param  {Number} [layers[].esri.type = 1] - Layer is TileLayer\n */\nvar create = function create(layers) {\n    layers.forEach(function (elm, indx) {\n        var layerConstructors = _map.constructors.layer;\n        var utilsConstructors = _map.constructors.utils;\n        var finalConstructor = void 0;\n\n        if (elm.esri.type === 0) {\n            logger.log('Creating new Feature Layer...');\n            finalConstructor = layerConstructors.FeatureLayer;\n        } else if (elm.esri.type === 1) {\n            logger.log('Creating new Tile Layer...');\n            finalConstructor = layerConstructors.TileLayer;\n        }\n\n        logger.log('Adding id by index on layer');\n        elm.id = indx;\n\n        addNew(finalConstructor, utilsConstructors.watchUtils, utilsConstructors.jsonUtils, elm);\n    });\n};\n\n/**\n * Recieve a single layer object and add on map\n * @param {Function} constructor - ESRI Layer Constructor\n * @param {Function} watchUtils - ESRI watcher Constructor\n * @param {Function} jsonUtils - ESRI JSON Utility Constructor\n * @param {Object} _layer - Valid Layer object previously worked\n */\nvar addNew = function addNew(constructor, watchUtils, jsonUtils, _layer) {\n    logger.log('Adding layer on map: ' + _layer.title + ' | Initial visibility: ' + _layer.esri.visible);\n    logger.log('Loading layer from: ' + _layer.esri.url);\n\n    var layer = new constructor({\n        id: _layer.id,\n        url: _layer.esri.url,\n        definitionExpression: _layer.esri.definitionExpression,\n        raw: _layer,\n        visible: _layer.esri.visible\n    });\n\n    if (layer.raw.esri.renderer) {\n        logger.log('Applying renderer...');\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.esri.renderer);\n    }\n\n    // if (layer.raw.esri.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(function () {\n        logger.log('Layer ' + layer.title + ' ready!');\n        logger.log('View waiting changes...');\n\n        if (layer.raw.esri.type === 1) {\n            layer.minScale = layer.raw.esri.minScale !== null ? layer.raw.esri.minScale : 0;\n            layer.maxScale = layer.raw.esri.maxScale !== null ? layer.raw.esri.maxScale : 0;\n\n            logger.log('minScale: ' + layer.minScale + ' and maxScale: ' + layer.maxScale + ' defined manually');\n        }\n    });\n\n    _map.global.map.add(layer);\n};\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} status - Set if layer is visible or not\n */\nvar setVisibility = function setVisibility(_layer, status) {\n    var map = _map.global.map;\n\n    map.allLayers.map(function (elm, indx, arr) {\n        if (elm.raw !== undefined) {\n            if (elm.raw.title === _layer || elm.raw.id === _layer) {\n                elm.visible = status;\n                logger.log('Change visibility of layer: ' + _layer + ' to: ' + status);\n            }\n        }\n    });\n};\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nvar setOpacity = function setOpacity(_layer, _opacity) {\n    var map = _map.global.map;\n\n    map.allLayers.map(function (elm, indx, arr) {\n        if (elm.raw !== undefined) {\n            if (elm.raw.title === _layer || elm.raw.id === _layer) {\n                elm.opacity = _opacity / 100;\n                logger.log('Change opacity of layer: ' + _layer + ' to: ' + _opacity);\n            }\n        }\n    });\n};\n\n/**\n * Set visibility of all layers to false\n */\nvar hideAll = function hideAll() {\n    var map = _map.global.map;\n\n    map.allLayers.map(function (elm, indx, arr) {\n        if (elm.raw !== undefined) {\n            if (elm.visible === true) {\n                elm.visible = false;\n                logger.log('Change visibility of layer: ' + elm.raw.title + ' to: ' + false);\n            }\n        }\n    });\n};\n\n/**\n * Set visibility of all layers to true\n */\nvar showAll = function showAll() {\n    var map = _map.global.map;\n\n    map.allLayers.map(function (elm, indx, arr) {\n        if (elm.raw !== undefined) {\n            if (elm.visible === false) {\n                elm.visible = true;\n                logger.log('Change visibility of layer: ' + elm.raw.title + ' to: ' + false);\n            }\n        }\n    });\n};\n\nexports.create = create;\nexports.addNew = addNew;\nexports.setVisibility = setVisibility;\nexports.setOpacity = setOpacity;\nexports.hideAll = hideAll;\nexports.showAll = showAll;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar prefix = exports.prefix = '[ArcEasy]';\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.layers = exports.view = exports.map = undefined;\n\nvar _map = __webpack_require__(0);\n\nvar map = _interopRequireWildcard(_map);\n\nvar _view = __webpack_require__(2);\n\nvar view = _interopRequireWildcard(_view);\n\nvar _layers = __webpack_require__(3);\n\nvar layers = _interopRequireWildcard(_layers);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.map = map;\nexports.view = view;\nexports.layers = layers;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"isLoaded\"] = isLoaded;\n/* harmony export (immutable) */ __webpack_exports__[\"bootstrap\"] = bootstrap;\n/* harmony export (immutable) */ __webpack_exports__[\"dojoRequire\"] = dojoRequire;\n// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nfunction isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nfunction bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nfunction dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n});\n//# sourceMappingURL=esri-loader.js.map\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// arceasy.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 001398967add9b8fa196","import * as esriLoader from 'esri-loader'\nimport * as logger from './logger'\nimport { createView } from './view'\n\nconst global = {\n    map: '',\n    view: '',\n    options: {\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: '',\n        atmosphere: '',\n        cors: '',\n        proxy: ''\n    },\n    loaded: false\n}\n\nconst constructors = {\n    layer: {\n        FeatureLayer: '',\n        TileLayer: ''\n    },\n    map: '',\n    container: '',\n    view: '',\n    utils: {\n        watchUtils: '',\n        Search: '',\n        jsonUtils: '',\n        Extent: ''\n    },\n    renderer: {\n        UniqueValueRenderer: '',\n        ClassBreaksRenderer: '',\n        ExtrudeSymbol3DLayer: '',\n        PolygonSymbol3D: '',\n        SimpleRenderer: '',\n        SimpleMarkerSymbol: '',\n        PictureMarkerSymbol: '',\n        SimpleLineSymbol: '',\n        SimpleFillSymbol: ''\n    }\n}\n\n/**\n * To start using ArcEasy you need invocate this function first.\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars are enabled\n * @param  {Boolean} options.atmosphere - If atmosphere are enabled\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nconst options = options => {\n    if (options) {\n        options.element ||\n            logger.fatal(`You need pass an valid DOM element`)\n\n        options.scale ||\n            logger.warn(`You not set scale. Usign default scale: ${global.options.scale}`)\n\n        options.center.longitude ||\n            logger.warn(`You not set intial longitude. Usign default: ${global.options.longitude}`)\n\n        options.center.latitude ||\n            logger.warn(`You not set intial latitude. Usign default: ${global.options.latitude}`)\n\n        options.basemap ||\n            logger.warn(`You not set initial basemap. Usign default: ${global.options.basemap}`)\n\n        options.stars ||\n            logger.warn(`You not set if map usign stars. Usign default: ${global.options.stars}`)\n\n        options.atmosphere ||\n            logger.warn(`You not set if map usign atmosphere efect. Usign default: ${global.options.atmosphere}`)\n\n        options.cors ||\n            logger.warn(`You not set any URL to enable CORS requests`)\n\n        options.proxy ||\n            logger.warn(`You not set any URL to proxy your requests`)\n\n        global.options = {\n            element: options.element,\n            scale: options.scale || global.options.scale,\n            center: {\n                longitude: options.longitude || global.options.longitude,\n                latitude: options.latitude || global.options.latitude\n            },\n            basemap: options.basemap || global.options.basemap,\n            stars: options.stars || global.options.stars,\n            atmosphere: options.atmosphere || global.options.atmosphere,\n            cors: options.cors || '',\n            proxy: options.proxy || ''\n        }\n\n        global.loaded = true\n    } else {\n        logger.fatal(`You need pass some informations to describe your map`)\n    }\n}\n\n/**\n * The BigBang function.\n * To create your map you need invocate this function\n * @param  {String} cdn - URL to official ESRI CDN or your own ESRI CDN provided by you\n */\nconst start = cdn => {\n    if (cdn !== undefined && global.loaded) {\n        // Has the ArcGIS API been added to the page?\n        if (!esriLoader.isLoaded()) {\n            // No, lazy load it the ArcGIS API before using its classes\n            esriLoader.bootstrap(err => {\n                if (err) {\n                    logger.error(err)\n                }\n                // Once it's loaded, create the map\n                logger.log(`Waiting ESRI server...`)\n                dojoLoader()\n            }, {\n                // Use a specific version instead of latest 4.x\n                url: cdn\n            })\n        } else {\n            // ArcGIS API is already loaded, just create the map\n            logger.log(`Waiting ESRI server...`)\n            dojoLoader()\n        }\n    } else {\n        logger.fatal(`Fatal error! You must provider an CDN.`)\n    }\n}\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nconst dojoLoader = () => {\n    if (global.loaded) {\n        esriLoader.dojoRequire([\n            'esri/config',\n            'esri/Map',\n            'esri/geometry/Geometry',\n            'esri/Camera',\n            'esri/geometry/Extent',\n            'esri/views/SceneView',\n            'esri/layers/FeatureLayer',\n            'esri/layers/TileLayer',\n            'esri/layers/GraphicsLayer',\n            'esri/core/watchUtils',\n            'esri/core/Collection',\n            'esri/renderers/UniqueValueRenderer',\n            'esri/renderers/ClassBreaksRenderer',\n            'esri/renderers/SimpleRenderer',\n            'esri/symbols/ExtrudeSymbol3DLayer',\n            'esri/symbols/PolygonSymbol3D',\n            'esri/symbols/SimpleMarkerSymbol',\n            'esri/symbols/PictureMarkerSymbol',\n            'esri/symbols/SimpleLineSymbol',\n            'esri/symbols/SimpleFillSymbol',\n            'esri/Graphic',\n            'esri/geometry/Point',\n            'esri/symbols/PointSymbol3D',\n            'esri/symbols/ObjectSymbol3DLayer',\n            'esri/widgets/Search',\n            'esri/renderers/support/jsonUtils',\n            'dojo/on',\n            'dojo/domReady!'\n        ], (\n            esriConfig,\n            Map,\n            Geometry,\n            Camera,\n            Extent,\n            SceneView,\n            FeatureLayer,\n            TileLayer,\n            GraphicsLayer,\n            watchUtils,\n            Collection,\n            UniqueValueRenderer,\n            ClassBreaksRenderer,\n            SimpleRenderer,\n            ExtrudeSymbol3DLayer,\n            PolygonSymbol3D,\n            SimpleMarkerSymbol,\n            PictureMarkerSymbol,\n            SimpleLineSymbol,\n            SimpleFillSymbol,\n            Graphic,\n            Point,\n            PointSymbol3D,\n            ObjectSymbol3DLayer,\n            Search,\n            jsonUtils,\n            on\n        ) => {\n            global.options.cors.forEach(elm => {\n                esriConfig.request.corsEnabledServers.push(elm)\n            })\n\n            esriConfig.request.proxyUrl = global.options.proxy || ''\n\n            constructors.Map = Map\n            constructors.SceneView = SceneView\n\n            constructors.layer.FeatureLayer = FeatureLayer\n            constructors.layer.TileLayer = TileLayer\n            constructors.layer.GraphicsLayer = GraphicsLayer\n\n            constructors.utils.watchUtils = watchUtils\n            constructors.utils.Search = Search\n            constructors.utils.jsonUtils = jsonUtils\n            constructors.utils.Extent = Extent\n            constructors.utils.Camera = Camera\n\n            constructors.renderer.UniqueValueRenderer = UniqueValueRenderer\n            constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer\n            constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer\n            constructors.renderer.PolygonSymbol3D = PolygonSymbol3D\n            constructors.renderer.SimpleRenderer = SimpleRenderer\n            constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol\n            constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol\n            constructors.renderer.SimpleLineSymbol = SimpleLineSymbol\n            constructors.renderer.SimpleFillSymbol = SimpleFillSymbol\n            constructors.renderer.Graphic = Graphic\n            constructors.renderer.Point = Point\n            constructors.renderer.PointSymbol3D = PointSymbol3D\n            constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer\n\n            if (constructors.Map && constructors.SceneView) {\n                logger.log(`All constructorss created!`)\n\n                global.map = createMap(constructors.Map, global.options.basemap)\n\n                global.view = createView(\n                    global.map,\n                    constructors.SceneView,\n                    global.options\n                )\n            } else {\n                logger.error(`Error during creating the necessary constructors... Try again.`)\n            }\n        })\n    } else {\n        logger.fatal(`Fatal error! You need set some map options.`)\n    }\n}\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nconst createMap = (Map, basemap) => {\n    logger.log(`Creating map...`)\n\n    const map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation',\n        layers: []\n    })\n\n    return map\n}\n\nexport {\n    options,\n    start,\n    constructors,\n    global\n}\n\n\n\n// WEBPACK FOOTER //\n// ./map.js","import { prefix } from './config'\n\nlet logCounter = 0\nlet errorCounter = 0\nlet fatalCounter = 0\nlet warnCounter = 0\n\nconst log = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    logCounter++\n\n    return console.log(`${logCounter} ${prefix} ${message}`, object)\n}\n\nconst error = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    errorCounter++\n\n    return console.error(`${errorCounter} ${prefix} ${message}`, object)\n}\n\nconst fatal = (message) => {\n    fatalCounter++\n\n    throw new Error(`${fatalCounter} ${prefix} ${message}`)\n}\n\nconst warn = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    warnCounter++\n\n    return console.warn(`${warnCounter} ${prefix} ${message}`, object)\n}\n\nexport {\n    log,\n    error,\n    fatal,\n    warn\n}\n\n\n\n// WEBPACK FOOTER //\n// ./logger.js","import * as logger from './logger'\nimport { constructors, global } from './map'\n\n/**\n * Create view inside map\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {Boolean} options.stars - If stars are enabled\n * @param  {Boolean} options.atmosphere - If atmosphere are enabled\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nconst createView = (map, View, options) => {\n        logger.log('Creating View...')\n\n        const search = constructors.utils.Search,\n            watchUtils = constructors.utils.watchUtils,\n            view = new View({\n                container: options.element,\n                map: map,\n                scale: options.scale,\n                center: [\n                    options.longitude,\n                    options.latitude\n                ],\n                viewingMode: 'global',\n                starsEnabled: options.stars,\n                atmosphereEnabled: options.atmosphere\n            })\n\n        view.then(() => {\n            logger.log('View ready!')\n\n            controlUI(view, search)\n            watcherRunning(map, view, watchUtils)\n        })\n\n        return view\n    },\n    watcherRunning = (map, view, watchUtils) => {\n        watchUtils.whenTrue(view, 'stationary', () => {\n            if (view.extent) {\n                logger.log(`View changed! Mapping all layers...`)\n\n                console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale)\n\n                map.allLayers.map((elm, indx, arr) => {\n                    if (((view.scale < elm.minScale &&\n                            view.scale > elm.maxScale) ||\n                            (elm.minScale === 0 &&\n                            elm.maxScale === 0)) &&\n                            (elm.raw !== undefined &&\n                            elm.visible)) {\n                        if (elm.raw.esri.type === 0) {\n                            const urlQuery = `!xmin=${view.extent.xmin}!xmax=${view.extent.xmax}!ymin=${view.extent.ymin}!ymax=${view.extent.ymax}`\n\n                            logger.log(`Getting extent to request ${elm.title}`)\n                            logger.log(`Requesting to server: ${elm.raw.esri.url}/where=${urlQuery}`)\n\n                            elm.definitionExpression = urlQuery\n                        }\n\n                        logger.log(`Drawing layer: ${elm.title}`)\n                    }\n                })\n            }\n        })\n    },\n    controlUI = (view, Search) => {\n        logger.log('Changing UI elements...')\n        view.environment.atmosphere.quality = 'low'\n\n        const searchWidget = new Search({\n            view: view\n        })\n\n        view.ui.add(searchWidget, {\n            position: 'top-left',\n            index: 2\n        })\n\n        view.ui.remove([\n            'zoom',\n            'compass',\n            'navigation-toggle'\n        ])\n    },\n    newPosition = ({coordinates, scale, camera}) => {\n        const view = global.view\n\n        view.goTo({\n            center: [\n                coordinates.longitude,\n                coordinates.latitude\n            ],\n            scale: scale,\n            tilt: camera.tilt,\n            heading: camera.heading\n        })\n\n        logger.log(`Changing map position...`)\n    },\n    changeBasemap = basemap => {\n        const map = global.map\n\n        map.basemap = basemap\n\n        logger.log(`Change basemap...`)\n    }\n\nexport {\n    createView,\n    newPosition,\n    changeBasemap\n}\n\n\n\n// WEBPACK FOOTER //\n// ./view.js","import * as logger from './logger'\nimport { constructors, global } from './map'\n\n/**\n * Recieve all layers to add on map\n * @constructor\n * @param  {Array} layers - List of layers\n * @param  {Number} layers[].esri.type - Define the type of layer\n * @param  {Number} [layers[].esri.type = 0] - Layer is FeatureLayer\n * @param  {Number} [layers[].esri.type = 1] - Layer is TileLayer\n */\nconst create = layers => {\n    layers.forEach((elm, indx) => {\n        const layerConstructors = constructors.layer\n        const utilsConstructors = constructors.utils\n        let finalConstructor\n\n        if (elm.esri.type === 0) {\n            logger.log(`Creating new Feature Layer...`)\n            finalConstructor = layerConstructors.FeatureLayer\n        } else if (elm.esri.type === 1) {\n            logger.log(`Creating new Tile Layer...`)\n            finalConstructor = layerConstructors.TileLayer\n        }\n\n        logger.log(`Adding id by index on layer`)\n        elm.id = indx\n\n        addNew(\n            finalConstructor,\n            utilsConstructors.watchUtils,\n            utilsConstructors.jsonUtils,\n            elm\n        )\n    })\n}\n\n/**\n * Recieve a single layer object and add on map\n * @param {Function} constructor - ESRI Layer Constructor\n * @param {Function} watchUtils - ESRI watcher Constructor\n * @param {Function} jsonUtils - ESRI JSON Utility Constructor\n * @param {Object} _layer - Valid Layer object previously worked\n */\nconst addNew = (constructor, watchUtils, jsonUtils, _layer) => {\n    logger.log(`Adding layer on map: ${_layer.title} | Initial visibility: ${_layer.esri.visible}`)\n    logger.log(`Loading layer from: ${_layer.esri.url}`)\n\n    const layer = new constructor({\n        id: _layer.id,\n        url: _layer.esri.url,\n        definitionExpression: _layer.esri.definitionExpression,\n        raw: _layer,\n        visible: _layer.esri.visible\n    })\n\n    if (layer.raw.esri.renderer) {\n        logger.log(`Applying renderer...`)\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.esri.renderer)\n    }\n\n    // if (layer.raw.esri.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(() => {\n        logger.log(`Layer ${layer.title} ready!`)\n        logger.log(`View waiting changes...`)\n\n        if (layer.raw.esri.type === 1) {\n            layer.minScale = layer.raw.esri.minScale !== null\n                ? layer.raw.esri.minScale\n                : 0\n            layer.maxScale = layer.raw.esri.maxScale !== null\n                ? layer.raw.esri.maxScale\n                : 0\n\n            logger.log(`minScale: ${layer.minScale} and maxScale: ${layer.maxScale} defined manually`)\n        }\n    })\n\n    global.map.add(layer)\n}\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} status - Set if layer is visible or not\n */\nconst setVisibility = (_layer, status) => {\n    const map = global.map\n\n    map.allLayers.map((elm, indx, arr) => {\n        if (elm.raw !== undefined) {\n            if (elm.raw.title === _layer ||\n                elm.raw.id === _layer) {\n                elm.visible = status\n                logger.log(`Change visibility of layer: ${_layer} to: ${status}`)\n            }\n        }\n    })\n}\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nconst setOpacity = (_layer, _opacity) => {\n    const map = global.map\n\n    map.allLayers.map((elm, indx, arr) => {\n        if (elm.raw !== undefined) {\n            if (elm.raw.title === _layer ||\n                elm.raw.id === _layer) {\n                elm.opacity = _opacity / 100\n                logger.log(`Change opacity of layer: ${_layer} to: ${_opacity}`)\n            }\n        }\n    })\n}\n\n/**\n * Set visibility of all layers to false\n */\nconst hideAll = () => {\n    const map = global.map\n\n    map.allLayers.map((elm, indx, arr) => {\n        if (elm.raw !== undefined) {\n            if (elm.visible === true) {\n                elm.visible = false\n                logger.log(`Change visibility of layer: ${elm.raw.title} to: ${false}`)\n            }\n        }\n    })\n}\n\n/**\n * Set visibility of all layers to true\n */\nconst showAll = () => {\n    const map = global.map\n\n    map.allLayers.map((elm, indx, arr) => {\n        if (elm.raw !== undefined) {\n            if (elm.visible === false) {\n                elm.visible = true\n                logger.log(`Change visibility of layer: ${elm.raw.title} to: ${false}`)\n            }\n        }\n    })\n}\n\nexport {\n    create,\n    addNew,\n    setVisibility,\n    setOpacity,\n    hideAll,\n    showAll\n}\n\n\n\n// WEBPACK FOOTER //\n// ./layers.js","export const prefix = '[ArcEasy]'\n\n\n\n// WEBPACK FOOTER //\n// ./config.js","import * as map from './map'\nimport * as view from './view'\nimport * as layers from './layers'\n\nexport {\n    map,\n    view,\n    layers\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nexport function isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nexport function bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nexport function dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\nexport default {\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n};\n//# sourceMappingURL=esri-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/esri-loader/src/esri-loader.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}