module.exports=function(e){var r={};function a(t){if(r[t]){return r[t].exports}var o=r[t]={i:t,l:false,exports:{}};e[t].call(o.exports,o,o.exports,a);o.l=true;return o.exports}a.m=e;a.c=r;a.i=function(e){return e};a.d=function(e,r,t){if(!a.o(e,r)){Object.defineProperty(e,r,{configurable:false,enumerable:true,get:t})}};a.n=function(e){var r=e&&e.__esModule?function r(){return e["default"]}:function r(){return e};a.d(r,"a",r);return r};a.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)};a.p="";return a(a.s=5)}([function(e,r,a){"use strict";Object.defineProperty(r,"__esModule",{value:true});var t=r.prefix="[ArcEasy]";var o=r.global={map:"",view:"",options:{element:"",scale:25e6,center:{longitude:-13.78,latitude:-52.17},basemap:"streets",stars:true,atmosphere:{enable:true,quality:"low"},search:{enable:false,position:"top-left",index:1},cors:"",proxy:""},loaded:false};var n=r.constructors={layer:{FeatureLayer:"",TileLayer:""},map:"",container:"",view:"",utils:{watchUtils:"",Search:"",jsonUtils:"",Extent:""},renderer:{UniqueValueRenderer:"",ClassBreaksRenderer:"",ExtrudeSymbol3DLayer:"",PolygonSymbol3D:"",SimpleRenderer:"",SimpleMarkerSymbol:"",PictureMarkerSymbol:"",SimpleLineSymbol:"",SimpleFillSymbol:""}};var i=r.templates={renderers:[],symbols:[]}},function(e,r,a){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.warn=r.fatal=r.error=r.log=undefined;var t=a(0);var o=0;var n=0;var i=0;var l=0;var s=r.log=function e(r,a){var n=a!==undefined?a:"";o++;return console.log(o+" "+t.prefix+" "+r,n)};var u=r.error=function e(r,a){var o=a!==undefined?a:"";n++;return console.error(n+" "+t.prefix+" "+r,o)};var c=r.fatal=function e(r){i++;throw new Error(i+" "+t.prefix+" "+r)};var d=r.warn=function e(r,a){var o=a!==undefined?a:"";l++;return console.warn(l+" "+t.prefix+" "+r,o)}},function(e,r,a){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.changeBasemap=r.newPosition=r.createView=undefined;var t=a(1);var o=i(t);var n=a(0);function i(e){if(e&&e.__esModule){return e}else{var r={};if(e!=null){for(var a in e){if(Object.prototype.hasOwnProperty.call(e,a))r[a]=e[a]}}r.default=e;return r}}var l=r.createView=function e(r,a,t){if(n.global.loaded){o.log("Creating View...");var i=new a({container:t.element,map:r,scale:t.scale,center:[t.longitude,t.latitude],viewingMode:"global",starsEnabled:t.stars,atmosphereEnabled:t.atmosphere});i.then(function(){o.log("View ready!");u(i);s(r,i)});return i}else{o.fatal("Fatal error! You need set some map options.")}};var s=function e(r,a){var t=n.constructors.utils.watchUtils;t.whenTrue(a,"stationary",function(){if(a.extent){var e="!xmin="+a.extent.xmin+"!xmax="+a.extent.xmax+"!ymin="+a.extent.ymin+"!ymax="+a.extent.ymax;o.log("View changed! Mapping all layers...");console.log(a.extent.center.latitude,a.extent.center.longitude,a.scale);r.allLayers.map(function(r){if((a.scale<r.minScale&&a.scale>r.maxScale||r.minScale===0&&r.maxScale===0)&&r.raw!==undefined&&r.visible){if(r.raw.type===0){o.log("Getting extent to request "+r.title);o.log("Requesting to server: "+r.raw.url+"/where="+e);r.definitionExpression=e}o.log("Drawing layer: "+r.title)}})}})};var u=function e(r){o.log("Changing UI elements...");r.environment.atmosphere.quality=n.global.options.atmosphere.quality;if(n.global.options.search.enable){var a=n.constructors.utils.Search;var t=new a({view:r});r.ui.add(t,{position:n.global.options.search.position,index:n.global.options.search.index})}r.ui.remove(["zoom","compass","navigation-toggle"])};var c=r.newPosition=function e(r){var a=r.coordinates,t=r.scale,i=r.camera;if(a&&t&&i){var l=n.global.view;l.goTo({center:[a.longitude,a.latitude],scale:t,tilt:i.tilt,heading:i.heading});o.log("Changing map position...")}else{o.error("You need set a new position formed by a pair of coordinates, a new scale and new camera positions")}};var d=r.changeBasemap=function e(r){if(r){var a=n.global.map;a.basemap=r;o.log("Change basemap...")}else{o.error("You need set a new basemap")}}},function(e,r,a){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.showAll=r.hideAll=r.setOpacity=r.setVisibility=r.add=undefined;var t=a(1);var o=i(t);var n=a(0);function i(e){if(e&&e.__esModule){return e}else{var r={};if(e!=null){for(var a in e){if(Object.prototype.hasOwnProperty.call(e,a))r[a]=e[a]}}r.default=e;return r}}var l=r.add=function e(r){r.map(function(e,r){if(s(e)){o.log("Adding id by index on layer");e.id=r;n.global.map.add(u(e))}})};var s=function e(r){if(r){if(r.title===undefined||r.title===""||!r.title){o.fatal("You need provide a layer title");return false}if(r.visible===undefined||r.visible===""){r.visible=true;o.warn("You not set intial visible. Usign default: true")}if(r.definitionExpression===undefined||r.definitionExpression===""){r.definitionExpression="";o.warn("You not set intial definitionExpression. Usign default: ''")}if(r.type===undefined||r.type===""||!r.type){o.fatal("You need provide a layer type (0 = FeatureLayer, 1 = TileLayer)");return false}if(r.url===undefined||r.url===""||!r.url){o.fatal("You need provide an URL layer");return false}return true}else{o.fatal("You need pass some informations to describe your layer");return false}};var u=function e(r){var a=n.constructors.layer;var t=n.constructors.utils;var i=t.jsonUtils;var l=void 0;if(r.type===0){o.log("Creating new Feature Layer...");l=a.FeatureLayer}else if(r.type===1){o.log("Creating new Tile Layer...");l=a.TileLayer}o.log("Adding layer on map: "+r.title+" | Initial visibility: "+r.visible);var s=new l({id:r.id,url:r.url,definitionExpression:r.definitionExpression,raw:r,visible:r.visible});o.log("Loading layer from: "+r.url);if(s.raw.renderer){o.log("Applying renderer...");s.renderer=i.fromJSON(s.raw.renderer)}s.then(function(){o.log("Layer "+s.title+" ready!");o.log("View waiting changes...");if(s.raw.type===1){s.minScale=s.raw.minScale!==null?s.raw.minScale:0;s.maxScale=s.raw.maxScale!==null?s.raw.maxScale:0;o.log("minScale: "+s.minScale+" and maxScale: "+s.maxScale+" defined manually")}});return s};var c=function e(r){var a=n.global.map;return a.allLayers.find(function(e){if(e.raw!==undefined){if(e.raw.title===r||e.raw.id===r){return e}}})};var d=r.setVisibility=function e(r,a){var t=c(r);if(t){t.visible=a;o.log("Change visibility of layer: "+r+" to: "+a)}else{o.error("Can't find layer: "+r+" in map. You already added this layer?")}};var p=r.setOpacity=function e(r,a){var t=c(r);if(t){t.opacity=a/100;o.log("Change opacity of layer: "+r+" to: "+a)}else{o.error("Can't find layer: "+r+" in map. You already added this layer?")}};var f=function e(r){var a=n.global.map;a.allLayers.map(function(e){if(e.raw!==undefined){if(e.visible===!r){e.visible=r;o.log("Change visibility of layer: "+e.raw.title+" to: "+r)}}})};var y=r.hideAll=function e(){f(false)};var m=r.showAll=function e(){f(true)}},function(e,r,a){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.start=r.options=undefined;var t=a(6);var o=u(t);var n=a(1);var i=u(n);var l=a(2);var s=a(0);function u(e){if(e&&e.__esModule){return e}else{var r={};if(e!=null){for(var a in e){if(Object.prototype.hasOwnProperty.call(e,a))r[a]=e[a]}}r.default=e;return r}}var c=r.options=function e(r){if(r){r.element||i.fatal("You need pass an valid DOM element");r.scale||i.warn("You not set scale. Usign default scale: "+s.global.options.scale);r.center.longitude||i.warn("You not set intial longitude. Usign default: "+s.global.options.longitude);r.center.latitude||i.warn("You not set intial latitude. Usign default: "+s.global.options.latitude);r.basemap||i.warn("You not set initial basemap. Usign default: "+s.global.options.basemap);r.stars||i.warn("You not set if map usign stars. Usign default: "+s.global.options.stars);r.atmosphere.enable||i.warn("You not set if map usign atmosphere efect. Usign default: "+s.global.options.atmosphere.enable);r.atmosphere.quality||i.warn("You not set atmosphere quality. Usign default: "+s.global.options.atmosphere.quality);r.search.enable||i.warn("You not set Search. Usign default: "+s.global.options.search.enable);r.search.position||i.warn("You not set Search position. Usign default: "+s.global.options.search.position);r.search.index||i.warn("You not set Search index. Usign default: "+s.global.options.search.index);r.cors||i.warn("You not set any URL to enable CORS requests");r.proxy||i.warn("You not set any URL to proxy your requests");s.global.options={element:r.element,scale:r.scale||s.global.options.scale,center:{longitude:r.longitude||s.global.options.longitude,latitude:r.latitude||s.global.options.latitude},basemap:r.basemap||s.global.options.basemap,stars:r.stars||s.global.options.stars,atmosphere:{enable:r.atmosphere.enable||s.global.options.atmosphere.enable,quality:r.atmosphere.quality||s.global.options.atmosphere.quality},search:{enable:r.search.enable||s.global.options.search.enable,position:r.search.position||s.global.options.search.position,index:r.search.index||s.global.options.search.index},cors:r.cors||"",proxy:r.proxy||""};s.global.loaded=true}else{i.fatal("You need pass some informations to describe your map")}};var d=r.start=function e(r){if(r!==undefined&&s.global.loaded){if(!o.isLoaded()){o.bootstrap(function(e){if(e){i.error(e)}i.log("Waiting ESRI server...");p()},{url:r})}else{i.log("Waiting ESRI server...");p()}}else{i.fatal("Fatal error! You must provider an CDN.")}};var p=function e(){if(s.global.loaded){o.dojoRequire(["esri/config","esri/Map","esri/Graphic","esri/Camera","esri/views/SceneView","esri/layers/FeatureLayer","esri/layers/TileLayer","esri/layers/GraphicsLayer","esri/core/watchUtils","esri/core/Collection","esri/renderers/UniqueValueRenderer","esri/renderers/ClassBreaksRenderer","esri/renderers/SimpleRenderer","esri/renderers/support/jsonUtils","esri/symbols/ExtrudeSymbol3DLayer","esri/symbols/PolygonSymbol3D","esri/symbols/SimpleMarkerSymbol","esri/symbols/PictureMarkerSymbol","esri/symbols/SimpleLineSymbol","esri/symbols/SimpleFillSymbol","esri/symbols/PointSymbol3D","esri/symbols/ObjectSymbol3DLayer","esri/geometry/Geometry","esri/geometry/Point","esri/geometry/Extent","esri/widgets/Search","dojo/on","dojo/domReady!"],function(e,r,a,t,o,n,u,c,d,p,y,m,b,g,v,w,h,S,x,L,U,Y,E,P,j,q,M){s.global.options.cors.forEach(function(r){e.request.corsEnabledServers.push(r)});e.request.proxyUrl=s.global.options.proxy||"";s.constructors.Map=r;s.constructors.SceneView=o;s.constructors.layer.FeatureLayer=n;s.constructors.layer.TileLayer=u;s.constructors.layer.GraphicsLayer=c;s.constructors.utils.watchUtils=d;s.constructors.utils.Search=q;s.constructors.utils.jsonUtils=g;s.constructors.utils.Extent=j;s.constructors.utils.Camera=t;s.constructors.renderer.UniqueValueRenderer=y;s.constructors.renderer.ClassBreaksRenderer=m;s.constructors.renderer.ExtrudeSymbol3DLayer=v;s.constructors.renderer.PolygonSymbol3D=w;s.constructors.renderer.SimpleRenderer=b;s.constructors.renderer.SimpleMarkerSymbol=h;s.constructors.renderer.PictureMarkerSymbol=S;s.constructors.renderer.SimpleLineSymbol=x;s.constructors.renderer.SimpleFillSymbol=L;s.constructors.renderer.Graphic=a;s.constructors.renderer.Point=P;s.constructors.renderer.PointSymbol3D=U;s.constructors.renderer.ObjectSymbol3DLayer=Y;if(s.constructors.Map&&s.constructors.SceneView){i.log("All constructorss created!");s.global.map=f(s.constructors.Map,s.global.options.basemap);s.global.view=(0,l.createView)(s.global.map,s.constructors.SceneView,s.global.options)}else{i.error("Error during creating the necessary constructors... Try again.")}})}else{i.fatal("Fatal error! You need set some map options.")}};var f=function e(r,a){i.log("Creating map...");var t=new r({basemap:a,ground:"world-elevation",layers:[]});return t}},function(e,r,a){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.layers=r.view=r.map=undefined;var t=a(4);var o=u(t);var n=a(2);var i=u(n);var l=a(3);var s=u(l);function u(e){if(e&&e.__esModule){return e}else{var r={};if(e!=null){for(var a in e){if(Object.prototype.hasOwnProperty.call(e,a))r[a]=e[a]}}r.default=e;return r}}r.map=o;r.view=i;r.layers=s},function(e,r,a){"use strict";Object.defineProperty(r,"__esModule",{value:true});r["isLoaded"]=o;r["bootstrap"]=n;r["dojoRequire"]=i;function t(){return document.querySelector("script[data-esri-loader]")}function o(){return typeof window["require"]!=="undefined"&&t()}function n(e,r){if(r===void 0){r={}}if(!r.url){r.url="https://js.arcgis.com/4.3/"}if(t()){e(new Error("The ArcGIS API for JavaScript is already loaded."));return}var a=document.createElement("script");a.type="text/javascript";a.src=r.url;a.dataset["esriLoader"]="loading";a.onload=function(){a.dataset["esriLoader"]="loaded";var r=window["require"];if(e){e(null,r)}};document.body.appendChild(a)}function i(e,r){if(o()){window["require"](e,r)}else{var a=t();if(a){var n=function(){window["require"](e,r);a.removeEventListener("load",n,false)};a.addEventListener("load",n)}else{throw new Error("The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()")}}}r["default"]={isLoaded:o,bootstrap:n,dojoRequire:i}}]);
//# sourceMappingURL=arceasy.min.js.map