module.exports=function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.i=function(value){return value};__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter})}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=6)}([function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var prefix=exports.prefix="ArcEasy";var global=exports.global={map:{},view:{},options:{cdn:"https://js.arcgis.com/4.3/",element:"",scale:25e6,center:{longitude:-13.78,latitude:-52.17},basemap:"streets",stars:true,atmosphere:{enable:true,quality:"low"},watcher:true,light:{cameraTracking:true},search:{enable:false,position:"top-left",index:1},cors:[],proxy:""},loaded:false};var constructors=exports.constructors={layer:{},map:{},container:{},view:{},utils:{},renderer:{},dojo:{}};var templates=exports.templates={renderers:[],symbols:[]}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.warn=exports.fatal=exports.error=exports.log=undefined;var _config=__webpack_require__(0);var logCounter=0;var errorCounter=0;var fatalCounter=0;var warnCounter=0;var log=exports.log=function log(message,_object){var object=_object!==undefined?_object:"";logCounter++;return console.log(logCounter+" [LOG|"+_config.prefix+"] "+message,object)};var error=exports.error=function error(message,_object){var object=_object!==undefined?_object:"";errorCounter++;return console.error(errorCounter+" [ERROR|"+_config.prefix+"] "+message,object)};var fatal=exports.fatal=function fatal(message){fatalCounter++;throw new Error(fatalCounter+" [FATAL|"+_config.prefix+"] "+message)};var warn=exports.warn=function warn(message,_object){var object=_object!==undefined?_object:"";warnCounter++;return console.warn(warnCounter+" [WARN|"+_config.prefix+"] "+message,object)}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.changeBasemap=exports.newPosition=exports.light=exports.createView=undefined;var _logger=__webpack_require__(1);var logger=_interopRequireWildcard(_logger);var _config=__webpack_require__(0);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}var createView=exports.createView=function createView(map,View,options){if(_config.global.loaded){logger.log("Creating View...");var view=new View({container:options.element,map:map,scale:options.scale,center:[options.center.longitude,options.center.latitude],viewingMode:"global",starsEnabled:options.stars,atmosphereEnabled:options.atmosphere.enable,loaded:true});view.then(function(){logger.log("View ready!");controlUI(view);if(options.watcher){watcherRunning(view)}});return view}else{logger.fatal("Fatal error! You need set some map options.")}};var watcherRunning=function watcherRunning(view){var watchUtils=_config.constructors.utils.watchUtils;logger.log("Watcher running! Waiting changes on view.");watchUtils.whenTrue(view,"stationary",function(){logger.log("View changed! Getting extent to refreshing layers...");console.log(view.extent.center.latitude,view.extent.center.longitude,view.scale);refreshExtent(view)})};var refreshExtent=function refreshExtent(view){var map=_config.global.map;var urlQuery="!xmin="+view.extent.xmin+"!xmax="+view.extent.xmax+"!ymin="+view.extent.ymin+"!ymax="+view.extent.ymax;map.allLayers.map(function(layer){if(layer.raw!==undefined){if(view.scale<layer.minScale&&view.scale>layer.maxScale||layer.minScale===0&&layer.maxScale===0){if(layer.raw.type===0){layer.definitionExpression=urlQuery}layer.outOfRange=false;if(layer.visible){logger.log("Drawing layer: "+layer.title+" | URL requested: "+layer.raw.url+"/where="+urlQuery)}}else{if(layer.visible){logger.log(layer.title+" it's visible, but is out of range")}layer.outOfRange=true}}})};var controlUI=function controlUI(view){logger.log("Changing UI elements...");view.environment.atmosphereEnabled=_config.global.options.atmosphere.enable;view.environment.atmosphere.quality=_config.global.options.atmosphere.quality;if(_config.global.options.search.enable){var Search=_config.constructors.utils.Search;var searchWidget=new Search({view:view});view.ui.add(searchWidget,{position:_config.global.options.search.position,index:_config.global.options.search.index})}view.ui.remove(["zoom","compass","navigation-toggle"])};var light=exports.light=function light(_ref){var cameraTracking=_ref.cameraTracking,date=_ref.date;var view=_config.global.view;if(cameraTracking!==""&&cameraTracking!==undefined){logger.log("Changing light camera tracking to: "+cameraTracking);view.environment.lighting.cameraTrackingEnabled=cameraTracking}if(date==="now"){logger.log("Changing light date to: "+date);view.environment.lighting.date=Date.now()}if(date===""||date===undefined){view.environment.lighting.date=new Date("Jul 15 2017 12:00:00");logger.log("Changing light date to: default - Jul 15 2017 12:00:00")}};var newPosition=exports.newPosition=function newPosition(_ref2){var extent=_ref2.extent,coordinates=_ref2.coordinates,scale=_ref2.scale,camera=_ref2.camera;if(extent!==undefined||coordinates!==undefined||scale!==undefined||camera!==undefined){var view=_config.global.view;var Extent=_config.constructors.utils.Extent;var newExtent=void 0;if(extent){newExtent=new Extent({xmax:extent.xmax||"",xmin:extent.xmin||"",ymax:extent.ymax||"",ymin:extent.ymin||"",spatialReference:{wkid:extent.spatialReference?extent.spatialReference.wkid:""}})}view.goTo({target:extent&&newExtent?newExtent:"",center:coordinates&&coordinates.longitude&&coordinates.latitude?[coordinates.longitude,coordinates.latitude]:"",scale:scale||"",tilt:camera&&camera.tilt?camera.tilt:"",heading:camera&&camera.heading?camera.heading:"",position:camera&&camera.position?camera.position:""});logger.log("Changing map position...")}else{logger.error("You need set a new position formed by a pair of coordinates, a new scale and new camera positions")}};var changeBasemap=exports.changeBasemap=function changeBasemap(basemap){if(basemap){var map=_config.global.map;map.basemap=basemap;logger.log("Change basemap...")}else{logger.error("You need set a new basemap")}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.showAll=exports.hideAll=exports.setOpacity=exports.setVisibility=exports.all=exports.find=exports.add=undefined;var _logger=__webpack_require__(1);var logger=_interopRequireWildcard(_logger);var _config=__webpack_require__(0);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}var add=exports.add=function add(layers){var map=_config.global.map;layers.map(function(layer,indx){if(validate(layer)){if(layer.id===undefined||layer.id===""||!layer.id){logger.log("Adding id by index on layer");layer.id=indx}layer.outOfRange=true;return map.add(create(layer))}})};var validate=function validate(layer){if(layer){!layer.title||logger.log("Validating layer: "+layer.title);if(layer.title===undefined||layer.title===""||!layer.title){logger.fatal("You need provide a layer title");return false}if(layer.visible===undefined||layer.visible===""){layer.visible=true;logger.warn("You not set intial visible. Usign default: true")}if(layer.definitionExpression===undefined||layer.definitionExpression===""){layer.definitionExpression="";logger.warn("You not set intial definitionExpression. Usign default: ''")}if(layer.type===undefined||layer.type===""||layer.type===false){logger.fatal("You need provide a layer type (0 = FeatureLayer, 1 = TileLayer)");return false}if(layer.url===undefined||layer.url===""||!layer.url){logger.fatal("You need provide an URL layer");return false}return true}else{logger.fatal("You need pass some informations to describe your layer");return false}};var create=function create(_layer){var layerConstructors=_config.constructors.layer;var utilsConstructors=_config.constructors.utils;var jsonUtils=utilsConstructors.jsonUtils;var LayerType=void 0;var layerLabel=void 0;if(_layer.type===0){layerLabel="Feature Layer";LayerType=layerConstructors.FeatureLayer}else if(_layer.type===1){layerLabel="Tile Layer";LayerType=layerConstructors.TileLayer}var layer=new LayerType({id:_layer.id,title:_layer.title,url:_layer.url,definitionExpression:_layer.definitionExpression,raw:_layer,visible:_layer.visible});logger.log("Adding a "+layerLabel+" on map: "+layer.raw.title+" | Visibility: "+layer.raw.visible+" | URL: "+layer.raw.url);if(layer.raw.renderer){logger.log("Applying renderer...");layer.renderer=jsonUtils.fromJSON(layer.raw.renderer)}layer.then(function(){logger.log("Layer "+layer.title+" ready!");if(layer.raw.type===1){layer.minScale=layer.raw.minScale!==null&&parseInt(layer.raw.minScale)!==0?layer.raw.minScale:0;layer.maxScale=layer.raw.maxScale!==null&&parseInt(layer.raw.maxScale)?layer.raw.maxScale:0}});return layer};var find=exports.find=function find(_layer){var map=_config.global.map;return map.allLayers.find(function(layer){if(layer.raw!==undefined){if(layer.raw.title===_layer||layer.raw.id===_layer){return layer}}})};var all=exports.all=function all(){var map=_config.global.map;return map.allLayers._items.filter(function(layer){if(layer.raw!==undefined){return true}})};var setVisibility=exports.setVisibility=function setVisibility(_layer,visibility){var layer=find(_layer);if(layer){layer.visible=visibility;logger.log("Change visibility of layer: "+_layer+" to: "+visibility)}else{logger.error("Can't find layer: "+_layer+" in map. You already added this layer?")}};var setOpacity=exports.setOpacity=function setOpacity(_layer,_opacity){var layer=find(_layer);if(layer){layer.opacity=_opacity/100;logger.log("Change opacity of layer: "+_layer+" to: "+_opacity)}else{logger.error("Can't find layer: "+_layer+" in map. You already added this layer?")}};var changeVisibility=function changeVisibility(visibility){var map=_config.global.map;map.allLayers.map(function(layer){if(layer.raw!==undefined){if(layer.visible===!visibility){layer.visible=visibility;logger.log("Change visibility of layer: "+layer.raw.title+" to: "+visibility)}}})};var hideAll=exports.hideAll=function hideAll(){changeVisibility(false)};var showAll=exports.showAll=function showAll(){changeVisibility(true)}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.start=exports.options=undefined;var _esriLoader=__webpack_require__(7);var esriLoader=_interopRequireWildcard(_esriLoader);var _logger=__webpack_require__(1);var logger=_interopRequireWildcard(_logger);var _view=__webpack_require__(2);var _config=__webpack_require__(0);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}var options=exports.options=function options(_options){if(_options){_options.cdn||logger.warn("You not set any ESRI CDN. Usign default: "+_config.global.options.cdn);_options.element||logger.fatal("You need pass an valid DOM element");_options.scale||logger.warn("You not set scale. Usign default scale: "+_config.global.options.scale);if(_options.center){_options.center.longitude||logger.warn("You not set intial longitude. Usign default: "+_config.global.options.center.longitude);_options.center.latitude||logger.warn("You not set intial latitude. Usign default: "+_config.global.options.center.latitude)}else{logger.warn("You not set the map center. Usign defaults | longitude: "+_config.global.options.center.longitude+", latitude: "+_config.global.options.center.latitude)}_options.basemap||logger.warn("You not set initial basemap. Usign default: "+_config.global.options.basemap);_options.stars===true||_options.stars===false||logger.warn("You not set if map usign stars. Usign default: "+_config.global.options.stars);if(_options.atmosphere){_options.atmosphere.enable===true||_options.atmosphere.enable===false||logger.warn("You not set if map usign atmosphere efect. Usign default: "+_config.global.options.atmosphere.enable);_options.atmosphere.quality||logger.warn("You not set atmosphere quality. Usign default: "+_config.global.options.atmosphere.quality)}else{logger.warn("You not set the atmosphere options. Usign defaults | enable: "+_config.global.options.atmosphere.enable+", quality: "+_config.global.options.atmosphere.quality)}_options.watcher===true||_options.watcher===false||logger.warn("You not set if map usign watcher to refresh the layers. Usign default: "+_config.global.options.watcher);if(_options.light){_options.light.cameraTracking===true||_options.light.cameraTracking===false||logger.warn("You not set the camera tracking options. Usign default: "+_config.global.options.light.cameraTracking);_options.light.date===""||_options.light.date===undefined||logger.warn("You not set a date to view light position.")}else{logger.warn("You not set the light options. Usign default for camera tracking: "+_config.global.options.light.cameraTracking)}if(_options.search){_options.search.enable===true||_options.search.enable===false||logger.warn("You not set Search. Usign default: "+_config.global.options.search.enable);_options.search.position||logger.warn("You not set Search position. Usign default: "+_config.global.options.search.position);_options.search.index||logger.warn("You not set Search index. Usign default: "+_config.global.options.search.index)}else{logger.warn("You not set the search options. Usign defaults | enable: "+_config.global.options.search.enable+", position: "+_config.global.options.search.position+", index: "+_config.global.options.search.index)}_options.cors&&_options.cors.length>0||logger.warn("You not set any URL to enable CORS requests");_options.proxy||logger.warn("You not set any URL to proxy your requests");_config.global.options={cdn:_options.cdn!==""&&_options.cdn!==undefined?_options.cdn:_config.global.options.cdn,element:_options.element,scale:_options.scale!==""&&_options.scale!==undefined?_options.scale:_config.global.options.scale,center:{longitude:_options.center&&_options.center.longitude!==""&&_options.center.longitude!==undefined?_options.center.longitude:_config.global.options.center.longitude,latitude:_options.center&&_options.center.latitude!==""&&_options.center.latitude!==undefined?_options.center.latitude:_config.global.options.center.latitude},basemap:_options.basemap!==""&&_options.basemap!==undefined?_options.basemap:_config.global.options.basemap,stars:_options.stars!==""&&_options.stars!==undefined?_options.stars:_config.global.options.stars,atmosphere:{enable:_options.atmosphere&&_options.atmosphere.enable!==""&&_options.atmosphere.enable!==undefined?_options.atmosphere.enable:_config.global.options.atmosphere.enable,quality:_options.atmosphere&&_options.atmosphere.quality!==""&&_options.atmosphere.quality!==undefined?_options.atmosphere.quality:_config.global.options.atmosphere.quality},watcher:_options.watcher!==""&&_options.watcher!==undefined?_options.watcher:_config.global.options.watcher,light:{cameraTracking:_options.light&&_options.light.cameraTracking!==""&&_options.light.cameraTracking!==undefined?_options.light.cameraTracking:_config.global.options.light.cameraTracking,date:_options.light&&_options.light.date!==""&&_options.light.date!==undefined?_options.light.date:_config.global.options.light.date},search:{enable:_options.search&&_options.search.enable!==""&&_options.search.enable!==undefined?_options.search.enable:_config.global.options.search.enable,position:_options.search&&_options.search.position!==""&&_options.search.position!==undefined?_options.search.position:_config.global.options.search.position,index:_options.search&&_options.search.index!==""&&_options.search.index!==undefined?_options.search.index:_config.global.options.search.index},cors:_options.cors!==""&&_options.cors!==undefined?_options.cors:"",proxy:_options.proxy!==""&&_options.proxy!==undefined?_options.proxy:""};_config.global.loaded=true;logger.log("Ready to start!")}else{logger.fatal("You need pass some informations to describe your map")}};var start=exports.start=function start(){return new Promise(function(resolve,reject){var cdn=_config.global.options.cdn;if(cdn!==undefined&&_config.global.loaded){if(!esriLoader.isLoaded()){esriLoader.bootstrap(function(err){if(err){logger.error(err)}logger.log("Waiting ESRI server...");dojoLoader(resolve,reject)},{url:cdn})}else{logger.log("Waiting ESRI server...");dojoLoader(resolve,reject)}}else{logger.fatal("Fatal error! You must provider an CDN.");reject()}})};var dojoLoader=function dojoLoader(resolve,reject){if(_config.global.loaded){esriLoader.dojoRequire(["esri/config","esri/Map","esri/Graphic","esri/Camera","esri/WebScene","esri/views/SceneView","esri/views/3d/externalRenderers","esri/layers/FeatureLayer","esri/layers/TileLayer","esri/layers/GraphicsLayer","esri/layers/PointCloudLayer","esri/layers/SceneLayer","esri/core/watchUtils","esri/core/Collection","esri/core/declare","esri/core/lang","esri/renderers/UniqueValueRenderer","esri/renderers/ClassBreaksRenderer","esri/renderers/SimpleRenderer","esri/renderers/support/jsonUtils","esri/renderers/PointCloudUniqueValueRenderer","esri/renderers/PointCloudRGBRenderer","esri/renderers/PointCloudStretchRenderer","esri/renderers/PointCloudClassBreaksRenderer","esri/renderers/smartMapping/creators/color","esri/symbols/ExtrudeSymbol3DLayer","esri/symbols/PolygonSymbol3D","esri/symbols/SimpleMarkerSymbol","esri/symbols/PictureMarkerSymbol","esri/symbols/SimpleLineSymbol","esri/symbols/SimpleFillSymbol","esri/symbols/PointSymbol3D","esri/symbols/ObjectSymbol3DLayer","esri/symbols/MeshSymbol3D","esri/symbols/FillSymbol3DLayer","esri/geometry/Geometry","esri/geometry/Point","esri/geometry/Extent","esri/geometry/SpatialReference","esri/tasks/QueryTask","esri/tasks/support/Query","esri/widgets/Search","esri/widgets/ColorSlider","esri/widgets/Legend","esri/request","dojo/promise/all","dojo/on","dojo/query","dojo/domReady!"],function(esriConfig,Map,Graphic,Camera,WebScene,SceneView,externalRenderers,FeatureLayer,TileLayer,GraphicsLayer,PointCloudLayer,SceneLayer,watchUtils,Collection,declare,lang,UniqueValueRenderer,ClassBreaksRenderer,SimpleRenderer,jsonUtils,PointCloudUniqueValueRenderer,PointCloudRGBRenderer,PointCloudStretchRenderer,PointCloudClassBreaksRenderer,colorRendererCreator,ExtrudeSymbol3DLayer,PolygonSymbol3D,SimpleMarkerSymbol,PictureMarkerSymbol,SimpleLineSymbol,SimpleFillSymbol,PointSymbol3D,ObjectSymbol3DLayer,MeshSymbol3D,FillSymbol3DLayer,Geometry,Point,Extent,SpatialReference,QueryTask,Query,Search,ColorSlider,Legend,esriRequest,all,on,query){if(_config.global.options.cors){_config.global.options.cors.forEach(function(elm){esriConfig.request.corsEnabledServers.push(elm)})}esriConfig.request.proxyUrl=_config.global.options.proxy||"";_config.constructors.Map=Map;_config.constructors.SceneView=SceneView;_config.constructors.WebScene=WebScene;_config.constructors.externalRenderers=externalRenderers;_config.constructors.layer.FeatureLayer=FeatureLayer;_config.constructors.layer.TileLayer=TileLayer;_config.constructors.layer.GraphicsLayer=GraphicsLayer;_config.constructors.layer.PointCloudLayer=PointCloudLayer;_config.constructors.layer.SceneLayer=SceneLayer;_config.constructors.utils.watchUtils=watchUtils;_config.constructors.utils.Search=Search;_config.constructors.utils.ColorSlider=ColorSlider;_config.constructors.utils.Legend=Legend;_config.constructors.utils.jsonUtils=jsonUtils;_config.constructors.utils.Extent=Extent;_config.constructors.utils.SpatialReference=SpatialReference;_config.constructors.utils.Camera=Camera;_config.constructors.utils.esriRequest=esriRequest;_config.constructors.utils.declare=declare;_config.constructors.utils.lang=lang;_config.constructors.utils.QueryTask=QueryTask;_config.constructors.utils.Query=Query;_config.constructors.renderer.UniqueValueRenderer=UniqueValueRenderer;_config.constructors.renderer.ClassBreaksRenderer=ClassBreaksRenderer;_config.constructors.renderer.ExtrudeSymbol3DLayer=ExtrudeSymbol3DLayer;_config.constructors.renderer.PolygonSymbol3D=PolygonSymbol3D;_config.constructors.renderer.SimpleRenderer=SimpleRenderer;_config.constructors.renderer.SimpleMarkerSymbol=SimpleMarkerSymbol;_config.constructors.renderer.PictureMarkerSymbol=PictureMarkerSymbol;_config.constructors.renderer.SimpleLineSymbol=SimpleLineSymbol;_config.constructors.renderer.SimpleFillSymbol=SimpleFillSymbol;_config.constructors.renderer.Graphic=Graphic;_config.constructors.renderer.Point=Point;_config.constructors.renderer.PointSymbol3D=PointSymbol3D;_config.constructors.renderer.ObjectSymbol3DLayer=ObjectSymbol3DLayer;_config.constructors.renderer.MeshSymbol3D=MeshSymbol3D;_config.constructors.renderer.FillSymbol3DLayer=FillSymbol3DLayer;_config.constructors.renderer.PointCloudUniqueValueRenderer=PointCloudUniqueValueRenderer;_config.constructors.renderer.PointCloudRGBRenderer=PointCloudRGBRenderer;_config.constructors.renderer.PointCloudStretchRenderer=PointCloudStretchRenderer;_config.constructors.renderer.PointCloudClassBreaksRenderer=PointCloudClassBreaksRenderer;_config.constructors.renderer.colorRendererCreator=colorRendererCreator;_config.constructors.dojo.on=on;_config.constructors.dojo.all=all;_config.constructors.dojo.query=query;if(_config.constructors.Map&&_config.constructors.SceneView){logger.log("All constructorss created!");createMap(_config.constructors.Map,_config.global.options.basemap).then(function(map){_config.global.map=map;return _config.global.map}).then(function(map){(0,_view.createView)(map,_config.constructors.SceneView,_config.global.options).then(function(view){_config.global.view=view;resolve()})})}else{logger.error("Error during creating the necessary constructors... Try again.");reject()}})}else{logger.fatal("Fatal error! You need set some map options.");reject()}};var createMap=function createMap(Map,basemap){logger.log("Creating map...");var map=new Map({basemap:basemap,ground:"world-elevation"});return Promise.resolve(map)}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.hideGraphicLayers=exports.addGraphicLayer=undefined;var _logger=__webpack_require__(1);var logger=_interopRequireWildcard(_logger);var _config=__webpack_require__(0);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}var addGraphicLayer=exports.addGraphicLayer=function addGraphicLayer(_symbol,_point){var map=_config.global.map;var GraphicsLayer=_config.constructors.layer.GraphicsLayer;var PointSymbol3D=_config.constructors.renderer.PointSymbol3D;var ObjectSymbol3DLayer=_config.constructors.renderer.ObjectSymbol3DLayer;var Point=_config.constructors.renderer.Point;var Graphic=_config.constructors.renderer.Graphic;var graphicsLayer=new GraphicsLayer({id:_symbol.id!==""&&_symbol.id!==undefined?_symbol.id:"[ArcE]Graph"});var objectSymbol=new PointSymbol3D({symbolLayers:[new ObjectSymbol3DLayer({width:_symbol.width,height:_symbol.height,resource:{primitive:_symbol.primitive},material:{color:_symbol.color}})]});var point=new Point({x:_point.x,y:_point.y,z:_point.z});var pointGraphic=new Graphic({geometry:point,symbol:objectSymbol});map.add(graphicsLayer);graphicsLayer.add(pointGraphic);logger.log("Adding a Graphic Layer on map...")};var hideGraphicLayers=exports.hideGraphicLayers=function hideGraphicLayers(){var map=_config.global.map;map.allLayers.map(function(elm,indx,arr){if(elm.id==="[ArcE]Graph"){if(elm.visible===true){elm.visible=false;logger.log("Hiding Graphic Layer...")}}})}},function(module,exports,__webpack_require__){"use strict";var _map=__webpack_require__(4);var map=_interopRequireWildcard(_map);var _view=__webpack_require__(2);var view=_interopRequireWildcard(_view);var _layers=__webpack_require__(3);var layers=_interopRequireWildcard(_layers);var _utils=__webpack_require__(5);var utils=_interopRequireWildcard(_utils);var _config=__webpack_require__(0);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}module.exports={map:map,view:view,layers:layers,utils:utils,obj:{get map(){return _config.global.map},get view(){return _config.global.view},get constructors(){return _config.constructors}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:true});__webpack_exports__["isLoaded"]=isLoaded;__webpack_exports__["bootstrap"]=bootstrap;__webpack_exports__["dojoRequire"]=dojoRequire;function getScript(){return document.querySelector("script[data-esri-loader]")}function isLoaded(){return typeof window["require"]!=="undefined"&&getScript()}function bootstrap(callback,options){if(options===void 0){options={}}if(!options.url){options.url="https://js.arcgis.com/4.3/"}if(getScript()){callback(new Error("The ArcGIS API for JavaScript is already loaded."));return}var script=document.createElement("script");script.type="text/javascript";script.src=options.url;script.dataset["esriLoader"]="loading";script.onload=function(){script.dataset["esriLoader"]="loaded";var dojoRequire=window["require"];if(callback){callback(null,dojoRequire)}};document.body.appendChild(script)}function dojoRequire(modules,callback){if(isLoaded()){window["require"](modules,callback)}else{var script_1=getScript();if(script_1){var onScriptLoad_1=function(){window["require"](modules,callback);script_1.removeEventListener("load",onScriptLoad_1,false)};script_1.addEventListener("load",onScriptLoad_1)}else{throw new Error("The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()")}}}__webpack_exports__["default"]={isLoaded:isLoaded,bootstrap:bootstrap,dojoRequire:dojoRequire}}]);
//# sourceMappingURL=arceasy.min.js.map