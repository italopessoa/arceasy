{"version":3,"sources":["webpack:///arceasy.min.js","webpack:///webpack/bootstrap 5ca118ba841c70d4a4f6","webpack:///./config.js","webpack:///./logger.js","webpack:///./map.js","webpack:///./view.js","webpack:///./layers.js","webpack:///./index.js","webpack:///../~/esri-loader/src/esri-loader.js"],"names":["modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","prefix","global","map","view","options","element","scale","center","longitude","latitude","basemap","stars","atmosphere","enable","quality","search","position","index","cors","proxy","loaded","constructors","layer","FeatureLayer","TileLayer","container","utils","watchUtils","Search","jsonUtils","Extent","renderer","UniqueValueRenderer","ClassBreaksRenderer","ExtrudeSymbol3DLayer","PolygonSymbol3D","SimpleRenderer","SimpleMarkerSymbol","PictureMarkerSymbol","SimpleLineSymbol","SimpleFillSymbol","warn","fatal","error","log","undefined","_config","logCounter","errorCounter","fatalCounter","warnCounter","message","_object","console","Error","start","_esriLoader","esriLoader","_interopRequireWildcard","_logger","logger","_view","obj","newObj","key","default","_options","cdn","isLoaded","bootstrap","err","dojoLoader","url","dojoRequire","esriConfig","Map","Geometry","Camera","SceneView","GraphicsLayer","Collection","Graphic","Point","PointSymbol3D","ObjectSymbol3DLayer","on","forEach","elm","request","corsEnabledServers","push","proxyUrl","createMap","createView","ground","layers","changeBasemap","newPosition","View","viewingMode","starsEnabled","atmosphereEnabled","then","controlUI","watcherRunning","whenTrue","extent","urlQuery","xmin","xmax","ymin","ymax","allLayers","minScale","maxScale","raw","visible","type","title","definitionExpression","environment","searchWidget","ui","add","remove","_ref","coordinates","camera","goTo","tilt","heading","showAll","hideAll","setOpacity","setVisibility","indx","validate","id","create","_layer","layerConstructors","utilsConstructors","LayerType","fromJSON","findLayer","find","visibility","_opacity","opacity","changeVisibility","_map","_layers","__webpack_exports__","getScript","document","querySelector","window","callback","script","createElement","src","dataset","onload","body","appendChild","script_1","onScriptLoad_1","removeEventListener","addEventListener"],"mappings":"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","file":"arceasy.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar prefix = exports.prefix = '[ArcEasy]';\n\nvar global = exports.global = {\n    map: '',\n    view: '',\n    options: {\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: true,\n        atmosphere: {\n            enable: true,\n            quality: 'low'\n        },\n        search: {\n            enable: false,\n            position: 'top-left',\n            index: 1\n        },\n        cors: '',\n        proxy: ''\n    },\n    loaded: false\n};\n\nvar constructors = exports.constructors = {\n    layer: {\n        FeatureLayer: '',\n        TileLayer: ''\n    },\n    map: '',\n    container: '',\n    view: '',\n    utils: {\n        watchUtils: '',\n        Search: '',\n        jsonUtils: '',\n        Extent: ''\n    },\n    renderer: {\n        UniqueValueRenderer: '',\n        ClassBreaksRenderer: '',\n        ExtrudeSymbol3DLayer: '',\n        PolygonSymbol3D: '',\n        SimpleRenderer: '',\n        SimpleMarkerSymbol: '',\n        PictureMarkerSymbol: '',\n        SimpleLineSymbol: '',\n        SimpleFillSymbol: ''\n    }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.warn = exports.fatal = exports.error = exports.log = undefined;\n\nvar _config = __webpack_require__(0);\n\nvar logCounter = 0;\nvar errorCounter = 0;\nvar fatalCounter = 0;\nvar warnCounter = 0;\n\nvar log = function log(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    logCounter++;\n\n    return console.log(logCounter + ' ' + _config.prefix + ' ' + message, object);\n};\n\nvar error = function error(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    errorCounter++;\n\n    return console.error(errorCounter + ' ' + _config.prefix + ' ' + message, object);\n};\n\nvar fatal = function fatal(message) {\n    fatalCounter++;\n\n    throw new Error(fatalCounter + ' ' + _config.prefix + ' ' + message);\n};\n\nvar warn = function warn(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    warnCounter++;\n\n    return console.warn(warnCounter + ' ' + _config.prefix + ' ' + message, object);\n};\n\nexports.log = log;\nexports.error = error;\nexports.fatal = fatal;\nexports.warn = warn;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.start = exports.options = undefined;\n\nvar _esriLoader = __webpack_require__(6);\n\nvar esriLoader = _interopRequireWildcard(_esriLoader);\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _view = __webpack_require__(3);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Simple function to set globaly options about the map\n * To start using ArcEasy you need invocate this function first\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {Boolean} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {Boolean} options.search.position - Search position\n * @param  {Boolean} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nvar options = function options(_options) {\n    if (_options) {\n        _options.element || logger.fatal('You need pass an valid DOM element');\n\n        _options.scale || logger.warn('You not set scale. Usign default scale: ' + _config.global.options.scale);\n\n        _options.center.longitude || logger.warn('You not set intial longitude. Usign default: ' + _config.global.options.longitude);\n\n        _options.center.latitude || logger.warn('You not set intial latitude. Usign default: ' + _config.global.options.latitude);\n\n        _options.basemap || logger.warn('You not set initial basemap. Usign default: ' + _config.global.options.basemap);\n\n        _options.stars || logger.warn('You not set if map usign stars. Usign default: ' + _config.global.options.stars);\n\n        _options.atmosphere.enable || logger.warn('You not set if map usign atmosphere efect. Usign default: ' + _config.global.options.atmosphere.enable);\n\n        _options.atmosphere.quality || logger.warn('You not set atmosphere quality. Usign default: ' + _config.global.options.atmosphere.quality);\n\n        _options.search.enable || logger.warn('You not set Search. Usign default: ' + _config.global.options.search.enable);\n\n        _options.search.position || logger.warn('You not set Search position. Usign default: ' + _config.global.options.search.position);\n\n        _options.search.index || logger.warn('You not set Search index. Usign default: ' + _config.global.options.search.index);\n\n        _options.cors || logger.warn('You not set any URL to enable CORS requests');\n\n        _options.proxy || logger.warn('You not set any URL to proxy your requests');\n\n        _config.global.options = {\n            element: _options.element,\n            scale: _options.scale || _config.global.options.scale,\n            center: {\n                longitude: _options.longitude || _config.global.options.longitude,\n                latitude: _options.latitude || _config.global.options.latitude\n            },\n            basemap: _options.basemap || _config.global.options.basemap,\n            stars: _options.stars || _config.global.options.stars,\n            atmosphere: _options.atmosphere || _config.global.options.atmosphere,\n            cors: _options.cors || '',\n            proxy: _options.proxy || ''\n        };\n\n        _config.global.loaded = true;\n    } else {\n        logger.fatal('You need pass some informations to describe your map');\n    }\n};\n\n/**\n * The BigBang function\n * To create your map you need invocate this function\n * @param  {String} cdn - URL to official ESRI CDN or your own ESRI CDN provided by you\n */\nvar start = function start(cdn) {\n    if (cdn !== undefined && _config.global.loaded) {\n        // Has the ArcGIS API been added to the page?\n        if (!esriLoader.isLoaded()) {\n            // No, lazy load it the ArcGIS API before using its classes\n            esriLoader.bootstrap(function (err) {\n                if (err) {\n                    logger.error(err);\n                }\n                // Once it's loaded, create the map\n                logger.log('Waiting ESRI server...');\n                dojoLoader();\n            }, {\n                // Use a specific version instead of latest 4.x\n                url: cdn\n            });\n        } else {\n            // ArcGIS API is already loaded, just create the map\n            logger.log('Waiting ESRI server...');\n            dojoLoader();\n        }\n    } else {\n        logger.fatal('Fatal error! You must provider an CDN.');\n    }\n};\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nvar dojoLoader = function dojoLoader() {\n    if (_config.global.loaded) {\n        esriLoader.dojoRequire(['esri/config', 'esri/Map', 'esri/geometry/Geometry', 'esri/Camera', 'esri/geometry/Extent', 'esri/views/SceneView', 'esri/layers/FeatureLayer', 'esri/layers/TileLayer', 'esri/layers/GraphicsLayer', 'esri/core/watchUtils', 'esri/core/Collection', 'esri/renderers/UniqueValueRenderer', 'esri/renderers/ClassBreaksRenderer', 'esri/renderers/SimpleRenderer', 'esri/symbols/ExtrudeSymbol3DLayer', 'esri/symbols/PolygonSymbol3D', 'esri/symbols/SimpleMarkerSymbol', 'esri/symbols/PictureMarkerSymbol', 'esri/symbols/SimpleLineSymbol', 'esri/symbols/SimpleFillSymbol', 'esri/Graphic', 'esri/geometry/Point', 'esri/symbols/PointSymbol3D', 'esri/symbols/ObjectSymbol3DLayer', 'esri/widgets/Search', 'esri/renderers/support/jsonUtils', 'dojo/on', 'dojo/domReady!'], function (esriConfig, Map, Geometry, Camera, Extent, SceneView, FeatureLayer, TileLayer, GraphicsLayer, watchUtils, Collection, UniqueValueRenderer, ClassBreaksRenderer, SimpleRenderer, ExtrudeSymbol3DLayer, PolygonSymbol3D, SimpleMarkerSymbol, PictureMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, Graphic, Point, PointSymbol3D, ObjectSymbol3DLayer, Search, jsonUtils, on) {\n            _config.global.options.cors.forEach(function (elm) {\n                esriConfig.request.corsEnabledServers.push(elm);\n            });\n\n            esriConfig.request.proxyUrl = _config.global.options.proxy || '';\n\n            _config.constructors.Map = Map;\n            _config.constructors.SceneView = SceneView;\n\n            _config.constructors.layer.FeatureLayer = FeatureLayer;\n            _config.constructors.layer.TileLayer = TileLayer;\n            _config.constructors.layer.GraphicsLayer = GraphicsLayer;\n\n            _config.constructors.utils.watchUtils = watchUtils;\n            _config.constructors.utils.Search = Search;\n            _config.constructors.utils.jsonUtils = jsonUtils;\n            _config.constructors.utils.Extent = Extent;\n            _config.constructors.utils.Camera = Camera;\n\n            _config.constructors.renderer.UniqueValueRenderer = UniqueValueRenderer;\n            _config.constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer;\n            _config.constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer;\n            _config.constructors.renderer.PolygonSymbol3D = PolygonSymbol3D;\n            _config.constructors.renderer.SimpleRenderer = SimpleRenderer;\n            _config.constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol;\n            _config.constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol;\n            _config.constructors.renderer.SimpleLineSymbol = SimpleLineSymbol;\n            _config.constructors.renderer.SimpleFillSymbol = SimpleFillSymbol;\n            _config.constructors.renderer.Graphic = Graphic;\n            _config.constructors.renderer.Point = Point;\n            _config.constructors.renderer.PointSymbol3D = PointSymbol3D;\n            _config.constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer;\n\n            if (_config.constructors.Map && _config.constructors.SceneView) {\n                logger.log('All constructorss created!');\n\n                _config.global.map = createMap(_config.constructors.Map, _config.global.options.basemap);\n\n                _config.global.view = (0, _view.createView)(_config.global.map, _config.constructors.SceneView, _config.global.options);\n            } else {\n                logger.error('Error during creating the necessary constructors... Try again.');\n            }\n        });\n    } else {\n        logger.fatal('Fatal error! You need set some map options.');\n    }\n};\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nvar createMap = function createMap(Map, basemap) {\n    logger.log('Creating map...');\n\n    var map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation',\n        layers: []\n    });\n\n    return map;\n};\n\nexports.options = options;\nexports.start = start;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.changeBasemap = exports.newPosition = exports.createView = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Create view inside map\n * @param  {Object} map - The map object in memory\n * @param  {Function} View - ESRI View constructor\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {Boolean} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {Boolean} options.search.position - Search position\n * @param  {Boolean} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n * @return {Object} Global view object descriptor\n */\nvar createView = function createView(map, View, options) {\n    if (_config.global.loaded) {\n        logger.log('Creating View...');\n\n        var view = new View({\n            container: options.element,\n            map: map,\n            scale: options.scale,\n            center: [options.longitude, options.latitude],\n            viewingMode: 'global',\n            starsEnabled: options.stars,\n            atmosphereEnabled: options.atmosphere\n        });\n\n        view.then(function () {\n            logger.log('View ready!');\n\n            controlUI(view);\n            watcherRunning(map, view);\n        });\n\n        return view;\n    } else {\n        logger.fatal('Fatal error! You need set some map options.');\n    }\n};\n\n/**\n * Watcher that observe the globe moviment\n * and make requests with specific parameters\n * like extent on 'definitionExpression'\n * @param  {Object} map - Global map object descriptor\n * @param  {Object} view - Global view object descriptor\n */\nvar watcherRunning = function watcherRunning(map, view) {\n    var watchUtils = _config.constructors.utils.watchUtils;\n\n    watchUtils.whenTrue(view, 'stationary', function () {\n        if (view.extent) {\n            var urlQuery = '!xmin=' + view.extent.xmin + '!xmax=' + view.extent.xmax + '!ymin=' + view.extent.ymin + '!ymax=' + view.extent.ymax;\n\n            logger.log('View changed! Mapping all layers...');\n\n            console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale);\n\n            map.allLayers.map(function (layer) {\n                if ((view.scale < layer.minScale && view.scale > layer.maxScale || layer.minScale === 0 && layer.maxScale === 0) && layer.raw !== undefined && layer.visible) {\n                    if (layer.raw.type === 0) {\n                        logger.log('Getting extent to request ' + layer.title);\n                        logger.log('Requesting to server: ' + layer.raw.url + '/where=' + urlQuery);\n\n                        layer.definitionExpression = urlQuery;\n                    }\n\n                    logger.log('Drawing layer: ' + layer.title);\n                }\n            });\n        }\n    });\n};\n\n/**\n * Only setting some aspects from ESRI UI\n * @param  {Object} view - Global view object descriptor\n */\nvar controlUI = function controlUI(view) {\n    logger.log('Changing UI elements...');\n\n    view.environment.atmosphere.quality = _config.global.options.atmosphere.quality;\n\n    if (_config.global.options.search.enable) {\n        var Search = _config.constructors.utils.Search;\n        var searchWidget = new Search({\n            view: view\n        });\n\n        view.ui.add(searchWidget, {\n            position: _config.global.options.search.position,\n            index: _config.global.options.search.index\n        });\n    }\n\n    view.ui.remove(['zoom', 'compass', 'navigation-toggle']);\n};\n\n/**\n * Navigate on map using long/lat and camera position\n * @param  {Object} coordinates - Object that contain destiny longitude and latitude\n * @param  {Number} scale - Scale on earth\n * @param  {Object} camera - Object that contain new angles to position camera\n */\nvar newPosition = function newPosition(_ref) {\n    var coordinates = _ref.coordinates,\n        scale = _ref.scale,\n        camera = _ref.camera;\n\n    if (coordinates && scale && camera) {\n        var view = _config.global.view;\n\n        view.goTo({\n            center: [coordinates.longitude, coordinates.latitude],\n            scale: scale,\n            tilt: camera.tilt,\n            heading: camera.heading\n        });\n\n        logger.log('Changing map position...');\n    } else {\n        logger.error('You need set a new position formed by a pair of coordinates, a new scale and new camera positions');\n    }\n};\n\n/**\n * Change basemap on global map object\n * @param  {String} basemap - A basemap name that match with basemap's list from ESRI\n *                          'streets', 'satellite', 'hybrid', 'topo', 'gray',\n *                          'dark-gray', 'oceans', 'national-geographic',\n *                          'terrain', 'osm', 'dark-gray-vector', 'gray-vector',\n *                          'streets-vector', 'topo-vector', 'streets-night-vector',\n *                          'streets-relief-vector', 'streets-navigation-vector'\n *                          or 'none'\n */\nvar changeBasemap = function changeBasemap(basemap) {\n    if (basemap) {\n        var map = _config.global.map;\n\n        map.basemap = basemap;\n\n        logger.log('Change basemap...');\n    } else {\n        logger.error('You need set a new basemap');\n    }\n};\n\nexports.createView = createView;\nexports.newPosition = newPosition;\nexports.changeBasemap = changeBasemap;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.showAll = exports.hideAll = exports.setOpacity = exports.setVisibility = exports.add = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Recieve all layers, work and add on map\n * @constructor\n * @param  {Array} layers - List of layers\n */\nvar add = function add(layers) {\n    layers.map(function (layer, indx) {\n        if (validate(layer)) {\n            logger.log('Adding id by index on layer');\n            layer.id = indx;\n\n            _config.global.map.add(create(layer));\n        }\n    });\n};\n\n/**\n * Validate single layer\n * @param  {Object} layer - Layer with some options\n * @return {Boolean} True or false to validation\n */\nvar validate = function validate(layer) {\n    if (layer) {\n        if (layer.title === undefined || layer.title === '' || !layer.title) {\n            logger.fatal('You need provide a layer title');\n\n            return false;\n        }\n\n        if (layer.visible === undefined || layer.visible === '') {\n            layer.visible = true;\n            logger.warn('You not set intial visible. Usign default: true');\n        }\n\n        if (layer.definitionExpression === undefined || layer.definitionExpression === '') {\n            layer.definitionExpression = '';\n            logger.warn('You not set intial definitionExpression. Usign default: \\'\\'');\n        }\n\n        if (layer.type === undefined || layer.type === '' || !layer.type) {\n            logger.fatal('You need provide a layer type (0 = FeatureLayer, 1 = TileLayer)');\n\n            return false;\n        }\n\n        if (layer.url === undefined || layer.url === '' || !layer.url) {\n            logger.fatal('You need provide an URL layer');\n\n            return false;\n        }\n\n        return true;\n    } else {\n        logger.fatal('You need pass some informations to describe your layer');\n        return false;\n    }\n};\n\n/**\n * Recieve a single layer object and return layer ready\n * @param {Object} _layer - Valid Layer object previously worked\n * @return {Object} Layer ready to add on map\n */\nvar create = function create(_layer) {\n    var layerConstructors = _config.constructors.layer;\n    var utilsConstructors = _config.constructors.utils;\n    var jsonUtils = utilsConstructors.jsonUtils;\n    var LayerType = void 0;\n\n    if (_layer.type === 0) {\n        logger.log('Creating new Feature Layer...');\n        LayerType = layerConstructors.FeatureLayer;\n    } else if (_layer.type === 1) {\n        logger.log('Creating new Tile Layer...');\n        LayerType = layerConstructors.TileLayer;\n    }\n\n    logger.log('Adding layer on map: ' + _layer.title + ' | Initial visibility: ' + _layer.visible);\n\n    var layer = new LayerType({\n        id: _layer.id,\n        url: _layer.url,\n        definitionExpression: _layer.definitionExpression,\n        raw: _layer,\n        visible: _layer.visible\n    });\n\n    logger.log('Loading layer from: ' + _layer.url);\n\n    if (layer.raw.renderer) {\n        logger.log('Applying renderer...');\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.renderer);\n    }\n\n    // if (layer.raw.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(function () {\n        logger.log('Layer ' + layer.title + ' ready!');\n        logger.log('View waiting changes...');\n\n        if (layer.raw.type === 1) {\n            layer.minScale = layer.raw.minScale !== null ? layer.raw.minScale : 0;\n            layer.maxScale = layer.raw.maxScale !== null ? layer.raw.maxScale : 0;\n\n            logger.log('minScale: ' + layer.minScale + ' and maxScale: ' + layer.maxScale + ' defined manually');\n        }\n    });\n\n    return layer;\n};\n\n/**\n * Find specific layer in map\n * @param  {String|Number} _layer - Layer title or ID\n * @return {Object} Layer that will be manipulated\n */\nvar findLayer = function findLayer(_layer) {\n    var map = _config.global.map;\n\n    return map.allLayers.find(function (layer) {\n        if (layer.raw !== undefined) {\n            if (layer.raw.title === _layer || layer.raw.id === _layer) {\n                return layer;\n            }\n        }\n    });\n};\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} visibility - Set if layer is visible or not\n */\nvar setVisibility = function setVisibility(_layer, visibility) {\n    var layer = findLayer(_layer);\n\n    if (layer) {\n        layer.visible = visibility;\n        logger.log('Change visibility of layer: ' + _layer + ' to: ' + visibility);\n    } else {\n        logger.error('Can\\'t find layer: ' + _layer + ' in map. You already added this layer?');\n    }\n};\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nvar setOpacity = function setOpacity(_layer, _opacity) {\n    var layer = findLayer(_layer);\n\n    if (layer) {\n        layer.opacity = _opacity / 100;\n        logger.log('Change opacity of layer: ' + _layer + ' to: ' + _opacity);\n    } else {\n        logger.error('Can\\'t find layer: ' + _layer + ' in map. You already added this layer?');\n    }\n};\n\n/**\n * Change visibility of all layers using parameter\n * @param  {Boolean} visibility - new opacity\n */\nvar changeVisibility = function changeVisibility(visibility) {\n    var map = _config.global.map;\n\n    map.allLayers.map(function (layer) {\n        if (layer.raw !== undefined) {\n            if (layer.visible === !visibility) {\n                layer.visible = visibility;\n                logger.log('Change visibility of layer: ' + layer.raw.title + ' to: ' + visibility);\n            }\n        }\n    });\n};\n\n/**\n * Set visibility of all layers to false\n */\nvar hideAll = function hideAll() {\n    changeVisibility(false);\n};\n\n/**\n * Set visibility of all layers to true\n */\nvar showAll = function showAll() {\n    changeVisibility(true);\n};\n\nexports.add = add;\nexports.setVisibility = setVisibility;\nexports.setOpacity = setOpacity;\nexports.hideAll = hideAll;\nexports.showAll = showAll;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.layers = exports.view = exports.map = undefined;\n\nvar _map = __webpack_require__(2);\n\nvar map = _interopRequireWildcard(_map);\n\nvar _view = __webpack_require__(3);\n\nvar view = _interopRequireWildcard(_view);\n\nvar _layers = __webpack_require__(4);\n\nvar layers = _interopRequireWildcard(_layers);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.map = map;\nexports.view = view;\nexports.layers = layers;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"isLoaded\"] = isLoaded;\n/* harmony export (immutable) */ __webpack_exports__[\"bootstrap\"] = bootstrap;\n/* harmony export (immutable) */ __webpack_exports__[\"dojoRequire\"] = dojoRequire;\n// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nfunction isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nfunction bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nfunction dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n});\n//# sourceMappingURL=esri-loader.js.map\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// arceasy.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5ca118ba841c70d4a4f6","export const prefix = '[ArcEasy]'\n\nexport const global = {\n    map: '',\n    view: '',\n    options: {\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: true,\n        atmosphere: {\n            enable: true,\n            quality: 'low'\n        },\n        search: {\n            enable: false,\n            position: 'top-left',\n            index: 1\n        },\n        cors: '',\n        proxy: ''\n    },\n    loaded: false\n}\n\nexport const constructors = {\n    layer: {\n        FeatureLayer: '',\n        TileLayer: ''\n    },\n    map: '',\n    container: '',\n    view: '',\n    utils: {\n        watchUtils: '',\n        Search: '',\n        jsonUtils: '',\n        Extent: ''\n    },\n    renderer: {\n        UniqueValueRenderer: '',\n        ClassBreaksRenderer: '',\n        ExtrudeSymbol3DLayer: '',\n        PolygonSymbol3D: '',\n        SimpleRenderer: '',\n        SimpleMarkerSymbol: '',\n        PictureMarkerSymbol: '',\n        SimpleLineSymbol: '',\n        SimpleFillSymbol: ''\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./config.js","import { prefix } from './config'\n\nlet logCounter = 0\nlet errorCounter = 0\nlet fatalCounter = 0\nlet warnCounter = 0\n\nconst log = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    logCounter++\n\n    return console.log(`${logCounter} ${prefix} ${message}`, object)\n}\n\nconst error = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    errorCounter++\n\n    return console.error(`${errorCounter} ${prefix} ${message}`, object)\n}\n\nconst fatal = (message) => {\n    fatalCounter++\n\n    throw new Error(`${fatalCounter} ${prefix} ${message}`)\n}\n\nconst warn = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    warnCounter++\n\n    return console.warn(`${warnCounter} ${prefix} ${message}`, object)\n}\n\nexport {\n    log,\n    error,\n    fatal,\n    warn\n}\n\n\n\n// WEBPACK FOOTER //\n// ./logger.js","import * as esriLoader from 'esri-loader'\nimport * as logger from './logger'\nimport { createView } from './view'\nimport { global, constructors } from './config'\n\n/**\n * Simple function to set globaly options about the map\n * To start using ArcEasy you need invocate this function first\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {Boolean} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {Boolean} options.search.position - Search position\n * @param  {Boolean} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nconst options = options => {\n    if (options) {\n        options.element ||\n            logger.fatal(`You need pass an valid DOM element`)\n\n        options.scale ||\n            logger.warn(`You not set scale. Usign default scale: ${global.options.scale}`)\n\n        options.center.longitude ||\n            logger.warn(`You not set intial longitude. Usign default: ${global.options.longitude}`)\n\n        options.center.latitude ||\n            logger.warn(`You not set intial latitude. Usign default: ${global.options.latitude}`)\n\n        options.basemap ||\n            logger.warn(`You not set initial basemap. Usign default: ${global.options.basemap}`)\n\n        options.stars ||\n            logger.warn(`You not set if map usign stars. Usign default: ${global.options.stars}`)\n\n        options.atmosphere.enable ||\n            logger.warn(`You not set if map usign atmosphere efect. Usign default: ${global.options.atmosphere.enable}`)\n\n        options.atmosphere.quality ||\n            logger.warn(`You not set atmosphere quality. Usign default: ${global.options.atmosphere.quality}`)\n\n        options.search.enable ||\n            logger.warn(`You not set Search. Usign default: ${global.options.search.enable}`)\n\n        options.search.position ||\n            logger.warn(`You not set Search position. Usign default: ${global.options.search.position}`)\n\n        options.search.index ||\n            logger.warn(`You not set Search index. Usign default: ${global.options.search.index}`)\n\n        options.cors ||\n            logger.warn(`You not set any URL to enable CORS requests`)\n\n        options.proxy ||\n            logger.warn(`You not set any URL to proxy your requests`)\n\n        global.options = {\n            element: options.element,\n            scale: options.scale || global.options.scale,\n            center: {\n                longitude: options.longitude || global.options.longitude,\n                latitude: options.latitude || global.options.latitude\n            },\n            basemap: options.basemap || global.options.basemap,\n            stars: options.stars || global.options.stars,\n            atmosphere: options.atmosphere || global.options.atmosphere,\n            cors: options.cors || '',\n            proxy: options.proxy || ''\n        }\n\n        global.loaded = true\n    } else {\n        logger.fatal(`You need pass some informations to describe your map`)\n    }\n}\n\n/**\n * The BigBang function\n * To create your map you need invocate this function\n * @param  {String} cdn - URL to official ESRI CDN or your own ESRI CDN provided by you\n */\nconst start = cdn => {\n    if (cdn !== undefined && global.loaded) {\n        // Has the ArcGIS API been added to the page?\n        if (!esriLoader.isLoaded()) {\n            // No, lazy load it the ArcGIS API before using its classes\n            esriLoader.bootstrap(err => {\n                if (err) {\n                    logger.error(err)\n                }\n                // Once it's loaded, create the map\n                logger.log(`Waiting ESRI server...`)\n                dojoLoader()\n            }, {\n                // Use a specific version instead of latest 4.x\n                url: cdn\n            })\n        } else {\n            // ArcGIS API is already loaded, just create the map\n            logger.log(`Waiting ESRI server...`)\n            dojoLoader()\n        }\n    } else {\n        logger.fatal(`Fatal error! You must provider an CDN.`)\n    }\n}\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nconst dojoLoader = () => {\n    if (global.loaded) {\n        esriLoader.dojoRequire([\n            'esri/config',\n            'esri/Map',\n            'esri/geometry/Geometry',\n            'esri/Camera',\n            'esri/geometry/Extent',\n            'esri/views/SceneView',\n            'esri/layers/FeatureLayer',\n            'esri/layers/TileLayer',\n            'esri/layers/GraphicsLayer',\n            'esri/core/watchUtils',\n            'esri/core/Collection',\n            'esri/renderers/UniqueValueRenderer',\n            'esri/renderers/ClassBreaksRenderer',\n            'esri/renderers/SimpleRenderer',\n            'esri/symbols/ExtrudeSymbol3DLayer',\n            'esri/symbols/PolygonSymbol3D',\n            'esri/symbols/SimpleMarkerSymbol',\n            'esri/symbols/PictureMarkerSymbol',\n            'esri/symbols/SimpleLineSymbol',\n            'esri/symbols/SimpleFillSymbol',\n            'esri/Graphic',\n            'esri/geometry/Point',\n            'esri/symbols/PointSymbol3D',\n            'esri/symbols/ObjectSymbol3DLayer',\n            'esri/widgets/Search',\n            'esri/renderers/support/jsonUtils',\n            'dojo/on',\n            'dojo/domReady!'\n        ], (\n            esriConfig,\n            Map,\n            Geometry,\n            Camera,\n            Extent,\n            SceneView,\n            FeatureLayer,\n            TileLayer,\n            GraphicsLayer,\n            watchUtils,\n            Collection,\n            UniqueValueRenderer,\n            ClassBreaksRenderer,\n            SimpleRenderer,\n            ExtrudeSymbol3DLayer,\n            PolygonSymbol3D,\n            SimpleMarkerSymbol,\n            PictureMarkerSymbol,\n            SimpleLineSymbol,\n            SimpleFillSymbol,\n            Graphic,\n            Point,\n            PointSymbol3D,\n            ObjectSymbol3DLayer,\n            Search,\n            jsonUtils,\n            on\n        ) => {\n            global.options.cors.forEach(elm => {\n                esriConfig.request.corsEnabledServers.push(elm)\n            })\n\n            esriConfig.request.proxyUrl = global.options.proxy || ''\n\n            constructors.Map = Map\n            constructors.SceneView = SceneView\n\n            constructors.layer.FeatureLayer = FeatureLayer\n            constructors.layer.TileLayer = TileLayer\n            constructors.layer.GraphicsLayer = GraphicsLayer\n\n            constructors.utils.watchUtils = watchUtils\n            constructors.utils.Search = Search\n            constructors.utils.jsonUtils = jsonUtils\n            constructors.utils.Extent = Extent\n            constructors.utils.Camera = Camera\n\n            constructors.renderer.UniqueValueRenderer = UniqueValueRenderer\n            constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer\n            constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer\n            constructors.renderer.PolygonSymbol3D = PolygonSymbol3D\n            constructors.renderer.SimpleRenderer = SimpleRenderer\n            constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol\n            constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol\n            constructors.renderer.SimpleLineSymbol = SimpleLineSymbol\n            constructors.renderer.SimpleFillSymbol = SimpleFillSymbol\n            constructors.renderer.Graphic = Graphic\n            constructors.renderer.Point = Point\n            constructors.renderer.PointSymbol3D = PointSymbol3D\n            constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer\n\n            if (constructors.Map && constructors.SceneView) {\n                logger.log(`All constructorss created!`)\n\n                global.map = createMap(\n                    constructors.Map,\n                    global.options.basemap\n                )\n\n                global.view = createView(\n                    global.map,\n                    constructors.SceneView,\n                    global.options\n                )\n            } else {\n                logger.error(`Error during creating the necessary constructors... Try again.`)\n            }\n        })\n    } else {\n        logger.fatal(`Fatal error! You need set some map options.`)\n    }\n}\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nconst createMap = (Map, basemap) => {\n    logger.log(`Creating map...`)\n\n    const map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation',\n        layers: []\n    })\n\n    return map\n}\n\nexport {\n    options,\n    start\n}\n\n\n\n// WEBPACK FOOTER //\n// ./map.js","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Create view inside map\n * @param  {Object} map - The map object in memory\n * @param  {Function} View - ESRI View constructor\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {Boolean} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {Boolean} options.search.position - Search position\n * @param  {Boolean} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n * @return {Object} Global view object descriptor\n */\nconst createView = (map, View, options) => {\n    if (global.loaded) {\n        logger.log('Creating View...')\n\n        const view = new View({\n            container: options.element,\n            map: map,\n            scale: options.scale,\n            center: [\n                options.longitude,\n                options.latitude\n            ],\n            viewingMode: 'global',\n            starsEnabled: options.stars,\n            atmosphereEnabled: options.atmosphere\n        })\n\n        view.then(() => {\n            logger.log('View ready!')\n\n            controlUI(view)\n            watcherRunning(map, view)\n        })\n\n        return view\n    } else {\n        logger.fatal(`Fatal error! You need set some map options.`)\n    }\n}\n\n/**\n * Watcher that observe the globe moviment\n * and make requests with specific parameters\n * like extent on 'definitionExpression'\n * @param  {Object} map - Global map object descriptor\n * @param  {Object} view - Global view object descriptor\n */\nconst watcherRunning = (map, view) => {\n    const watchUtils = constructors.utils.watchUtils\n\n    watchUtils.whenTrue(view, 'stationary', () => {\n        if (view.extent) {\n            const urlQuery = `!xmin=${view.extent.xmin}!xmax=${view.extent.xmax}!ymin=${view.extent.ymin}!ymax=${view.extent.ymax}`\n\n            logger.log(`View changed! Mapping all layers...`)\n\n            console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale)\n\n            map.allLayers.map(layer => {\n                if (((view.scale < layer.minScale &&\n                        view.scale > layer.maxScale) ||\n                        (layer.minScale === 0 &&\n                        layer.maxScale === 0)) &&\n                        (layer.raw !== undefined &&\n                        layer.visible)) {\n                    if (layer.raw.type === 0) {\n                        logger.log(`Getting extent to request ${layer.title}`)\n                        logger.log(`Requesting to server: ${layer.raw.url}/where=${urlQuery}`)\n\n                        layer.definitionExpression = urlQuery\n                    }\n\n                    logger.log(`Drawing layer: ${layer.title}`)\n                }\n            })\n        }\n    })\n}\n\n/**\n * Only setting some aspects from ESRI UI\n * @param  {Object} view - Global view object descriptor\n */\nconst controlUI = view => {\n    logger.log('Changing UI elements...')\n\n    view.environment.atmosphere.quality = global.options.atmosphere.quality\n\n    if (global.options.search.enable) {\n        const Search = constructors.utils.Search\n        const searchWidget = new Search({\n            view: view\n        })\n\n        view.ui.add(searchWidget, {\n            position: global.options.search.position,\n            index: global.options.search.index\n        })\n    }\n\n    view.ui.remove([\n        'zoom',\n        'compass',\n        'navigation-toggle'\n    ])\n}\n\n/**\n * Navigate on map using long/lat and camera position\n * @param  {Object} coordinates - Object that contain destiny longitude and latitude\n * @param  {Number} scale - Scale on earth\n * @param  {Object} camera - Object that contain new angles to position camera\n */\nconst newPosition = ({coordinates, scale, camera}) => {\n    if (coordinates && scale && camera) {\n        const view = global.view\n\n        view.goTo({\n            center: [\n                coordinates.longitude,\n                coordinates.latitude\n            ],\n            scale: scale,\n            tilt: camera.tilt,\n            heading: camera.heading\n        })\n\n        logger.log(`Changing map position...`)\n    } else {\n        logger.error(`You need set a new position formed by a pair of coordinates, a new scale and new camera positions`)\n    }\n}\n\n/**\n * Change basemap on global map object\n * @param  {String} basemap - A basemap name that match with basemap's list from ESRI\n *                          'streets', 'satellite', 'hybrid', 'topo', 'gray',\n *                          'dark-gray', 'oceans', 'national-geographic',\n *                          'terrain', 'osm', 'dark-gray-vector', 'gray-vector',\n *                          'streets-vector', 'topo-vector', 'streets-night-vector',\n *                          'streets-relief-vector', 'streets-navigation-vector'\n *                          or 'none'\n */\nconst changeBasemap = basemap => {\n    if (basemap) {\n        const map = global.map\n\n        map.basemap = basemap\n\n        logger.log(`Change basemap...`)\n    } else {\n        logger.error(`You need set a new basemap`)\n    }\n}\n\nexport {\n    createView,\n    newPosition,\n    changeBasemap\n}\n\n\n\n// WEBPACK FOOTER //\n// ./view.js","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Recieve all layers, work and add on map\n * @constructor\n * @param  {Array} layers - List of layers\n */\nconst add = layers => {\n    layers.map((layer, indx) => {\n        if (validate(layer)) {\n            logger.log(`Adding id by index on layer`)\n            layer.id = indx\n\n            global.map.add(create(layer))\n        }\n    })\n}\n\n/**\n * Validate single layer\n * @param  {Object} layer - Layer with some options\n * @return {Boolean} True or false to validation\n */\nconst validate = layer => {\n    if (layer) {\n        if (layer.title === undefined ||\n            layer.title === '' ||\n            !layer.title) {\n            logger.fatal(`You need provide a layer title`)\n\n            return false\n        }\n\n        if (layer.visible === undefined ||\n            layer.visible === '') {\n            layer.visible = true\n            logger.warn(`You not set intial visible. Usign default: true`)\n        }\n\n        if (layer.definitionExpression === undefined ||\n            layer.definitionExpression === '') {\n            layer.definitionExpression = ''\n            logger.warn(`You not set intial definitionExpression. Usign default: ''`)\n        }\n\n        if (layer.type === undefined ||\n            layer.type === '' ||\n            !layer.type) {\n            logger.fatal(`You need provide a layer type (0 = FeatureLayer, 1 = TileLayer)`)\n\n            return false\n        }\n\n        if (layer.url === undefined ||\n            layer.url === '' ||\n            !layer.url) {\n            logger.fatal(`You need provide an URL layer`)\n\n            return false\n        }\n\n        return true\n    } else {\n        logger.fatal(`You need pass some informations to describe your layer`)\n        return false\n    }\n}\n\n/**\n * Recieve a single layer object and return layer ready\n * @param {Object} _layer - Valid Layer object previously worked\n * @return {Object} Layer ready to add on map\n */\nconst create = (_layer) => {\n    const layerConstructors = constructors.layer\n    const utilsConstructors = constructors.utils\n    const jsonUtils = utilsConstructors.jsonUtils\n    let LayerType\n\n    if (_layer.type === 0) {\n        logger.log(`Creating new Feature Layer...`)\n        LayerType = layerConstructors.FeatureLayer\n    } else if (_layer.type === 1) {\n        logger.log(`Creating new Tile Layer...`)\n        LayerType = layerConstructors.TileLayer\n    }\n\n    logger.log(`Adding layer on map: ${_layer.title} | Initial visibility: ${_layer.visible}`)\n\n    const layer = new LayerType({\n        id: _layer.id,\n        url: _layer.url,\n        definitionExpression: _layer.definitionExpression,\n        raw: _layer,\n        visible: _layer.visible\n    })\n\n    logger.log(`Loading layer from: ${_layer.url}`)\n\n    if (layer.raw.renderer) {\n        logger.log(`Applying renderer...`)\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.renderer)\n    }\n\n    // if (layer.raw.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(() => {\n        logger.log(`Layer ${layer.title} ready!`)\n        logger.log(`View waiting changes...`)\n\n        if (layer.raw.type === 1) {\n            layer.minScale = layer.raw.minScale !== null\n                ? layer.raw.minScale\n                : 0\n            layer.maxScale = layer.raw.maxScale !== null\n                ? layer.raw.maxScale\n                : 0\n\n            logger.log(`minScale: ${layer.minScale} and maxScale: ${layer.maxScale} defined manually`)\n        }\n    })\n\n    return layer\n}\n\n/**\n * Find specific layer in map\n * @param  {String|Number} _layer - Layer title or ID\n * @return {Object} Layer that will be manipulated\n */\nconst findLayer = _layer => {\n    const map = global.map\n\n    return map.allLayers.find(layer => {\n        if (layer.raw !== undefined) {\n            if (layer.raw.title === _layer ||\n                layer.raw.id === _layer) {\n                return layer\n            }\n        }\n    })\n}\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} visibility - Set if layer is visible or not\n */\nconst setVisibility = (_layer, visibility) => {\n    const layer = findLayer(_layer)\n\n    if (layer) {\n        layer.visible = visibility\n        logger.log(`Change visibility of layer: ${_layer} to: ${visibility}`)\n    } else {\n        logger.error(`Can't find layer: ${_layer} in map. You already added this layer?`)\n    }\n}\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nconst setOpacity = (_layer, _opacity) => {\n    const layer = findLayer(_layer)\n\n    if (layer) {\n        layer.opacity = _opacity / 100\n        logger.log(`Change opacity of layer: ${_layer} to: ${_opacity}`)\n    } else {\n        logger.error(`Can't find layer: ${_layer} in map. You already added this layer?`)\n    }\n}\n\n/**\n * Change visibility of all layers using parameter\n * @param  {Boolean} visibility - new opacity\n */\nconst changeVisibility = visibility => {\n    const map = global.map\n\n    map.allLayers.map(layer => {\n        if (layer.raw !== undefined) {\n            if (layer.visible === !visibility) {\n                layer.visible = visibility\n                logger.log(`Change visibility of layer: ${layer.raw.title} to: ${visibility}`)\n            }\n        }\n    })\n}\n\n/**\n * Set visibility of all layers to false\n */\nconst hideAll = () => {\n    changeVisibility(false)\n}\n\n/**\n * Set visibility of all layers to true\n */\nconst showAll = () => {\n    changeVisibility(true)\n}\n\nexport {\n    add,\n    setVisibility,\n    setOpacity,\n    hideAll,\n    showAll\n}\n\n\n\n// WEBPACK FOOTER //\n// ./layers.js","import * as map from './map'\nimport * as view from './view'\nimport * as layers from './layers'\n\nexport {\n    map,\n    view,\n    layers\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nexport function isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nexport function bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nexport function dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\nexport default {\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n};\n//# sourceMappingURL=esri-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/esri-loader/src/esri-loader.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}