{"version":3,"sources":["webpack:///arceasy.min.js","webpack:///webpack/bootstrap 0e8343ffc1798e23df2f","webpack:///./config.js","webpack:///./logger.js","webpack:///./view.js","webpack:///./layers.js","webpack:///./map.js","webpack:///./utils.js","webpack:///./index.js","webpack:///../~/esri-loader/src/esri-loader.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","prefix","global","map","view","options","cdn","element","scale","center","longitude","latitude","basemap","stars","atmosphere","enable","quality","watcher","light","cameraTracking","search","position","index","cors","proxy","loaded","constructors","layer","container","utils","renderer","dojo","templates","renderers","symbols","warn","fatal","error","log","undefined","_config","logCounter","errorCounter","fatalCounter","warnCounter","message","_object","console","Error","changeBasemap","newPosition","createView","_logger","logger","obj","newObj","key","default","watcherRunning","View","viewingMode","starsEnabled","atmosphereEnabled","then","controlUI","date","watchUtils","whenTrue","refreshExtent","urlQuery","extent","xmin","xmax","ymin","ymax","allLayers","raw","minScale","maxScale","type","definitionExpression","outOfRange","visible","title","url","environment","Search","searchWidget","ui","add","remove","_ref","lighting","cameraTrackingEnabled","Date","now","_ref2","coordinates","camera","goTo","tilt","heading","showAll","hideAll","setOpacity","setVisibility","all","validate","layers","indx","id","create","_layer","layerConstructors","utilsConstructors","jsonUtils","LayerType","layerLabel","FeatureLayer","TileLayer","fromJSON","parseInt","find","changeVisibility","_items","filter","visibility","_opacity","opacity","_interopRequireWildcard","start","_esriLoader","esriLoader","_view","dojoLoader","_options","length","Promise","resolve","reject","isLoaded","bootstrap","err","dojoRequire","esriConfig","Map","Graphic","Camera","SceneView","externalRenderers","GraphicsLayer","Collection","declare","UniqueValueRenderer","ClassBreaksRenderer","SimpleRenderer","ExtrudeSymbol3DLayer","PolygonSymbol3D","SimpleMarkerSymbol","PictureMarkerSymbol","SimpleLineSymbol","SimpleFillSymbol","PointSymbol3D","ObjectSymbol3DLayer","Geometry","Point","Extent","SpatialReference","QueryTask","Query","esriRequest","on","forEach","elm","request","corsEnabledServers","push","proxyUrl","createMap","ground","hideGraphicLayers","addGraphicLayer","_symbol","_point","graphicsLayer","objectSymbol","symbolLayers","width","height","resource","primitive","material","color","point","x","y","z","pointGraphic","geometry","symbol","arr","_map","_layers","_utils","__webpack_exports__","getScript","document","querySelector","window","callback","script","createElement","src","dataset","onload","body","appendChild","script_1","onScriptLoad_1","removeEventListener","addEventListener"],"mappings":"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","file":"arceasy.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar prefix = exports.prefix = 'ArcEasy';\n\nvar global = exports.global = {\n    map: {},\n    view: {},\n    options: {\n        cdn: 'https://js.arcgis.com/4.3/',\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: true,\n        atmosphere: {\n            enable: true,\n            quality: 'low'\n        },\n        watcher: true,\n        light: {\n            cameraTracking: true\n        },\n        search: {\n            enable: false,\n            position: 'top-left',\n            index: 1\n        },\n        cors: [],\n        proxy: ''\n    },\n    loaded: false\n};\n\nvar constructors = exports.constructors = {\n    layer: {},\n    map: {},\n    container: {},\n    view: {},\n    utils: {},\n    renderer: {},\n    dojo: {}\n};\n\nvar templates = exports.templates = {\n    renderers: [],\n    symbols: []\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.warn = exports.fatal = exports.error = exports.log = undefined;\n\nvar _config = __webpack_require__(0);\n\nvar logCounter = 0;\nvar errorCounter = 0;\nvar fatalCounter = 0;\nvar warnCounter = 0;\n\n/**\n * Add conter and prefix and execute simple console.log()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nvar log = exports.log = function log(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    logCounter++;\n\n    return console.log(logCounter + ' [LOG|' + _config.prefix + '] ' + message, object);\n};\n\n/**\n * Add conter and prefix and execute console.error()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nvar error = exports.error = function error(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    errorCounter++;\n\n    return console.error(errorCounter + ' [ERROR|' + _config.prefix + '] ' + message, object);\n};\n\n/**\n * Add conter and prefix and create a throw new Error()\n * @param  {String} message - Your log text\n * @return {Function}\n */\nvar fatal = exports.fatal = function fatal(message) {\n    fatalCounter++;\n\n    throw new Error(fatalCounter + ' [FATAL|' + _config.prefix + '] ' + message);\n};\n\n/**\n * Add conter and prefix and execute console.warn()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nvar warn = exports.warn = function warn(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    warnCounter++;\n\n    return console.warn(warnCounter + ' [WARN|' + _config.prefix + '] ' + message, object);\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.changeBasemap = exports.newPosition = exports.light = exports.createView = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Create view inside map\n * @param  {Object} map - The map object in memory\n * @param  {Function} View - ESRI View constructor\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.watcher - If watcherRunning() is enabled\n * @param  {Boolean} options.light.cameraTracking - If you to display the\n *                                                lighting according to the\n *                                                current time of day\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n * @return {Object} Global view object descriptor\n */\nvar createView = exports.createView = function createView(map, View, options) {\n    if (_config.global.loaded) {\n        logger.log('Creating View...');\n\n        var view = new View({\n            container: options.element,\n            map: map,\n            scale: options.scale,\n            center: [options.center.longitude, options.center.latitude],\n            viewingMode: 'global',\n            starsEnabled: options.stars,\n            atmosphereEnabled: options.atmosphere.enable\n        });\n\n        view.then(function () {\n            logger.log('View ready!');\n\n            controlUI(view);\n            light({\n                cameraTracking: options.light.cameraTracking,\n                date: options.light.date\n            });\n\n            if (options.watcher) {\n                watcherRunning(view);\n            }\n        });\n\n        return view;\n    } else {\n        logger.fatal('Fatal error! You need set some map options.');\n    }\n};\n\n/**\n * Watcher that observe the globe moviment\n * and make requests with specific parameters\n * like extent on 'definitionExpression'\n * @param  {Object} view - Global view object descriptor\n */\nvar watcherRunning = function watcherRunning(view) {\n    var watchUtils = _config.constructors.utils.watchUtils;\n\n    watchUtils.whenTrue(view, 'stationary', function () {\n        logger.log('View changed! Getting extent to refreshing layers...'\n        // console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale)\n\n        );refreshExtent(view);\n    });\n};\n\n/**\n * Function to get the actual extent and set the definition expression\n * on layer and make an request to refreh the layer info\n * @param  {Object} view - Global view object descriptor\n */\nvar refreshExtent = function refreshExtent(view) {\n    var map = _config.global.map;\n    var urlQuery = '!xmin=' + view.extent.xmin + '!xmax=' + view.extent.xmax + '!ymin=' + view.extent.ymin + '!ymax=' + view.extent.ymax;\n\n    map.allLayers.map(function (layer) {\n        if (layer.raw !== undefined) {\n            if (view.scale < layer.minScale && view.scale > layer.maxScale || layer.minScale === 0 && layer.maxScale === 0) {\n                if (layer.raw.type === 0) {\n                    layer.definitionExpression = urlQuery;\n                }\n                layer.outOfRange = false;\n\n                if (layer.visible) {\n                    logger.log('Drawing layer: ' + layer.title + ' | URL requested: ' + layer.raw.url + '/where=' + urlQuery);\n                }\n            } else {\n                if (layer.visible) {\n                    logger.log(layer.title + ' it\\'s visible, but is out of range');\n                }\n\n                layer.outOfRange = true;\n            }\n        }\n    });\n};\n\n/**\n * Only setting some aspects from ESRI UI\n * @param  {Object} view - Global view object descriptor\n */\nvar controlUI = function controlUI(view) {\n    logger.log('Changing UI elements...');\n\n    view.environment.atmosphereEnabled = _config.global.options.atmosphere.enable;\n    view.environment.atmosphere.quality = _config.global.options.atmosphere.quality;\n\n    if (_config.global.options.search.enable) {\n        var Search = _config.constructors.utils.Search;\n        var searchWidget = new Search({\n            view: view\n        });\n\n        view.ui.add(searchWidget, {\n            position: _config.global.options.search.position,\n            index: _config.global.options.search.index\n        });\n    }\n\n    view.ui.remove(['zoom', 'compass', 'navigation-toggle']);\n};\n\n/**\n * Change camera tracking\n * @param  {Object} cameraTracking - Set the light on the world based on camera or not\n */\nvar light = exports.light = function light(_ref) {\n    var cameraTracking = _ref.cameraTracking,\n        date = _ref.date;\n\n    var view = _config.global.view;\n\n    if (cameraTracking !== '' && cameraTracking !== undefined) {\n        logger.log('Changing light camera tracking to: ' + cameraTracking);\n        view.environment.lighting.cameraTrackingEnabled = cameraTracking;\n    }\n\n    if (date === 'now') {\n        logger.log('Changing light date to: ' + date);\n        view.environment.lighting.date = Date.now();\n    }\n\n    if (date === '' || date === undefined) {\n        view.environment.lighting.date = new Date('Jul 15 2017 12:00:00');\n        logger.log('Changing light date to: default - Jul 15 2017 12:00:00');\n    }\n};\n\n/**\n * Navigate on map using long/lat and camera position\n * @param  {Object} coordinates - Object that contain destiny longitude and latitude\n * @param  {Number} scale - Scale on earth\n * @param  {Object} camera - Object that contain new angles to position camera\n */\nvar newPosition = exports.newPosition = function newPosition(_ref2) {\n    var coordinates = _ref2.coordinates,\n        scale = _ref2.scale,\n        camera = _ref2.camera;\n\n    if (coordinates && scale && camera) {\n        var view = _config.global.view;\n\n        view.goTo({\n            center: [coordinates.longitude, coordinates.latitude],\n            scale: scale,\n            tilt: camera.tilt,\n            heading: camera.heading\n        });\n\n        logger.log('Changing map position...');\n    } else {\n        logger.error('You need set a new position formed by a pair of coordinates, a new scale and new camera positions');\n    }\n};\n\n/**\n * Change basemap on global map object\n * @param  {String} basemap - A basemap name that match with basemap's list from ESRI\n *                          'streets', 'satellite', 'hybrid', 'topo', 'gray',\n *                          'dark-gray', 'oceans', 'national-geographic',\n *                          'terrain', 'osm', 'dark-gray-vector', 'gray-vector',\n *                          'streets-vector', 'topo-vector', 'streets-night-vector',\n *                          'streets-relief-vector', 'streets-navigation-vector'\n *                          or 'none'\n */\nvar changeBasemap = exports.changeBasemap = function changeBasemap(basemap) {\n    if (basemap) {\n        var map = _config.global.map;\n\n        map.basemap = basemap;\n\n        logger.log('Change basemap...');\n    } else {\n        logger.error('You need set a new basemap');\n    }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.showAll = exports.hideAll = exports.setOpacity = exports.setVisibility = exports.all = exports.add = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Recieve all layers, work and add on map\n * @constructor\n * @param  {Array} layers - List of layers\n */\nvar add = exports.add = function add(layers) {\n    var map = _config.global.map;\n\n    layers.map(function (layer, indx) {\n        if (validate(layer)) {\n            if (layer.id === undefined || layer.id === '' || !layer.id) {\n                logger.log('Adding id by index on layer');\n                layer.id = indx;\n            }\n\n            layer.outOfRange = true;\n\n            return map.add(create(layer));\n        }\n    });\n};\n\n/**\n * Validate single layer\n * @param  {Object} layer - Layer with some options\n * @return {Boolean} True or false to validation\n */\nvar validate = function validate(layer) {\n    if (layer) {\n        !layer.title || logger.log('Validating layer: ' + layer.title);\n\n        if (layer.title === undefined || layer.title === '' || !layer.title) {\n            logger.fatal('You need provide a layer title');\n\n            return false;\n        }\n\n        if (layer.visible === undefined || layer.visible === '') {\n            layer.visible = true;\n            logger.warn('You not set intial visible. Usign default: true');\n        }\n\n        if (layer.definitionExpression === undefined || layer.definitionExpression === '') {\n            layer.definitionExpression = '';\n            logger.warn('You not set intial definitionExpression. Usign default: \\'\\'');\n        }\n\n        if (layer.type === undefined || layer.type === '' || layer.type === false) {\n            logger.fatal('You need provide a layer type (0 = FeatureLayer, 1 = TileLayer)');\n\n            return false;\n        }\n\n        if (layer.url === undefined || layer.url === '' || !layer.url) {\n            logger.fatal('You need provide an URL layer');\n\n            return false;\n        }\n\n        return true;\n    } else {\n        logger.fatal('You need pass some informations to describe your layer');\n        return false;\n    }\n};\n\n/**\n * Recieve a single layer object and return layer ready\n * @param {Object} _layer - Valid Layer object previously worked\n * @return {Object} Layer ready to add on map\n */\nvar create = function create(_layer) {\n    var layerConstructors = _config.constructors.layer;\n    var utilsConstructors = _config.constructors.utils;\n    var jsonUtils = utilsConstructors.jsonUtils;\n    var LayerType = void 0;\n    var layerLabel = void 0;\n\n    if (_layer.type === 0) {\n        layerLabel = 'Feature Layer';\n        LayerType = layerConstructors.FeatureLayer;\n    } else if (_layer.type === 1) {\n        layerLabel = 'Tile Layer';\n        LayerType = layerConstructors.TileLayer;\n    }\n\n    var layer = new LayerType({\n        id: _layer.id,\n        title: _layer.title,\n        url: _layer.url,\n        definitionExpression: _layer.definitionExpression,\n        raw: _layer,\n        visible: _layer.visible\n    });\n\n    logger.log('Adding a ' + layerLabel + ' on map: ' + layer.raw.title + ' | Visibility: ' + layer.raw.visible + ' | URL: ' + layer.raw.url);\n\n    if (layer.raw.renderer) {\n        logger.log('Applying renderer...');\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.renderer);\n    }\n\n    // if (layer.raw.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(function () {\n        logger.log('Layer ' + layer.title + ' ready!');\n\n        if (layer.raw.type === 1) {\n            layer.minScale = layer.raw.minScale !== null && parseInt(layer.raw.minScale) !== 0 ? layer.raw.minScale : 0;\n            layer.maxScale = layer.raw.maxScale !== null && parseInt(layer.raw.maxScale) ? layer.raw.maxScale : 0;\n\n            // logger.log(`minScale: ${parseInt(layer.minScale)} and maxScale: ${parseInt(layer.maxScale)} defined manually`)\n        }\n    });\n\n    return layer;\n};\n\n/**\n * Find specific layer in map\n * @param  {String|Number} _layer - Layer title or ID\n * @return {Object} Layer that will be manipulated\n */\nvar find = function find(_layer) {\n    var map = _config.global.map;\n\n    return map.allLayers.find(function (layer) {\n        if (layer.raw !== undefined) {\n            if (layer.raw.title === _layer || layer.raw.id === _layer) {\n                return layer;\n            }\n        }\n    });\n};\n\n/**\n * get all layers included on map\n * @return {Array} list of all layers included by user\n */\nvar all = exports.all = function all() {\n    var map = _config.global.map;\n\n    return map.allLayers._items.filter(function (layer) {\n        if (layer.raw !== undefined) {\n            return true;\n        }\n    });\n};\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} visibility - Set if layer is visible or not\n */\nvar setVisibility = exports.setVisibility = function setVisibility(_layer, visibility) {\n    var layer = find(_layer);\n\n    if (layer) {\n        layer.visible = visibility;\n        logger.log('Change visibility of layer: ' + _layer + ' to: ' + visibility);\n    } else {\n        logger.error('Can\\'t find layer: ' + _layer + ' in map. You already added this layer?');\n    }\n};\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nvar setOpacity = exports.setOpacity = function setOpacity(_layer, _opacity) {\n    var layer = find(_layer);\n\n    if (layer) {\n        layer.opacity = _opacity / 100;\n        logger.log('Change opacity of layer: ' + _layer + ' to: ' + _opacity);\n    } else {\n        logger.error('Can\\'t find layer: ' + _layer + ' in map. You already added this layer?');\n    }\n};\n\n/**\n * Change visibility of all layers using parameter\n * @param  {Boolean} visibility - new opacity\n */\nvar changeVisibility = function changeVisibility(visibility) {\n    var map = _config.global.map;\n\n    map.allLayers.map(function (layer) {\n        if (layer.raw !== undefined) {\n            if (layer.visible === !visibility) {\n                layer.visible = visibility;\n                logger.log('Change visibility of layer: ' + layer.raw.title + ' to: ' + visibility);\n            }\n        }\n    });\n};\n\n/**\n * Set visibility of all layers to false\n */\nvar hideAll = exports.hideAll = function hideAll() {\n    changeVisibility(false);\n};\n\n/**\n * Set visibility of all layers to true\n */\nvar showAll = exports.showAll = function showAll() {\n    changeVisibility(true);\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.start = exports.options = undefined;\n\nvar _esriLoader = __webpack_require__(7);\n\nvar esriLoader = _interopRequireWildcard(_esriLoader);\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _view = __webpack_require__(2);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Simple function to set globaly options about the map\n * To start using ArcEasy you need invocate this function first\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.watcher - If watcherRunning() is enabled\n * @param  {Boolean} options.light.cameraTracking - If you to display the\n *                                                lighting according to the\n *                                                current time of day\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nvar options = exports.options = function options(_options) {\n    if (_options) {\n        _options.cdn || logger.warn('You not set any ESRI CDN. Usign default: ' + _config.global.options.cdn);\n\n        _options.element || logger.fatal('You need pass an valid DOM element');\n\n        _options.scale || logger.warn('You not set scale. Usign default scale: ' + _config.global.options.scale);\n\n        if (_options.center) {\n            _options.center.longitude || logger.warn('You not set intial longitude. Usign default: ' + _config.global.options.center.longitude);\n\n            _options.center.latitude || logger.warn('You not set intial latitude. Usign default: ' + _config.global.options.center.latitude);\n        } else {\n            logger.warn('You not set the map center. Usign defaults | longitude: ' + _config.global.options.center.longitude + ', latitude: ' + _config.global.options.center.latitude);\n        }\n\n        _options.basemap || logger.warn('You not set initial basemap. Usign default: ' + _config.global.options.basemap);\n\n        _options.stars === true || _options.stars === false || logger.warn('You not set if map usign stars. Usign default: ' + _config.global.options.stars);\n\n        if (_options.atmosphere) {\n            _options.atmosphere.enable === true || _options.atmosphere.enable === false || logger.warn('You not set if map usign atmosphere efect. Usign default: ' + _config.global.options.atmosphere.enable);\n\n            _options.atmosphere.quality || logger.warn('You not set atmosphere quality. Usign default: ' + _config.global.options.atmosphere.quality);\n        } else {\n            logger.warn('You not set the atmosphere options. Usign defaults | enable: ' + _config.global.options.atmosphere.enable + ', quality: ' + _config.global.options.atmosphere.quality);\n        }\n\n        _options.watcher === true || _options.watcher === false || logger.warn('You not set if map usign watcher to refresh the layers. Usign default: ' + _config.global.options.watcher);\n\n        if (_options.light) {\n            _options.light.cameraTracking === true || _options.light.cameraTracking === false || logger.warn('You not set the camera tracking options. Usign default: ' + _config.global.options.light.cameraTracking);\n\n            _options.light.date === '' || _options.light.date === undefined || logger.warn('You not set a date to view light position.');\n        } else {\n            logger.warn('You not set the light options. Usign default for camera tracking: ' + _config.global.options.light.cameraTracking);\n        }\n\n        if (_options.search) {\n            _options.search.enable === true || _options.search.enable === false || logger.warn('You not set Search. Usign default: ' + _config.global.options.search.enable);\n\n            _options.search.position || logger.warn('You not set Search position. Usign default: ' + _config.global.options.search.position);\n\n            _options.search.index || logger.warn('You not set Search index. Usign default: ' + _config.global.options.search.index);\n        } else {\n            logger.warn('You not set the search options. Usign defaults | enable: ' + _config.global.options.search.enable + ', position: ' + _config.global.options.search.position + ', index: ' + _config.global.options.search.index);\n        }\n\n        _options.cors && _options.cors.length > 0 || logger.warn('You not set any URL to enable CORS requests');\n\n        _options.proxy || logger.warn('You not set any URL to proxy your requests');\n\n        _config.global.options = {\n            cdn: _options.cdn !== '' && _options.cdn !== undefined ? _options.cdn : _config.global.options.cdn,\n            element: _options.element,\n            scale: _options.scale !== '' && _options.scale !== undefined ? _options.scale : _config.global.options.scale,\n            center: {\n                longitude: _options.center && _options.center.longitude !== '' && _options.center.longitude !== undefined ? _options.center.longitude : _config.global.options.center.longitude,\n                latitude: _options.center && _options.center.latitude !== '' && _options.center.latitude !== undefined ? _options.center.latitude : _config.global.options.center.latitude\n            },\n            basemap: _options.basemap !== '' && _options.basemap !== undefined ? _options.basemap : _config.global.options.basemap,\n            stars: _options.stars !== '' && _options.stars !== undefined ? _options.stars : _config.global.options.stars,\n            atmosphere: {\n                enable: _options.atmosphere && _options.atmosphere.enable !== '' && _options.atmosphere.enable !== undefined ? _options.atmosphere.enable : _config.global.options.atmosphere.enable,\n                quality: _options.atmosphere && _options.atmosphere.quality !== '' && _options.atmosphere.quality !== undefined ? _options.atmosphere.quality : _config.global.options.atmosphere.quality\n            },\n            watcher: _options.watcher !== '' && _options.watcher !== undefined ? _options.watcher : _config.global.options.watcher,\n            light: {\n                cameraTracking: _options.light && _options.light.cameraTracking !== '' && _options.light.cameraTracking !== undefined ? _options.light.cameraTracking : _config.global.options.light.cameraTracking,\n                date: _options.light && _options.light.date !== '' && _options.light.date !== undefined ? _options.light.date : _config.global.options.light.date\n            },\n            search: {\n                enable: _options.search && _options.search.enable !== '' && _options.search.enable !== undefined ? _options.search.enable : _config.global.options.search.enable,\n                position: _options.search && _options.search.position !== '' && _options.search.position !== undefined ? _options.search.position : _config.global.options.search.position,\n                index: _options.search && _options.search.index !== '' && _options.search.index !== undefined ? _options.search.index : _config.global.options.search.index\n            },\n            cors: _options.cors !== '' && _options.cors !== undefined ? _options.cors : '',\n            proxy: _options.proxy !== '' && _options.proxy !== undefined ? _options.proxy : ''\n        };\n\n        _config.global.loaded = true;\n        logger.log('Ready to start!');\n    } else {\n        logger.fatal('You need pass some informations to describe your map');\n    }\n};\n\n/**\n * The BigBang function\n * To create your map you need invocate this function\n */\nvar start = exports.start = function start() {\n    return new Promise(function (resolve, reject) {\n        var cdn = _config.global.options.cdn;\n\n        if (cdn !== undefined && _config.global.loaded) {\n            // Has the ArcGIS API been added to the page?\n            if (!esriLoader.isLoaded()) {\n                // No, lazy load it the ArcGIS API before using its classes\n                esriLoader.bootstrap(function (err) {\n                    if (err) {\n                        logger.error(err);\n                    }\n                    // Once it's loaded, create the map\n                    logger.log('Waiting ESRI server...');\n                    dojoLoader(resolve, reject);\n                }, {\n                    // Use a specific version instead of latest 4.x\n                    url: cdn\n                });\n            } else {\n                // ArcGIS API is already loaded, just create the map\n                logger.log('Waiting ESRI server...');\n                dojoLoader(resolve, reject);\n            }\n        } else {\n            logger.fatal('Fatal error! You must provider an CDN.');\n            reject();\n        }\n    });\n};\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nvar dojoLoader = function dojoLoader(resolve, reject) {\n    if (_config.global.loaded) {\n        esriLoader.dojoRequire(['esri/config', 'esri/Map', 'esri/Graphic', 'esri/Camera', 'esri/views/SceneView', 'esri/views/3d/externalRenderers', 'esri/layers/FeatureLayer', 'esri/layers/TileLayer', 'esri/layers/GraphicsLayer', 'esri/core/watchUtils', 'esri/core/Collection', 'esri/core/declare', 'esri/renderers/UniqueValueRenderer', 'esri/renderers/ClassBreaksRenderer', 'esri/renderers/SimpleRenderer', 'esri/renderers/support/jsonUtils', 'esri/symbols/ExtrudeSymbol3DLayer', 'esri/symbols/PolygonSymbol3D', 'esri/symbols/SimpleMarkerSymbol', 'esri/symbols/PictureMarkerSymbol', 'esri/symbols/SimpleLineSymbol', 'esri/symbols/SimpleFillSymbol', 'esri/symbols/PointSymbol3D', 'esri/symbols/ObjectSymbol3DLayer', 'esri/geometry/Geometry', 'esri/geometry/Point', 'esri/geometry/Extent', 'esri/geometry/SpatialReference', 'esri/tasks/QueryTask', 'esri/tasks/support/Query', 'esri/widgets/Search', 'esri/request', 'dojo/promise/all', 'dojo/on', 'dojo/domReady!'], function (esriConfig, Map, Graphic, Camera, SceneView, externalRenderers, FeatureLayer, TileLayer, GraphicsLayer, watchUtils, Collection, declare, UniqueValueRenderer, ClassBreaksRenderer, SimpleRenderer, jsonUtils, ExtrudeSymbol3DLayer, PolygonSymbol3D, SimpleMarkerSymbol, PictureMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, PointSymbol3D, ObjectSymbol3DLayer, Geometry, Point, Extent, SpatialReference, QueryTask, Query, Search, esriRequest, all, on) {\n            if (_config.global.options.cors) {\n                _config.global.options.cors.forEach(function (elm) {\n                    esriConfig.request.corsEnabledServers.push(elm);\n                });\n            }\n\n            esriConfig.request.proxyUrl = _config.global.options.proxy || '';\n\n            _config.constructors.Map = Map;\n            _config.constructors.SceneView = SceneView;\n            _config.constructors.externalRenderers = externalRenderers;\n\n            _config.constructors.layer.FeatureLayer = FeatureLayer;\n            _config.constructors.layer.TileLayer = TileLayer;\n            _config.constructors.layer.GraphicsLayer = GraphicsLayer;\n\n            _config.constructors.utils.watchUtils = watchUtils;\n            _config.constructors.utils.Search = Search;\n            _config.constructors.utils.jsonUtils = jsonUtils;\n            _config.constructors.utils.Extent = Extent;\n            _config.constructors.utils.SpatialReference = SpatialReference;\n            _config.constructors.utils.Camera = Camera;\n            _config.constructors.utils.esriRequest = esriRequest;\n            _config.constructors.utils.declare = declare;\n            _config.constructors.utils.QueryTask = QueryTask;\n            _config.constructors.utils.Query = Query;\n\n            _config.constructors.renderer.UniqueValueRenderer = UniqueValueRenderer;\n            _config.constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer;\n            _config.constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer;\n            _config.constructors.renderer.PolygonSymbol3D = PolygonSymbol3D;\n            _config.constructors.renderer.SimpleRenderer = SimpleRenderer;\n            _config.constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol;\n            _config.constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol;\n            _config.constructors.renderer.SimpleLineSymbol = SimpleLineSymbol;\n            _config.constructors.renderer.SimpleFillSymbol = SimpleFillSymbol;\n            _config.constructors.renderer.Graphic = Graphic;\n            _config.constructors.renderer.Point = Point;\n            _config.constructors.renderer.PointSymbol3D = PointSymbol3D;\n            _config.constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer;\n\n            _config.constructors.dojo.on = on;\n            _config.constructors.dojo.all = all;\n\n            if (_config.constructors.Map && _config.constructors.SceneView) {\n                logger.log('All constructorss created!'\n\n                // global.map = createMap(\n                //     constructors.Map,\n                //     global.options.basemap\n                // )\n                );createMap(_config.constructors.Map, _config.global.options.basemap).then(function (map) {\n                    _config.global.map = map;\n                    return _config.global.map;\n                }).then(function (map) {\n                    (0, _view.createView)(map, _config.constructors.SceneView, _config.global.options).then(function (view) {\n                        _config.global.view = view;\n                        resolve();\n                    });\n                }\n\n                // global.view = createView(\n                //     global.map,\n                //     constructors.SceneView,\n                //     global.options\n                // )\n                );\n            } else {\n                logger.error('Error during creating the necessary constructors... Try again.');\n                reject();\n            }\n        });\n    } else {\n        logger.fatal('Fatal error! You need set some map options.');\n        reject();\n    }\n};\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nvar createMap = function createMap(Map, basemap) {\n    logger.log('Creating map...');\n\n    var map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation'\n    });\n\n    return Promise.resolve(map);\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.hideGraphicLayers = exports.addGraphicLayer = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Helper to add a simple point symbol on map using layer\n * @param {Object} _symbol - Some informations about your symbol\n * @param {String} _symbol.id - You can pass an ID to find this layer after\n * @param {Number} _symbol.width - Width of the symbol\n * @param {Number} _symbol.height - Height of the symbol\n * @param {String} _symbol.primitive - Name of the symbol\n * @param {String} _symbol.color - Color of the symbol\n * @param {Object} _point - Some information about the position of the symbol\n * @param {Number} _point.x - X axis position\n * @param {Number} _point.y - Y axis position\n * @param {Number} _point.z - Z axis position\n */\nvar addGraphicLayer = exports.addGraphicLayer = function addGraphicLayer(_symbol, _point) {\n    var map = _config.global.map;\n    var GraphicsLayer = _config.constructors.layer.GraphicsLayer;\n    var PointSymbol3D = _config.constructors.renderer.PointSymbol3D;\n    var ObjectSymbol3DLayer = _config.constructors.renderer.ObjectSymbol3DLayer;\n    var Point = _config.constructors.renderer.Point;\n    var Graphic = _config.constructors.renderer.Graphic;\n\n    var graphicsLayer = new GraphicsLayer({\n        id: _symbol.id !== '' || _symbol.id !== undefined ? _symbol.id : '[ArcE]Graph'\n    });\n\n    var objectSymbol = new PointSymbol3D({\n        symbolLayers: [new ObjectSymbol3DLayer({\n            width: _symbol.width,\n            height: _symbol.height,\n            resource: {\n                primitive: _symbol.primitive\n            },\n            material: {\n                color: _symbol.color\n            }\n        })]\n    });\n\n    var point = new Point({\n        x: _point.x,\n        y: _point.y,\n        z: _point.z\n    });\n\n    var pointGraphic = new Graphic({\n        geometry: point,\n        symbol: objectSymbol\n    });\n\n    map.add(graphicsLayer);\n    graphicsLayer.add(pointGraphic);\n\n    logger.log('Adding a Graphic Layer on map...');\n};\n\nvar hideGraphicLayers = exports.hideGraphicLayers = function hideGraphicLayers() {\n    var map = _config.global.map;\n\n    map.allLayers.map(function (elm, indx, arr) {\n        if (elm.id === '[ArcE]Graph') {\n            if (elm.visible === true) {\n                elm.visible = false;\n                logger.log('Hiding Graphic Layer...');\n            }\n        }\n    });\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _map = __webpack_require__(4);\n\nvar map = _interopRequireWildcard(_map);\n\nvar _view = __webpack_require__(2);\n\nvar view = _interopRequireWildcard(_view);\n\nvar _layers = __webpack_require__(3);\n\nvar layers = _interopRequireWildcard(_layers);\n\nvar _utils = __webpack_require__(5);\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nmodule.exports = {\n    map: map,\n    view: view,\n    layers: layers,\n    utils: utils,\n    obj: {\n        get map() {\n            return _config.global.map;\n        },\n        get view() {\n            return _config.global.view;\n        },\n        get constructors() {\n            return _config.constructors;\n        }\n    }\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"isLoaded\"] = isLoaded;\n/* harmony export (immutable) */ __webpack_exports__[\"bootstrap\"] = bootstrap;\n/* harmony export (immutable) */ __webpack_exports__[\"dojoRequire\"] = dojoRequire;\n// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nfunction isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nfunction bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nfunction dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n});\n//# sourceMappingURL=esri-loader.js.map\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// arceasy.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0e8343ffc1798e23df2f","export const prefix = 'ArcEasy'\n\nexport const global = {\n    map: {},\n    view: {},\n    options: {\n        cdn: 'https://js.arcgis.com/4.3/',\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: true,\n        atmosphere: {\n            enable: true,\n            quality: 'low'\n        },\n        watcher: true,\n        light: {\n            cameraTracking: true\n        },\n        search: {\n            enable: false,\n            position: 'top-left',\n            index: 1\n        },\n        cors: [],\n        proxy: ''\n    },\n    loaded: false\n}\n\nexport const constructors = {\n    layer: {},\n    map: {},\n    container: {},\n    view: {},\n    utils: {},\n    renderer: {},\n    dojo: {}\n}\n\nexport const templates = {\n    renderers: [],\n    symbols: []\n}\n\n\n\n// WEBPACK FOOTER //\n// ./config.js","import { prefix } from './config'\n\nlet logCounter = 0\nlet errorCounter = 0\nlet fatalCounter = 0\nlet warnCounter = 0\n\n/**\n * Add conter and prefix and execute simple console.log()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nexport const log = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    logCounter++\n\n    return console.log(`${logCounter} [LOG|${prefix}] ${message}`, object)\n}\n\n/**\n * Add conter and prefix and execute console.error()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nexport const error = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    errorCounter++\n\n    return console.error(`${errorCounter} [ERROR|${prefix}] ${message}`, object)\n}\n\n/**\n * Add conter and prefix and create a throw new Error()\n * @param  {String} message - Your log text\n * @return {Function}\n */\nexport const fatal = (message) => {\n    fatalCounter++\n\n    throw new Error(`${fatalCounter} [FATAL|${prefix}] ${message}`)\n}\n\n/**\n * Add conter and prefix and execute console.warn()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nexport const warn = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    warnCounter++\n\n    return console.warn(`${warnCounter} [WARN|${prefix}] ${message}`, object)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./logger.js","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Create view inside map\n * @param  {Object} map - The map object in memory\n * @param  {Function} View - ESRI View constructor\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.watcher - If watcherRunning() is enabled\n * @param  {Boolean} options.light.cameraTracking - If you to display the\n *                                                lighting according to the\n *                                                current time of day\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n * @return {Object} Global view object descriptor\n */\nexport const createView = (map, View, options) => {\n    if (global.loaded) {\n        logger.log('Creating View...')\n\n        const view = new View({\n            container: options.element,\n            map: map,\n            scale: options.scale,\n            center: [\n                options.center.longitude,\n                options.center.latitude\n            ],\n            viewingMode: 'global',\n            starsEnabled: options.stars,\n            atmosphereEnabled: options.atmosphere.enable\n        })\n\n        view.then(() => {\n            logger.log('View ready!')\n\n            controlUI(view)\n            light({\n                cameraTracking: options.light.cameraTracking,\n                date: options.light.date\n            })\n\n            if (options.watcher) {\n                watcherRunning(view)\n            }\n        })\n\n        return view\n    } else {\n        logger.fatal(`Fatal error! You need set some map options.`)\n    }\n}\n\n/**\n * Watcher that observe the globe moviment\n * and make requests with specific parameters\n * like extent on 'definitionExpression'\n * @param  {Object} view - Global view object descriptor\n */\nconst watcherRunning = view => {\n    const watchUtils = constructors.utils.watchUtils\n\n    watchUtils.whenTrue(view, 'stationary', () => {\n        logger.log(`View changed! Getting extent to refreshing layers...`)\n        // console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale)\n\n        refreshExtent(view)\n    })\n}\n\n /**\n  * Function to get the actual extent and set the definition expression\n  * on layer and make an request to refreh the layer info\n  * @param  {Object} view - Global view object descriptor\n  */\nconst refreshExtent = view => {\n    const map = global.map\n    const urlQuery = `!xmin=${view.extent.xmin}!xmax=${view.extent.xmax}!ymin=${view.extent.ymin}!ymax=${view.extent.ymax}`\n\n    map.allLayers.map(layer => {\n        if (layer.raw !== undefined) {\n            if ((view.scale < layer.minScale &&\n                    view.scale > layer.maxScale) ||\n                    (layer.minScale === 0 &&\n                    layer.maxScale === 0)) {\n                if (layer.raw.type === 0) {\n                    layer.definitionExpression = urlQuery\n                }\n                layer.outOfRange = false\n\n                if (layer.visible) {\n                    logger.log(`Drawing layer: ${layer.title} | URL requested: ${layer.raw.url}/where=${urlQuery}`)\n                }\n            } else {\n                if (layer.visible) {\n                    logger.log(`${layer.title} it's visible, but is out of range`)\n                }\n\n                layer.outOfRange = true\n            }\n        }\n    })\n}\n\n/**\n * Only setting some aspects from ESRI UI\n * @param  {Object} view - Global view object descriptor\n */\nconst controlUI = view => {\n    logger.log('Changing UI elements...')\n\n    view.environment.atmosphereEnabled = global.options.atmosphere.enable\n    view.environment.atmosphere.quality = global.options.atmosphere.quality\n\n    if (global.options.search.enable) {\n        const Search = constructors.utils.Search\n        const searchWidget = new Search({\n            view: view\n        })\n\n        view.ui.add(searchWidget, {\n            position: global.options.search.position,\n            index: global.options.search.index\n        })\n    }\n\n    view.ui.remove([\n        'zoom',\n        'compass',\n        'navigation-toggle'\n    ])\n}\n\n/**\n * Change camera tracking\n * @param  {Object} cameraTracking - Set the light on the world based on camera or not\n */\nexport const light = ({cameraTracking, date}) => {\n    const view = global.view\n\n    if (cameraTracking !== '' &&\n        cameraTracking !== undefined) {\n        logger.log(`Changing light camera tracking to: ${cameraTracking}`)\n        view.environment.lighting.cameraTrackingEnabled = cameraTracking\n    }\n\n    if (date === 'now') {\n        logger.log(`Changing light date to: ${date}`)\n        view.environment.lighting.date = Date.now()\n    }\n\n    if (date === '' ||\n        date === undefined) {\n        view.environment.lighting.date = new Date('Jul 15 2017 12:00:00')\n        logger.log(`Changing light date to: default - Jul 15 2017 12:00:00`)\n    }\n}\n\n/**\n * Navigate on map using long/lat and camera position\n * @param  {Object} coordinates - Object that contain destiny longitude and latitude\n * @param  {Number} scale - Scale on earth\n * @param  {Object} camera - Object that contain new angles to position camera\n */\nexport const newPosition = ({coordinates, scale, camera}) => {\n    if (coordinates && scale && camera) {\n        const view = global.view\n\n        view.goTo({\n            center: [\n                coordinates.longitude,\n                coordinates.latitude\n            ],\n            scale: scale,\n            tilt: camera.tilt,\n            heading: camera.heading\n        })\n\n        logger.log(`Changing map position...`)\n    } else {\n        logger.error(`You need set a new position formed by a pair of coordinates, a new scale and new camera positions`)\n    }\n}\n\n/**\n * Change basemap on global map object\n * @param  {String} basemap - A basemap name that match with basemap's list from ESRI\n *                          'streets', 'satellite', 'hybrid', 'topo', 'gray',\n *                          'dark-gray', 'oceans', 'national-geographic',\n *                          'terrain', 'osm', 'dark-gray-vector', 'gray-vector',\n *                          'streets-vector', 'topo-vector', 'streets-night-vector',\n *                          'streets-relief-vector', 'streets-navigation-vector'\n *                          or 'none'\n */\nexport const changeBasemap = basemap => {\n    if (basemap) {\n        const map = global.map\n\n        map.basemap = basemap\n\n        logger.log(`Change basemap...`)\n    } else {\n        logger.error(`You need set a new basemap`)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./view.js","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Recieve all layers, work and add on map\n * @constructor\n * @param  {Array} layers - List of layers\n */\nexport const add = layers => {\n    const map = global.map\n\n    layers.map((layer, indx) => {\n        if (validate(layer)) {\n            if (layer.id === undefined ||\n                layer.id === '' ||\n                !layer.id) {\n                logger.log(`Adding id by index on layer`)\n                layer.id = indx\n            }\n\n            layer.outOfRange = true\n\n            return map.add(create(layer))\n        }\n    })\n}\n\n/**\n * Validate single layer\n * @param  {Object} layer - Layer with some options\n * @return {Boolean} True or false to validation\n */\nconst validate = layer => {\n    if (layer) {\n        !layer.title ||\n            logger.log(`Validating layer: ${layer.title}`)\n\n        if (layer.title === undefined ||\n            layer.title === '' ||\n            !layer.title) {\n            logger.fatal(`You need provide a layer title`)\n\n            return false\n        }\n\n        if (layer.visible === undefined ||\n            layer.visible === '') {\n            layer.visible = true\n            logger.warn(`You not set intial visible. Usign default: true`)\n        }\n\n        if (layer.definitionExpression === undefined ||\n            layer.definitionExpression === '') {\n            layer.definitionExpression = ''\n            logger.warn(`You not set intial definitionExpression. Usign default: ''`)\n        }\n\n        if (layer.type === undefined ||\n            layer.type === '' ||\n            layer.type === false) {\n            logger.fatal(`You need provide a layer type (0 = FeatureLayer, 1 = TileLayer)`)\n\n            return false\n        }\n\n        if (layer.url === undefined ||\n            layer.url === '' ||\n            !layer.url) {\n            logger.fatal(`You need provide an URL layer`)\n\n            return false\n        }\n\n        return true\n    } else {\n        logger.fatal(`You need pass some informations to describe your layer`)\n        return false\n    }\n}\n\n/**\n * Recieve a single layer object and return layer ready\n * @param {Object} _layer - Valid Layer object previously worked\n * @return {Object} Layer ready to add on map\n */\nconst create = _layer => {\n    const layerConstructors = constructors.layer\n    const utilsConstructors = constructors.utils\n    const jsonUtils = utilsConstructors.jsonUtils\n    let LayerType\n    let layerLabel\n\n    if (_layer.type === 0) {\n        layerLabel = 'Feature Layer'\n        LayerType = layerConstructors.FeatureLayer\n    } else if (_layer.type === 1) {\n        layerLabel = 'Tile Layer'\n        LayerType = layerConstructors.TileLayer\n    }\n\n    const layer = new LayerType({\n        id: _layer.id,\n        title: _layer.title,\n        url: _layer.url,\n        definitionExpression: _layer.definitionExpression,\n        raw: _layer,\n        visible: _layer.visible\n    })\n\n    logger.log(`Adding a ${layerLabel} on map: ${layer.raw.title} | Visibility: ${layer.raw.visible} | URL: ${layer.raw.url}`)\n\n    if (layer.raw.renderer) {\n        logger.log(`Applying renderer...`)\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.renderer)\n    }\n\n    // if (layer.raw.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(() => {\n        logger.log(`Layer ${layer.title} ready!`)\n\n        if (layer.raw.type === 1) {\n            layer.minScale = layer.raw.minScale !== null &&\n                parseInt(layer.raw.minScale) !== 0\n                ? layer.raw.minScale\n                : 0\n            layer.maxScale = layer.raw.maxScale !== null &&\n                parseInt(layer.raw.maxScale)\n                ? layer.raw.maxScale\n                : 0\n\n            // logger.log(`minScale: ${parseInt(layer.minScale)} and maxScale: ${parseInt(layer.maxScale)} defined manually`)\n        }\n    })\n\n    return layer\n}\n\n/**\n * Find specific layer in map\n * @param  {String|Number} _layer - Layer title or ID\n * @return {Object} Layer that will be manipulated\n */\nconst find = _layer => {\n    const map = global.map\n\n    return map.allLayers.find(layer => {\n        if (layer.raw !== undefined) {\n            if (layer.raw.title === _layer ||\n                layer.raw.id === _layer) {\n                return layer\n            }\n        }\n    })\n}\n\n/**\n * get all layers included on map\n * @return {Array} list of all layers included by user\n */\nexport const all = () => {\n    const map = global.map\n\n    return map.allLayers._items.filter(layer => {\n        if (layer.raw !== undefined) {\n            return true\n        }\n    })\n}\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} visibility - Set if layer is visible or not\n */\nexport const setVisibility = (_layer, visibility) => {\n    const layer = find(_layer)\n\n    if (layer) {\n        layer.visible = visibility\n        logger.log(`Change visibility of layer: ${_layer} to: ${visibility}`)\n    } else {\n        logger.error(`Can't find layer: ${_layer} in map. You already added this layer?`)\n    }\n}\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nexport const setOpacity = (_layer, _opacity) => {\n    const layer = find(_layer)\n\n    if (layer) {\n        layer.opacity = _opacity / 100\n        logger.log(`Change opacity of layer: ${_layer} to: ${_opacity}`)\n    } else {\n        logger.error(`Can't find layer: ${_layer} in map. You already added this layer?`)\n    }\n}\n\n/**\n * Change visibility of all layers using parameter\n * @param  {Boolean} visibility - new opacity\n */\nconst changeVisibility = visibility => {\n    const map = global.map\n\n    map.allLayers.map(layer => {\n        if (layer.raw !== undefined) {\n            if (layer.visible === !visibility) {\n                layer.visible = visibility\n                logger.log(`Change visibility of layer: ${layer.raw.title} to: ${visibility}`)\n            }\n        }\n    })\n}\n\n/**\n * Set visibility of all layers to false\n */\nexport const hideAll = () => {\n    changeVisibility(false)\n}\n\n/**\n * Set visibility of all layers to true\n */\nexport const showAll = () => {\n    changeVisibility(true)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./layers.js","import * as esriLoader from 'esri-loader'\nimport * as logger from './logger'\nimport { createView } from './view'\nimport { global, constructors } from './config'\n\n/**\n * Simple function to set globaly options about the map\n * To start using ArcEasy you need invocate this function first\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.watcher - If watcherRunning() is enabled\n * @param  {Boolean} options.light.cameraTracking - If you to display the\n *                                                lighting according to the\n *                                                current time of day\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nexport const options = options => {\n    if (options) {\n        options.cdn ||\n            logger.warn(`You not set any ESRI CDN. Usign default: ${global.options.cdn}`)\n\n        options.element ||\n            logger.fatal(`You need pass an valid DOM element`)\n\n        options.scale ||\n            logger.warn(`You not set scale. Usign default scale: ${global.options.scale}`)\n\n        if (options.center) {\n            options.center.longitude ||\n                logger.warn(`You not set intial longitude. Usign default: ${global.options.center.longitude}`)\n\n            options.center.latitude ||\n                logger.warn(`You not set intial latitude. Usign default: ${global.options.center.latitude}`)\n        } else {\n            logger.warn(`You not set the map center. Usign defaults | longitude: ${global.options.center.longitude}, latitude: ${global.options.center.latitude}`)\n        }\n\n        options.basemap ||\n            logger.warn(`You not set initial basemap. Usign default: ${global.options.basemap}`)\n\n        options.stars === true ||\n        options.stars === false ||\n            logger.warn(`You not set if map usign stars. Usign default: ${global.options.stars}`)\n\n        if (options.atmosphere) {\n            options.atmosphere.enable === true ||\n            options.atmosphere.enable === false ||\n                logger.warn(`You not set if map usign atmosphere efect. Usign default: ${global.options.atmosphere.enable}`)\n\n            options.atmosphere.quality ||\n                logger.warn(`You not set atmosphere quality. Usign default: ${global.options.atmosphere.quality}`)\n        } else {\n            logger.warn(`You not set the atmosphere options. Usign defaults | enable: ${global.options.atmosphere.enable}, quality: ${global.options.atmosphere.quality}`)\n        }\n\n        options.watcher === true ||\n        options.watcher === false ||\n            logger.warn(`You not set if map usign watcher to refresh the layers. Usign default: ${global.options.watcher}`)\n\n        if (options.light) {\n            options.light.cameraTracking === true ||\n            options.light.cameraTracking === false ||\n                logger.warn(`You not set the camera tracking options. Usign default: ${global.options.light.cameraTracking}`)\n\n            options.light.date === '' ||\n            options.light.date === undefined ||\n                logger.warn(`You not set a date to view light position.`)\n        } else {\n            logger.warn(`You not set the light options. Usign default for camera tracking: ${global.options.light.cameraTracking}`)\n        }\n\n        if (options.search) {\n            options.search.enable === true ||\n            options.search.enable === false ||\n                logger.warn(`You not set Search. Usign default: ${global.options.search.enable}`)\n\n            options.search.position ||\n                logger.warn(`You not set Search position. Usign default: ${global.options.search.position}`)\n\n            options.search.index ||\n                logger.warn(`You not set Search index. Usign default: ${global.options.search.index}`)\n        } else {\n            logger.warn(`You not set the search options. Usign defaults | enable: ${global.options.search.enable}, position: ${global.options.search.position}, index: ${global.options.search.index}`)\n        }\n\n        options.cors &&\n        options.cors.length > 0 ||\n            logger.warn(`You not set any URL to enable CORS requests`)\n\n        options.proxy ||\n            logger.warn(`You not set any URL to proxy your requests`)\n\n        global.options = {\n            cdn: options.cdn !== '' &&\n                options.cdn !== undefined\n                ? options.cdn\n                : global.options.cdn,\n            element: options.element,\n            scale: options.scale !== '' &&\n                options.scale !== undefined\n                ? options.scale\n                : global.options.scale,\n            center: {\n                longitude: options.center &&\n                    options.center.longitude !== '' &&\n                    options.center.longitude !== undefined\n                    ? options.center.longitude\n                    : global.options.center.longitude,\n                latitude: options.center &&\n                    options.center.latitude !== '' &&\n                    options.center.latitude !== undefined\n                    ? options.center.latitude\n                    : global.options.center.latitude\n            },\n            basemap: options.basemap !== '' &&\n                options.basemap !== undefined\n                ? options.basemap\n                : global.options.basemap,\n            stars: options.stars !== '' &&\n                options.stars !== undefined\n                ? options.stars\n                : global.options.stars,\n            atmosphere: {\n                enable: options.atmosphere &&\n                    options.atmosphere.enable !== '' &&\n                    options.atmosphere.enable !== undefined\n                    ? options.atmosphere.enable\n                    : global.options.atmosphere.enable,\n                quality: options.atmosphere &&\n                    options.atmosphere.quality !== '' &&\n                    options.atmosphere.quality !== undefined\n                    ? options.atmosphere.quality\n                    : global.options.atmosphere.quality\n            },\n            watcher: options.watcher !== '' &&\n                options.watcher !== undefined\n                ? options.watcher\n                : global.options.watcher,\n            light: {\n                cameraTracking: options.light &&\n                options.light.cameraTracking !== '' &&\n                options.light.cameraTracking !== undefined\n                ? options.light.cameraTracking\n                : global.options.light.cameraTracking,\n                date: options.light &&\n                options.light.date !== '' &&\n                options.light.date !== undefined\n                ? options.light.date\n                : global.options.light.date\n            },\n            search: {\n                enable: options.search &&\n                    options.search.enable !== '' &&\n                    options.search.enable !== undefined\n                    ? options.search.enable\n                    : global.options.search.enable,\n                position: options.search &&\n                    options.search.position !== '' &&\n                    options.search.position !== undefined\n                    ? options.search.position\n                    : global.options.search.position,\n                index: options.search &&\n                    options.search.index !== '' &&\n                    options.search.index !== undefined\n                    ? options.search.index\n                    : global.options.search.index\n            },\n            cors: options.cors !== '' &&\n                options.cors !== undefined\n                ? options.cors\n                : '',\n            proxy: options.proxy !== '' &&\n                options.proxy !== undefined\n                ? options.proxy\n                : ''\n        }\n\n        global.loaded = true\n        logger.log(`Ready to start!`)\n    } else {\n        logger.fatal(`You need pass some informations to describe your map`)\n    }\n}\n\n/**\n * The BigBang function\n * To create your map you need invocate this function\n */\nexport const start = () => {\n    return new Promise((resolve, reject) => {\n        const cdn = global.options.cdn\n\n        if (cdn !== undefined && global.loaded) {\n            // Has the ArcGIS API been added to the page?\n            if (!esriLoader.isLoaded()) {\n                // No, lazy load it the ArcGIS API before using its classes\n                esriLoader.bootstrap(err => {\n                    if (err) {\n                        logger.error(err)\n                    }\n                    // Once it's loaded, create the map\n                    logger.log(`Waiting ESRI server...`)\n                    dojoLoader(resolve, reject)\n                }, {\n                    // Use a specific version instead of latest 4.x\n                    url: cdn\n                })\n            } else {\n                // ArcGIS API is already loaded, just create the map\n                logger.log(`Waiting ESRI server...`)\n                dojoLoader(resolve, reject)\n            }\n        } else {\n            logger.fatal(`Fatal error! You must provider an CDN.`)\n            reject()\n        }\n    })\n}\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nconst dojoLoader = (resolve, reject) => {\n    if (global.loaded) {\n        esriLoader.dojoRequire([\n            'esri/config',\n            'esri/Map',\n            'esri/Graphic',\n            'esri/Camera',\n\n            'esri/views/SceneView',\n            'esri/views/3d/externalRenderers',\n\n            'esri/layers/FeatureLayer',\n            'esri/layers/TileLayer',\n            'esri/layers/GraphicsLayer',\n\n            'esri/core/watchUtils',\n            'esri/core/Collection',\n            'esri/core/declare',\n\n            'esri/renderers/UniqueValueRenderer',\n            'esri/renderers/ClassBreaksRenderer',\n            'esri/renderers/SimpleRenderer',\n            'esri/renderers/support/jsonUtils',\n\n            'esri/symbols/ExtrudeSymbol3DLayer',\n            'esri/symbols/PolygonSymbol3D',\n            'esri/symbols/SimpleMarkerSymbol',\n            'esri/symbols/PictureMarkerSymbol',\n            'esri/symbols/SimpleLineSymbol',\n            'esri/symbols/SimpleFillSymbol',\n            'esri/symbols/PointSymbol3D',\n            'esri/symbols/ObjectSymbol3DLayer',\n\n            'esri/geometry/Geometry',\n            'esri/geometry/Point',\n            'esri/geometry/Extent',\n            'esri/geometry/SpatialReference',\n\n            'esri/tasks/QueryTask',\n            'esri/tasks/support/Query',\n\n            'esri/widgets/Search',\n\n            'esri/request',\n\n            'dojo/promise/all',\n            'dojo/on',\n            'dojo/domReady!'\n        ], (\n            esriConfig,\n            Map,\n            Graphic,\n            Camera,\n            SceneView,\n            externalRenderers,\n            FeatureLayer,\n            TileLayer,\n            GraphicsLayer,\n            watchUtils,\n            Collection,\n            declare,\n            UniqueValueRenderer,\n            ClassBreaksRenderer,\n            SimpleRenderer,\n            jsonUtils,\n            ExtrudeSymbol3DLayer,\n            PolygonSymbol3D,\n            SimpleMarkerSymbol,\n            PictureMarkerSymbol,\n            SimpleLineSymbol,\n            SimpleFillSymbol,\n            PointSymbol3D,\n            ObjectSymbol3DLayer,\n            Geometry,\n            Point,\n            Extent,\n            SpatialReference,\n            QueryTask,\n            Query,\n            Search,\n            esriRequest,\n            all,\n            on\n        ) => {\n            if (global.options.cors) {\n                global.options.cors.forEach(elm => {\n                    esriConfig.request.corsEnabledServers.push(elm)\n                })\n            }\n\n            esriConfig.request.proxyUrl = global.options.proxy || ''\n\n            constructors.Map = Map\n            constructors.SceneView = SceneView\n            constructors.externalRenderers = externalRenderers\n\n            constructors.layer.FeatureLayer = FeatureLayer\n            constructors.layer.TileLayer = TileLayer\n            constructors.layer.GraphicsLayer = GraphicsLayer\n\n            constructors.utils.watchUtils = watchUtils\n            constructors.utils.Search = Search\n            constructors.utils.jsonUtils = jsonUtils\n            constructors.utils.Extent = Extent\n            constructors.utils.SpatialReference = SpatialReference\n            constructors.utils.Camera = Camera\n            constructors.utils.esriRequest = esriRequest\n            constructors.utils.declare = declare\n            constructors.utils.QueryTask = QueryTask\n            constructors.utils.Query = Query\n\n            constructors.renderer.UniqueValueRenderer = UniqueValueRenderer\n            constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer\n            constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer\n            constructors.renderer.PolygonSymbol3D = PolygonSymbol3D\n            constructors.renderer.SimpleRenderer = SimpleRenderer\n            constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol\n            constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol\n            constructors.renderer.SimpleLineSymbol = SimpleLineSymbol\n            constructors.renderer.SimpleFillSymbol = SimpleFillSymbol\n            constructors.renderer.Graphic = Graphic\n            constructors.renderer.Point = Point\n            constructors.renderer.PointSymbol3D = PointSymbol3D\n            constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer\n\n            constructors.dojo.on = on\n            constructors.dojo.all = all\n\n            if (constructors.Map && constructors.SceneView) {\n                logger.log(`All constructorss created!`)\n\n                // global.map = createMap(\n                //     constructors.Map,\n                //     global.options.basemap\n                // )\n                createMap(\n                    constructors.Map,\n                    global.options.basemap\n                )\n                .then(map => {\n                    global.map = map\n                    return global.map\n                })\n                .then(map => {\n                    createView(\n                        map,\n                        constructors.SceneView,\n                        global.options\n                    ).then(view => {\n                        global.view = view\n                        resolve()\n                    })\n                })\n\n                // global.view = createView(\n                //     global.map,\n                //     constructors.SceneView,\n                //     global.options\n                // )\n            } else {\n                logger.error(`Error during creating the necessary constructors... Try again.`)\n                reject()\n            }\n        })\n    } else {\n        logger.fatal(`Fatal error! You need set some map options.`)\n        reject()\n    }\n}\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nconst createMap = (Map, basemap) => {\n    logger.log(`Creating map...`)\n\n    const map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation'\n    })\n\n    return Promise.resolve(map)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./map.js","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Helper to add a simple point symbol on map using layer\n * @param {Object} _symbol - Some informations about your symbol\n * @param {String} _symbol.id - You can pass an ID to find this layer after\n * @param {Number} _symbol.width - Width of the symbol\n * @param {Number} _symbol.height - Height of the symbol\n * @param {String} _symbol.primitive - Name of the symbol\n * @param {String} _symbol.color - Color of the symbol\n * @param {Object} _point - Some information about the position of the symbol\n * @param {Number} _point.x - X axis position\n * @param {Number} _point.y - Y axis position\n * @param {Number} _point.z - Z axis position\n */\nexport const addGraphicLayer = (_symbol, _point) => {\n    const map = global.map\n    const GraphicsLayer = constructors.layer.GraphicsLayer\n    const PointSymbol3D = constructors.renderer.PointSymbol3D\n    const ObjectSymbol3DLayer = constructors.renderer.ObjectSymbol3DLayer\n    const Point = constructors.renderer.Point\n    const Graphic = constructors.renderer.Graphic\n\n    const graphicsLayer = new GraphicsLayer({\n        id: _symbol.id !== '' ||\n            _symbol.id !== undefined\n            ? _symbol.id\n            : '[ArcE]Graph'\n    })\n\n    const objectSymbol = new PointSymbol3D({\n        symbolLayers: [\n            new ObjectSymbol3DLayer({\n                width: _symbol.width,\n                height: _symbol.height,\n                resource: {\n                    primitive: _symbol.primitive\n                },\n                material: {\n                    color: _symbol.color\n                }\n            })\n        ]\n    })\n\n    const point = new Point({\n        x: _point.x,\n        y: _point.y,\n        z: _point.z\n    })\n\n    const pointGraphic = new Graphic({\n        geometry: point,\n        symbol: objectSymbol\n    })\n\n    map.add(graphicsLayer)\n    graphicsLayer.add(pointGraphic)\n\n    logger.log(`Adding a Graphic Layer on map...`)\n}\n\nexport const hideGraphicLayers = () => {\n    const map = global.map\n\n    map.allLayers.map((elm, indx, arr) => {\n        if (elm.id === '[ArcE]Graph') {\n            if (elm.visible === true) {\n                elm.visible = false\n                logger.log(`Hiding Graphic Layer...`)\n            }\n        }\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils.js","import * as map from './map'\nimport * as view from './view'\nimport * as layers from './layers'\nimport * as utils from './utils'\nimport { global, constructors } from './config'\n\nmodule.exports = {\n    map,\n    view,\n    layers,\n    utils,\n    obj: {\n        get map () { return global.map },\n        get view () { return global.view },\n        get constructors () { return constructors }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nexport function isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nexport function bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nexport function dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\nexport default {\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n};\n//# sourceMappingURL=esri-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/esri-loader/src/esri-loader.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}