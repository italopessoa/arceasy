{"version":3,"sources":["webpack:///arceasy.min.js","webpack:///webpack/bootstrap e4c230cecea079a82160","webpack:///./config.js","webpack:///./logger.js","webpack:///./view.js","webpack:///./layers.js","webpack:///./map.js","webpack:///./index.js","webpack:///../~/esri-loader/src/esri-loader.js"],"names":["module","exports","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","prefix","global","map","view","options","cdn","element","scale","center","longitude","latitude","basemap","stars","atmosphere","enable","quality","search","position","index","cors","proxy","loaded","constructors","layer","FeatureLayer","TileLayer","container","utils","watchUtils","Search","jsonUtils","Extent","renderer","UniqueValueRenderer","ClassBreaksRenderer","ExtrudeSymbol3DLayer","PolygonSymbol3D","SimpleRenderer","SimpleMarkerSymbol","PictureMarkerSymbol","SimpleLineSymbol","SimpleFillSymbol","templates","renderers","symbols","warn","fatal","error","log","undefined","_config","logCounter","errorCounter","fatalCounter","warnCounter","message","_object","console","Error","changeBasemap","newPosition","createView","_logger","logger","_interopRequireWildcard","obj","newObj","key","default","View","viewingMode","starsEnabled","atmosphereEnabled","then","controlUI","watcherRunning","whenTrue","extent","urlQuery","xmin","xmax","ymin","ymax","allLayers","minScale","maxScale","raw","visible","type","title","url","definitionExpression","environment","searchWidget","ui","add","remove","_ref","coordinates","camera","goTo","tilt","heading","showAll","hideAll","setOpacity","setVisibility","layers","indx","validate","id","create","_layer","layerConstructors","utilsConstructors","LayerType","fromJSON","findLayer","find","visibility","_opacity","opacity","changeVisibility","start","_esriLoader","esriLoader","_view","_options","length","isLoaded","bootstrap","err","dojoLoader","dojoRequire","esriConfig","Map","Graphic","Camera","SceneView","GraphicsLayer","Collection","PointSymbol3D","ObjectSymbol3DLayer","Geometry","Point","on","forEach","elm","request","corsEnabledServers","push","proxyUrl","createMap","ground","_map","_layers","__webpack_exports__","getScript","document","querySelector","window","callback","script","createElement","src","dataset","onload","body","appendChild","script_1","onScriptLoad_1","removeEventListener","addEventListener"],"mappings":"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","file":"arceasy.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar prefix = exports.prefix = 'ArcEasy';\n\nvar global = exports.global = {\n    map: '',\n    view: '',\n    options: {\n        cdn: 'https://js.arcgis.com/4.3/',\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: true,\n        atmosphere: {\n            enable: true,\n            quality: 'low'\n        },\n        search: {\n            enable: false,\n            position: 'top-left',\n            index: 1\n        },\n        cors: '',\n        proxy: ''\n    },\n    loaded: false\n};\n\nvar constructors = exports.constructors = {\n    layer: {\n        FeatureLayer: '',\n        TileLayer: ''\n    },\n    map: '',\n    container: '',\n    view: '',\n    utils: {\n        watchUtils: '',\n        Search: '',\n        jsonUtils: '',\n        Extent: ''\n    },\n    renderer: {\n        UniqueValueRenderer: '',\n        ClassBreaksRenderer: '',\n        ExtrudeSymbol3DLayer: '',\n        PolygonSymbol3D: '',\n        SimpleRenderer: '',\n        SimpleMarkerSymbol: '',\n        PictureMarkerSymbol: '',\n        SimpleLineSymbol: '',\n        SimpleFillSymbol: ''\n    }\n};\n\nvar templates = exports.templates = {\n    renderers: [],\n    symbols: []\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.warn = exports.fatal = exports.error = exports.log = undefined;\n\nvar _config = __webpack_require__(0);\n\nvar logCounter = 0;\nvar errorCounter = 0;\nvar fatalCounter = 0;\nvar warnCounter = 0;\n\n/**\n * Add conter and prefix and execute simple console.log()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nvar log = exports.log = function log(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    logCounter++;\n\n    return console.log(logCounter + ' [LOG|' + _config.prefix + '] ' + message, object);\n};\n\n/**\n * Add conter and prefix and execute console.error()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nvar error = exports.error = function error(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    errorCounter++;\n\n    return console.error(errorCounter + ' [ERROR|' + _config.prefix + '] ' + message, object);\n};\n\n/**\n * Add conter and prefix and create a throw new Error()\n * @param  {String} message - Your log text\n * @return {Function}\n */\nvar fatal = exports.fatal = function fatal(message) {\n    fatalCounter++;\n\n    throw new Error(fatalCounter + ' [FATAL|' + _config.prefix + '] ' + message);\n};\n\n/**\n * Add conter and prefix and execute console.warn()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nvar warn = exports.warn = function warn(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    warnCounter++;\n\n    return console.warn(warnCounter + ' [WARN|' + _config.prefix + '] ' + message, object);\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.changeBasemap = exports.newPosition = exports.createView = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Create view inside map\n * @param  {Object} map - The map object in memory\n * @param  {Function} View - ESRI View constructor\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n * @return {Object} Global view object descriptor\n */\nvar createView = exports.createView = function createView(map, View, options) {\n    if (_config.global.loaded) {\n        logger.log('Creating View...');\n\n        var view = new View({\n            container: options.element,\n            map: map,\n            scale: options.scale,\n            center: [options.center.longitude, options.center.latitude],\n            viewingMode: 'global',\n            starsEnabled: options.stars,\n            atmosphereEnabled: options.atmosphere.enable\n        });\n\n        view.then(function () {\n            logger.log('View ready!');\n\n            controlUI(view);\n            watcherRunning(map, view);\n        });\n\n        return view;\n    } else {\n        logger.fatal('Fatal error! You need set some map options.');\n    }\n};\n\n/**\n * Watcher that observe the globe moviment\n * and make requests with specific parameters\n * like extent on 'definitionExpression'\n * @param  {Object} map - Global map object descriptor\n * @param  {Object} view - Global view object descriptor\n */\nvar watcherRunning = function watcherRunning(map, view) {\n    var watchUtils = _config.constructors.utils.watchUtils;\n\n    watchUtils.whenTrue(view, 'stationary', function () {\n        if (view.extent) {\n            var urlQuery = '!xmin=' + view.extent.xmin + '!xmax=' + view.extent.xmax + '!ymin=' + view.extent.ymin + '!ymax=' + view.extent.ymax;\n\n            logger.log('View changed! Mapping all layers...');\n\n            console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale);\n\n            map.allLayers.map(function (layer) {\n                if ((view.scale < layer.minScale && view.scale > layer.maxScale || layer.minScale === 0 && layer.maxScale === 0) && layer.raw !== undefined && layer.visible) {\n                    if (layer.raw.type === 0) {\n                        logger.log('Getting extent to request ' + layer.title);\n                        logger.log('Requesting to server: ' + layer.raw.url + '/where=' + urlQuery);\n\n                        layer.definitionExpression = urlQuery;\n                    }\n\n                    logger.log('Drawing layer: ' + layer.title);\n                }\n            });\n        }\n    });\n};\n\n/**\n * Only setting some aspects from ESRI UI\n * @param  {Object} view - Global view object descriptor\n */\nvar controlUI = function controlUI(view) {\n    logger.log('Changing UI elements...');\n\n    view.environment.atmosphere.quality = _config.global.options.atmosphere.quality;\n\n    if (_config.global.options.search.enable) {\n        var Search = _config.constructors.utils.Search;\n        var searchWidget = new Search({\n            view: view\n        });\n\n        view.ui.add(searchWidget, {\n            position: _config.global.options.search.position,\n            index: _config.global.options.search.index\n        });\n    }\n\n    view.ui.remove(['zoom', 'compass', 'navigation-toggle']);\n};\n\n/**\n * Navigate on map using long/lat and camera position\n * @param  {Object} coordinates - Object that contain destiny longitude and latitude\n * @param  {Number} scale - Scale on earth\n * @param  {Object} camera - Object that contain new angles to position camera\n */\nvar newPosition = exports.newPosition = function newPosition(_ref) {\n    var coordinates = _ref.coordinates,\n        scale = _ref.scale,\n        camera = _ref.camera;\n\n    if (coordinates && scale && camera) {\n        var view = _config.global.view;\n\n        view.goTo({\n            center: [coordinates.longitude, coordinates.latitude],\n            scale: scale,\n            tilt: camera.tilt,\n            heading: camera.heading\n        });\n\n        logger.log('Changing map position...');\n    } else {\n        logger.error('You need set a new position formed by a pair of coordinates, a new scale and new camera positions');\n    }\n};\n\n/**\n * Change basemap on global map object\n * @param  {String} basemap - A basemap name that match with basemap's list from ESRI\n *                          'streets', 'satellite', 'hybrid', 'topo', 'gray',\n *                          'dark-gray', 'oceans', 'national-geographic',\n *                          'terrain', 'osm', 'dark-gray-vector', 'gray-vector',\n *                          'streets-vector', 'topo-vector', 'streets-night-vector',\n *                          'streets-relief-vector', 'streets-navigation-vector'\n *                          or 'none'\n */\nvar changeBasemap = exports.changeBasemap = function changeBasemap(basemap) {\n    if (basemap) {\n        var map = _config.global.map;\n\n        map.basemap = basemap;\n\n        logger.log('Change basemap...');\n    } else {\n        logger.error('You need set a new basemap');\n    }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.showAll = exports.hideAll = exports.setOpacity = exports.setVisibility = exports.add = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Recieve all layers, work and add on map\n * @constructor\n * @param  {Array} layers - List of layers\n */\nvar add = exports.add = function add(layers) {\n    layers.map(function (layer, indx) {\n        if (validate(layer)) {\n            if (layer.id === undefined || layer.id === '' || !layer.id) {\n                logger.log('Adding id by index on layer');\n                layer.id = indx;\n            }\n\n            _config.global.map.add(create(layer));\n        }\n    });\n};\n\n/**\n * Validate single layer\n * @param  {Object} layer - Layer with some options\n * @return {Boolean} True or false to validation\n */\nvar validate = function validate(layer) {\n    if (layer) {\n        if (layer.title === undefined || layer.title === '' || !layer.title) {\n            logger.fatal('You need provide a layer title');\n\n            return false;\n        }\n\n        if (layer.visible === undefined || layer.visible === '') {\n            layer.visible = true;\n            logger.warn('You not set intial visible. Usign default: true');\n        }\n\n        if (layer.definitionExpression === undefined || layer.definitionExpression === '') {\n            layer.definitionExpression = '';\n            logger.warn('You not set intial definitionExpression. Usign default: \\'\\'');\n        }\n\n        if (layer.type === undefined || layer.type === '' || !layer.type) {\n            logger.fatal('You need provide a layer type (0 = FeatureLayer, 1 = TileLayer)');\n\n            return false;\n        }\n\n        if (layer.url === undefined || layer.url === '' || !layer.url) {\n            logger.fatal('You need provide an URL layer');\n\n            return false;\n        }\n\n        return true;\n    } else {\n        logger.fatal('You need pass some informations to describe your layer');\n        return false;\n    }\n};\n\n/**\n * Recieve a single layer object and return layer ready\n * @param {Object} _layer - Valid Layer object previously worked\n * @return {Object} Layer ready to add on map\n */\nvar create = function create(_layer) {\n    var layerConstructors = _config.constructors.layer;\n    var utilsConstructors = _config.constructors.utils;\n    var jsonUtils = utilsConstructors.jsonUtils;\n    var LayerType = void 0;\n\n    if (_layer.type === 0) {\n        logger.log('Creating new Feature Layer...');\n        LayerType = layerConstructors.FeatureLayer;\n    } else if (_layer.type === 1) {\n        logger.log('Creating new Tile Layer...');\n        LayerType = layerConstructors.TileLayer;\n    }\n\n    logger.log('Adding layer on map: ' + _layer.title + ' | Initial visibility: ' + _layer.visible);\n\n    var layer = new LayerType({\n        id: _layer.id,\n        url: _layer.url,\n        definitionExpression: _layer.definitionExpression,\n        raw: _layer,\n        visible: _layer.visible\n    });\n\n    logger.log('Loading layer from: ' + _layer.url);\n\n    if (layer.raw.renderer) {\n        logger.log('Applying renderer...');\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.renderer);\n    }\n\n    // if (layer.raw.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(function () {\n        logger.log('Layer ' + layer.title + ' ready!');\n        logger.log('View waiting changes...');\n\n        if (layer.raw.type === 1) {\n            layer.minScale = layer.raw.minScale !== null ? layer.raw.minScale : 0;\n            layer.maxScale = layer.raw.maxScale !== null ? layer.raw.maxScale : 0;\n\n            logger.log('minScale: ' + layer.minScale + ' and maxScale: ' + layer.maxScale + ' defined manually');\n        }\n    });\n\n    return layer;\n};\n\n/**\n * Find specific layer in map\n * @param  {String|Number} _layer - Layer title or ID\n * @return {Object} Layer that will be manipulated\n */\nvar findLayer = function findLayer(_layer) {\n    var map = _config.global.map;\n\n    return map.allLayers.find(function (layer) {\n        if (layer.raw !== undefined) {\n            if (layer.raw.title === _layer || layer.raw.id === _layer) {\n                return layer;\n            }\n        }\n    });\n};\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} visibility - Set if layer is visible or not\n */\nvar setVisibility = exports.setVisibility = function setVisibility(_layer, visibility) {\n    var layer = findLayer(_layer);\n\n    if (layer) {\n        layer.visible = visibility;\n        logger.log('Change visibility of layer: ' + _layer + ' to: ' + visibility);\n    } else {\n        logger.error('Can\\'t find layer: ' + _layer + ' in map. You already added this layer?');\n    }\n};\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nvar setOpacity = exports.setOpacity = function setOpacity(_layer, _opacity) {\n    var layer = findLayer(_layer);\n\n    if (layer) {\n        layer.opacity = _opacity / 100;\n        logger.log('Change opacity of layer: ' + _layer + ' to: ' + _opacity);\n    } else {\n        logger.error('Can\\'t find layer: ' + _layer + ' in map. You already added this layer?');\n    }\n};\n\n/**\n * Change visibility of all layers using parameter\n * @param  {Boolean} visibility - new opacity\n */\nvar changeVisibility = function changeVisibility(visibility) {\n    var map = _config.global.map;\n\n    map.allLayers.map(function (layer) {\n        if (layer.raw !== undefined) {\n            if (layer.visible === !visibility) {\n                layer.visible = visibility;\n                logger.log('Change visibility of layer: ' + layer.raw.title + ' to: ' + visibility);\n            }\n        }\n    });\n};\n\n/**\n * Set visibility of all layers to false\n */\nvar hideAll = exports.hideAll = function hideAll() {\n    changeVisibility(false);\n};\n\n/**\n * Set visibility of all layers to true\n */\nvar showAll = exports.showAll = function showAll() {\n    changeVisibility(true);\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.start = exports.options = undefined;\n\nvar _esriLoader = __webpack_require__(6);\n\nvar esriLoader = _interopRequireWildcard(_esriLoader);\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _view = __webpack_require__(2);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Simple function to set globaly options about the map\n * To start using ArcEasy you need invocate this function first\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nvar options = exports.options = function options(_options) {\n    if (_options) {\n        _options.cdn || logger.warn('You not set any ESRI CDN. Usign default: ' + _config.global.options.cdn);\n\n        _options.element || logger.fatal('You need pass an valid DOM element');\n\n        _options.scale || logger.warn('You not set scale. Usign default scale: ' + _config.global.options.scale);\n\n        if (_options.center) {\n            _options.center.longitude || logger.warn('You not set intial longitude. Usign default: ' + _config.global.options.center.longitude);\n\n            _options.center.latitude || logger.warn('You not set intial latitude. Usign default: ' + _config.global.options.center.latitude);\n        } else {\n            logger.warn('You not set the map center. Usign defaults | longitude: ' + _config.global.options.center.longitude + ', latitude: ' + _config.global.options.center.latitude);\n        }\n\n        _options.basemap || logger.warn('You not set initial basemap. Usign default: ' + _config.global.options.basemap);\n\n        _options.stars === true || _options.stars === false || logger.warn('You not set if map usign stars. Usign default: ' + _config.global.options.stars);\n\n        if (_options.atmosphere) {\n            _options.atmosphere.enable === true || _options.atmosphere.enable === false || logger.warn('You not set if map usign atmosphere efect. Usign default: ' + _config.global.options.atmosphere.enable);\n\n            _options.atmosphere.quality || logger.warn('You not set atmosphere quality. Usign default: ' + _config.global.options.atmosphere.quality);\n        } else {\n            logger.warn('You not set the atmosphere options. Usign defaults | enable: ' + _config.global.options.atmosphere.enable + ', quality: ' + _config.global.options.atmosphere.quality);\n        }\n\n        if (_options.search) {\n            _options.search.enable === true || _options.search.enable === false || logger.warn('You not set Search. Usign default: ' + _config.global.options.search.enable);\n\n            _options.search.position || logger.warn('You not set Search position. Usign default: ' + _config.global.options.search.position);\n\n            _options.search.index || logger.warn('You not set Search index. Usign default: ' + _config.global.options.search.index);\n        } else {\n            logger.warn('You not set the search options. Usign defaults | enable: ' + _config.global.options.search.enable + ', position: ' + _config.global.options.search.position + ', index: ' + _config.global.options.search.index);\n        }\n\n        _options.cors && _options.cors.length > 0 || logger.warn('You not set any URL to enable CORS requests');\n\n        _options.proxy || logger.warn('You not set any URL to proxy your requests');\n\n        _config.global.options = {\n            cdn: _options.cdn || _config.global.options.cdn,\n            element: _options.element,\n            scale: _options.scale || _config.global.options.scale,\n            center: {\n                longitude: _options.center && _options.center.longitude || _config.global.options.center.longitude,\n                latitude: _options.center && _options.center.latitude || _config.global.options.center.latitude\n            },\n            basemap: _options.basemap || _config.global.options.basemap,\n            stars: _options.stars || _config.global.options.stars,\n            atmosphere: {\n                enable: _options.atmosphere && _options.atmosphere.enable || _config.global.options.atmosphere.enable,\n                quality: _options.atmosphere && _options.atmosphere.quality || _config.global.options.atmosphere.quality\n            },\n            search: {\n                enable: _options.search && _options.search.enable || _config.global.options.search.enable,\n                position: _options.search && _options.search.position || _config.global.options.search.position,\n                index: _options.search && _options.search.index || _config.global.options.search.index\n            },\n            cors: _options.cors || '',\n            proxy: _options.proxy || ''\n        };\n\n        _config.global.loaded = true;\n        logger.log('Ready to start!');\n    } else {\n        logger.fatal('You need pass some informations to describe your map');\n    }\n};\n\n/**\n * The BigBang function\n * To create your map you need invocate this function\n */\nvar start = exports.start = function start() {\n    var cdn = _config.global.options.cdn;\n\n    if (cdn !== undefined && _config.global.loaded) {\n        // Has the ArcGIS API been added to the page?\n        if (!esriLoader.isLoaded()) {\n            // No, lazy load it the ArcGIS API before using its classes\n            esriLoader.bootstrap(function (err) {\n                if (err) {\n                    logger.error(err);\n                }\n                // Once it's loaded, create the map\n                logger.log('Waiting ESRI server...');\n                dojoLoader();\n            }, {\n                // Use a specific version instead of latest 4.x\n                url: cdn\n            });\n        } else {\n            // ArcGIS API is already loaded, just create the map\n            logger.log('Waiting ESRI server...');\n            dojoLoader();\n        }\n    } else {\n        logger.fatal('Fatal error! You must provider an CDN.');\n    }\n};\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nvar dojoLoader = function dojoLoader() {\n    if (_config.global.loaded) {\n        esriLoader.dojoRequire(['esri/config', 'esri/Map', 'esri/Graphic', 'esri/Camera', 'esri/views/SceneView', 'esri/layers/FeatureLayer', 'esri/layers/TileLayer', 'esri/layers/GraphicsLayer', 'esri/core/watchUtils', 'esri/core/Collection', 'esri/renderers/UniqueValueRenderer', 'esri/renderers/ClassBreaksRenderer', 'esri/renderers/SimpleRenderer', 'esri/renderers/support/jsonUtils', 'esri/symbols/ExtrudeSymbol3DLayer', 'esri/symbols/PolygonSymbol3D', 'esri/symbols/SimpleMarkerSymbol', 'esri/symbols/PictureMarkerSymbol', 'esri/symbols/SimpleLineSymbol', 'esri/symbols/SimpleFillSymbol', 'esri/symbols/PointSymbol3D', 'esri/symbols/ObjectSymbol3DLayer', 'esri/geometry/Geometry', 'esri/geometry/Point', 'esri/geometry/Extent', 'esri/widgets/Search', 'dojo/on', 'dojo/domReady!'], function (esriConfig, Map, Graphic, Camera, SceneView, FeatureLayer, TileLayer, GraphicsLayer, watchUtils, Collection, UniqueValueRenderer, ClassBreaksRenderer, SimpleRenderer, jsonUtils, ExtrudeSymbol3DLayer, PolygonSymbol3D, SimpleMarkerSymbol, PictureMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, PointSymbol3D, ObjectSymbol3DLayer, Geometry, Point, Extent, Search, on) {\n            _config.global.options.cors.forEach(function (elm) {\n                esriConfig.request.corsEnabledServers.push(elm);\n            });\n\n            esriConfig.request.proxyUrl = _config.global.options.proxy || '';\n\n            _config.constructors.Map = Map;\n            _config.constructors.SceneView = SceneView;\n\n            _config.constructors.layer.FeatureLayer = FeatureLayer;\n            _config.constructors.layer.TileLayer = TileLayer;\n            _config.constructors.layer.GraphicsLayer = GraphicsLayer;\n\n            _config.constructors.utils.watchUtils = watchUtils;\n            _config.constructors.utils.Search = Search;\n            _config.constructors.utils.jsonUtils = jsonUtils;\n            _config.constructors.utils.Extent = Extent;\n            _config.constructors.utils.Camera = Camera;\n\n            _config.constructors.renderer.UniqueValueRenderer = UniqueValueRenderer;\n            _config.constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer;\n            _config.constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer;\n            _config.constructors.renderer.PolygonSymbol3D = PolygonSymbol3D;\n            _config.constructors.renderer.SimpleRenderer = SimpleRenderer;\n            _config.constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol;\n            _config.constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol;\n            _config.constructors.renderer.SimpleLineSymbol = SimpleLineSymbol;\n            _config.constructors.renderer.SimpleFillSymbol = SimpleFillSymbol;\n            _config.constructors.renderer.Graphic = Graphic;\n            _config.constructors.renderer.Point = Point;\n            _config.constructors.renderer.PointSymbol3D = PointSymbol3D;\n            _config.constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer;\n\n            if (_config.constructors.Map && _config.constructors.SceneView) {\n                logger.log('All constructorss created!');\n\n                _config.global.map = createMap(_config.constructors.Map, _config.global.options.basemap);\n\n                _config.global.view = (0, _view.createView)(_config.global.map, _config.constructors.SceneView, _config.global.options);\n            } else {\n                logger.error('Error during creating the necessary constructors... Try again.');\n            }\n        });\n    } else {\n        logger.fatal('Fatal error! You need set some map options.');\n    }\n};\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nvar createMap = function createMap(Map, basemap) {\n    logger.log('Creating map...');\n\n    var map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation',\n        layers: []\n    });\n\n    return map;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.layers = exports.view = exports.map = undefined;\n\nvar _map = __webpack_require__(4);\n\nvar map = _interopRequireWildcard(_map);\n\nvar _view = __webpack_require__(2);\n\nvar view = _interopRequireWildcard(_view);\n\nvar _layers = __webpack_require__(3);\n\nvar layers = _interopRequireWildcard(_layers);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.map = map;\nexports.view = view;\nexports.layers = layers;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"isLoaded\"] = isLoaded;\n/* harmony export (immutable) */ __webpack_exports__[\"bootstrap\"] = bootstrap;\n/* harmony export (immutable) */ __webpack_exports__[\"dojoRequire\"] = dojoRequire;\n// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nfunction isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nfunction bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nfunction dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n});\n//# sourceMappingURL=esri-loader.js.map\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// arceasy.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e4c230cecea079a82160","export const prefix = 'ArcEasy'\n\nexport const global = {\n    map: '',\n    view: '',\n    options: {\n        cdn: 'https://js.arcgis.com/4.3/',\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: true,\n        atmosphere: {\n            enable: true,\n            quality: 'low'\n        },\n        search: {\n            enable: false,\n            position: 'top-left',\n            index: 1\n        },\n        cors: '',\n        proxy: ''\n    },\n    loaded: false\n}\n\nexport const constructors = {\n    layer: {\n        FeatureLayer: '',\n        TileLayer: ''\n    },\n    map: '',\n    container: '',\n    view: '',\n    utils: {\n        watchUtils: '',\n        Search: '',\n        jsonUtils: '',\n        Extent: ''\n    },\n    renderer: {\n        UniqueValueRenderer: '',\n        ClassBreaksRenderer: '',\n        ExtrudeSymbol3DLayer: '',\n        PolygonSymbol3D: '',\n        SimpleRenderer: '',\n        SimpleMarkerSymbol: '',\n        PictureMarkerSymbol: '',\n        SimpleLineSymbol: '',\n        SimpleFillSymbol: ''\n    }\n}\n\nexport const templates = {\n    renderers: [],\n    symbols: []\n}\n\n\n\n// WEBPACK FOOTER //\n// ./config.js","import { prefix } from './config'\n\nlet logCounter = 0\nlet errorCounter = 0\nlet fatalCounter = 0\nlet warnCounter = 0\n\n/**\n * Add conter and prefix and execute simple console.log()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nexport const log = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    logCounter++\n\n    return console.log(`${logCounter} [LOG|${prefix}] ${message}`, object)\n}\n\n/**\n * Add conter and prefix and execute console.error()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nexport const error = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    errorCounter++\n\n    return console.error(`${errorCounter} [ERROR|${prefix}] ${message}`, object)\n}\n\n/**\n * Add conter and prefix and create a throw new Error()\n * @param  {String} message - Your log text\n * @return {Function}\n */\nexport const fatal = (message) => {\n    fatalCounter++\n\n    throw new Error(`${fatalCounter} [FATAL|${prefix}] ${message}`)\n}\n\n/**\n * Add conter and prefix and execute console.warn()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nexport const warn = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    warnCounter++\n\n    return console.warn(`${warnCounter} [WARN|${prefix}] ${message}`, object)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./logger.js","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Create view inside map\n * @param  {Object} map - The map object in memory\n * @param  {Function} View - ESRI View constructor\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n * @return {Object} Global view object descriptor\n */\nexport const createView = (map, View, options) => {\n    if (global.loaded) {\n        logger.log('Creating View...')\n\n        const view = new View({\n            container: options.element,\n            map: map,\n            scale: options.scale,\n            center: [\n                options.center.longitude,\n                options.center.latitude\n            ],\n            viewingMode: 'global',\n            starsEnabled: options.stars,\n            atmosphereEnabled: options.atmosphere.enable\n        })\n\n        view.then(() => {\n            logger.log('View ready!')\n\n            controlUI(view)\n            watcherRunning(map, view)\n        })\n\n        return view\n    } else {\n        logger.fatal(`Fatal error! You need set some map options.`)\n    }\n}\n\n/**\n * Watcher that observe the globe moviment\n * and make requests with specific parameters\n * like extent on 'definitionExpression'\n * @param  {Object} map - Global map object descriptor\n * @param  {Object} view - Global view object descriptor\n */\nconst watcherRunning = (map, view) => {\n    const watchUtils = constructors.utils.watchUtils\n\n    watchUtils.whenTrue(view, 'stationary', () => {\n        if (view.extent) {\n            const urlQuery = `!xmin=${view.extent.xmin}!xmax=${view.extent.xmax}!ymin=${view.extent.ymin}!ymax=${view.extent.ymax}`\n\n            logger.log(`View changed! Mapping all layers...`)\n\n            console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale)\n\n            map.allLayers.map(layer => {\n                if (((view.scale < layer.minScale &&\n                        view.scale > layer.maxScale) ||\n                        (layer.minScale === 0 &&\n                        layer.maxScale === 0)) &&\n                        (layer.raw !== undefined &&\n                        layer.visible)) {\n                    if (layer.raw.type === 0) {\n                        logger.log(`Getting extent to request ${layer.title}`)\n                        logger.log(`Requesting to server: ${layer.raw.url}/where=${urlQuery}`)\n\n                        layer.definitionExpression = urlQuery\n                    }\n\n                    logger.log(`Drawing layer: ${layer.title}`)\n                }\n            })\n        }\n    })\n}\n\n/**\n * Only setting some aspects from ESRI UI\n * @param  {Object} view - Global view object descriptor\n */\nconst controlUI = view => {\n    logger.log('Changing UI elements...')\n\n    view.environment.atmosphere.quality = global.options.atmosphere.quality\n\n    if (global.options.search.enable) {\n        const Search = constructors.utils.Search\n        const searchWidget = new Search({\n            view: view\n        })\n\n        view.ui.add(searchWidget, {\n            position: global.options.search.position,\n            index: global.options.search.index\n        })\n    }\n\n    view.ui.remove([\n        'zoom',\n        'compass',\n        'navigation-toggle'\n    ])\n}\n\n/**\n * Navigate on map using long/lat and camera position\n * @param  {Object} coordinates - Object that contain destiny longitude and latitude\n * @param  {Number} scale - Scale on earth\n * @param  {Object} camera - Object that contain new angles to position camera\n */\nexport const newPosition = ({coordinates, scale, camera}) => {\n    if (coordinates && scale && camera) {\n        const view = global.view\n\n        view.goTo({\n            center: [\n                coordinates.longitude,\n                coordinates.latitude\n            ],\n            scale: scale,\n            tilt: camera.tilt,\n            heading: camera.heading\n        })\n\n        logger.log(`Changing map position...`)\n    } else {\n        logger.error(`You need set a new position formed by a pair of coordinates, a new scale and new camera positions`)\n    }\n}\n\n/**\n * Change basemap on global map object\n * @param  {String} basemap - A basemap name that match with basemap's list from ESRI\n *                          'streets', 'satellite', 'hybrid', 'topo', 'gray',\n *                          'dark-gray', 'oceans', 'national-geographic',\n *                          'terrain', 'osm', 'dark-gray-vector', 'gray-vector',\n *                          'streets-vector', 'topo-vector', 'streets-night-vector',\n *                          'streets-relief-vector', 'streets-navigation-vector'\n *                          or 'none'\n */\nexport const changeBasemap = basemap => {\n    if (basemap) {\n        const map = global.map\n\n        map.basemap = basemap\n\n        logger.log(`Change basemap...`)\n    } else {\n        logger.error(`You need set a new basemap`)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./view.js","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Recieve all layers, work and add on map\n * @constructor\n * @param  {Array} layers - List of layers\n */\nexport const add = layers => {\n    layers.map((layer, indx) => {\n        if (validate(layer)) {\n            if (layer.id === undefined ||\n                layer.id === '' ||\n                !layer.id) {\n                logger.log(`Adding id by index on layer`)\n                layer.id = indx\n            }\n\n            global.map.add(create(layer))\n        }\n    })\n}\n\n/**\n * Validate single layer\n * @param  {Object} layer - Layer with some options\n * @return {Boolean} True or false to validation\n */\nconst validate = layer => {\n    if (layer) {\n        if (layer.title === undefined ||\n            layer.title === '' ||\n            !layer.title) {\n            logger.fatal(`You need provide a layer title`)\n\n            return false\n        }\n\n        if (layer.visible === undefined ||\n            layer.visible === '') {\n            layer.visible = true\n            logger.warn(`You not set intial visible. Usign default: true`)\n        }\n\n        if (layer.definitionExpression === undefined ||\n            layer.definitionExpression === '') {\n            layer.definitionExpression = ''\n            logger.warn(`You not set intial definitionExpression. Usign default: ''`)\n        }\n\n        if (layer.type === undefined ||\n            layer.type === '' ||\n            !layer.type) {\n            logger.fatal(`You need provide a layer type (0 = FeatureLayer, 1 = TileLayer)`)\n\n            return false\n        }\n\n        if (layer.url === undefined ||\n            layer.url === '' ||\n            !layer.url) {\n            logger.fatal(`You need provide an URL layer`)\n\n            return false\n        }\n\n        return true\n    } else {\n        logger.fatal(`You need pass some informations to describe your layer`)\n        return false\n    }\n}\n\n/**\n * Recieve a single layer object and return layer ready\n * @param {Object} _layer - Valid Layer object previously worked\n * @return {Object} Layer ready to add on map\n */\nconst create = (_layer) => {\n    const layerConstructors = constructors.layer\n    const utilsConstructors = constructors.utils\n    const jsonUtils = utilsConstructors.jsonUtils\n    let LayerType\n\n    if (_layer.type === 0) {\n        logger.log(`Creating new Feature Layer...`)\n        LayerType = layerConstructors.FeatureLayer\n    } else if (_layer.type === 1) {\n        logger.log(`Creating new Tile Layer...`)\n        LayerType = layerConstructors.TileLayer\n    }\n\n    logger.log(`Adding layer on map: ${_layer.title} | Initial visibility: ${_layer.visible}`)\n\n    const layer = new LayerType({\n        id: _layer.id,\n        url: _layer.url,\n        definitionExpression: _layer.definitionExpression,\n        raw: _layer,\n        visible: _layer.visible\n    })\n\n    logger.log(`Loading layer from: ${_layer.url}`)\n\n    if (layer.raw.renderer) {\n        logger.log(`Applying renderer...`)\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.renderer)\n    }\n\n    // if (layer.raw.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(() => {\n        logger.log(`Layer ${layer.title} ready!`)\n        logger.log(`View waiting changes...`)\n\n        if (layer.raw.type === 1) {\n            layer.minScale = layer.raw.minScale !== null\n                ? layer.raw.minScale\n                : 0\n            layer.maxScale = layer.raw.maxScale !== null\n                ? layer.raw.maxScale\n                : 0\n\n            logger.log(`minScale: ${layer.minScale} and maxScale: ${layer.maxScale} defined manually`)\n        }\n    })\n\n    return layer\n}\n\n/**\n * Find specific layer in map\n * @param  {String|Number} _layer - Layer title or ID\n * @return {Object} Layer that will be manipulated\n */\nconst findLayer = _layer => {\n    const map = global.map\n\n    return map.allLayers.find(layer => {\n        if (layer.raw !== undefined) {\n            if (layer.raw.title === _layer ||\n                layer.raw.id === _layer) {\n                return layer\n            }\n        }\n    })\n}\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} visibility - Set if layer is visible or not\n */\nexport const setVisibility = (_layer, visibility) => {\n    const layer = findLayer(_layer)\n\n    if (layer) {\n        layer.visible = visibility\n        logger.log(`Change visibility of layer: ${_layer} to: ${visibility}`)\n    } else {\n        logger.error(`Can't find layer: ${_layer} in map. You already added this layer?`)\n    }\n}\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nexport const setOpacity = (_layer, _opacity) => {\n    const layer = findLayer(_layer)\n\n    if (layer) {\n        layer.opacity = _opacity / 100\n        logger.log(`Change opacity of layer: ${_layer} to: ${_opacity}`)\n    } else {\n        logger.error(`Can't find layer: ${_layer} in map. You already added this layer?`)\n    }\n}\n\n/**\n * Change visibility of all layers using parameter\n * @param  {Boolean} visibility - new opacity\n */\nconst changeVisibility = visibility => {\n    const map = global.map\n\n    map.allLayers.map(layer => {\n        if (layer.raw !== undefined) {\n            if (layer.visible === !visibility) {\n                layer.visible = visibility\n                logger.log(`Change visibility of layer: ${layer.raw.title} to: ${visibility}`)\n            }\n        }\n    })\n}\n\n/**\n * Set visibility of all layers to false\n */\nexport const hideAll = () => {\n    changeVisibility(false)\n}\n\n/**\n * Set visibility of all layers to true\n */\nexport const showAll = () => {\n    changeVisibility(true)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./layers.js","import * as esriLoader from 'esri-loader'\nimport * as logger from './logger'\nimport { createView } from './view'\nimport { global, constructors } from './config'\n\n/**\n * Simple function to set globaly options about the map\n * To start using ArcEasy you need invocate this function first\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nexport const options = options => {\n    if (options) {\n        options.cdn ||\n            logger.warn(`You not set any ESRI CDN. Usign default: ${global.options.cdn}`)\n\n        options.element ||\n            logger.fatal(`You need pass an valid DOM element`)\n\n        options.scale ||\n            logger.warn(`You not set scale. Usign default scale: ${global.options.scale}`)\n\n        if (options.center) {\n            options.center.longitude ||\n                logger.warn(`You not set intial longitude. Usign default: ${global.options.center.longitude}`)\n\n            options.center.latitude ||\n                logger.warn(`You not set intial latitude. Usign default: ${global.options.center.latitude}`)\n        } else {\n            logger.warn(`You not set the map center. Usign defaults | longitude: ${global.options.center.longitude}, latitude: ${global.options.center.latitude}`)\n        }\n\n        options.basemap ||\n            logger.warn(`You not set initial basemap. Usign default: ${global.options.basemap}`)\n\n        options.stars === true ||\n        options.stars === false ||\n            logger.warn(`You not set if map usign stars. Usign default: ${global.options.stars}`)\n\n        if (options.atmosphere) {\n            options.atmosphere.enable === true ||\n            options.atmosphere.enable === false ||\n                logger.warn(`You not set if map usign atmosphere efect. Usign default: ${global.options.atmosphere.enable}`)\n\n            options.atmosphere.quality ||\n                logger.warn(`You not set atmosphere quality. Usign default: ${global.options.atmosphere.quality}`)\n        } else {\n            logger.warn(`You not set the atmosphere options. Usign defaults | enable: ${global.options.atmosphere.enable}, quality: ${global.options.atmosphere.quality}`)\n        }\n\n        if (options.search) {\n            options.search.enable === true ||\n            options.search.enable === false ||\n                logger.warn(`You not set Search. Usign default: ${global.options.search.enable}`)\n\n            options.search.position ||\n                logger.warn(`You not set Search position. Usign default: ${global.options.search.position}`)\n\n            options.search.index ||\n                logger.warn(`You not set Search index. Usign default: ${global.options.search.index}`)\n        } else {\n            logger.warn(`You not set the search options. Usign defaults | enable: ${global.options.search.enable}, position: ${global.options.search.position}, index: ${global.options.search.index}`)\n        }\n\n        options.cors &&\n        options.cors.length > 0 ||\n            logger.warn(`You not set any URL to enable CORS requests`)\n\n        options.proxy ||\n            logger.warn(`You not set any URL to proxy your requests`)\n\n        global.options = {\n            cdn: options.cdn || global.options.cdn,\n            element: options.element,\n            scale: options.scale || global.options.scale,\n            center: {\n                longitude: options.center && options.center.longitude || global.options.center.longitude,\n                latitude: options.center && options.center.latitude || global.options.center.latitude\n            },\n            basemap: options.basemap || global.options.basemap,\n            stars: options.stars || global.options.stars,\n            atmosphere: {\n                enable: options.atmosphere && options.atmosphere.enable || global.options.atmosphere.enable,\n                quality: options.atmosphere && options.atmosphere.quality || global.options.atmosphere.quality\n            },\n            search: {\n                enable: options.search && options.search.enable || global.options.search.enable,\n                position: options.search && options.search.position || global.options.search.position,\n                index: options.search && options.search.index || global.options.search.index\n            },\n            cors: options.cors || '',\n            proxy: options.proxy || ''\n        }\n\n        global.loaded = true\n        logger.log(`Ready to start!`)\n    } else {\n        logger.fatal(`You need pass some informations to describe your map`)\n    }\n}\n\n/**\n * The BigBang function\n * To create your map you need invocate this function\n */\nexport const start = () => {\n    const cdn = global.options.cdn\n\n    if (cdn !== undefined && global.loaded) {\n        // Has the ArcGIS API been added to the page?\n        if (!esriLoader.isLoaded()) {\n            // No, lazy load it the ArcGIS API before using its classes\n            esriLoader.bootstrap(err => {\n                if (err) {\n                    logger.error(err)\n                }\n                // Once it's loaded, create the map\n                logger.log(`Waiting ESRI server...`)\n                dojoLoader()\n            }, {\n                // Use a specific version instead of latest 4.x\n                url: cdn\n            })\n        } else {\n            // ArcGIS API is already loaded, just create the map\n            logger.log(`Waiting ESRI server...`)\n            dojoLoader()\n        }\n    } else {\n        logger.fatal(`Fatal error! You must provider an CDN.`)\n    }\n}\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nconst dojoLoader = () => {\n    if (global.loaded) {\n        esriLoader.dojoRequire([\n            'esri/config',\n            'esri/Map',\n            'esri/Graphic',\n            'esri/Camera',\n\n            'esri/views/SceneView',\n\n            'esri/layers/FeatureLayer',\n            'esri/layers/TileLayer',\n            'esri/layers/GraphicsLayer',\n\n            'esri/core/watchUtils',\n            'esri/core/Collection',\n\n            'esri/renderers/UniqueValueRenderer',\n            'esri/renderers/ClassBreaksRenderer',\n            'esri/renderers/SimpleRenderer',\n            'esri/renderers/support/jsonUtils',\n\n            'esri/symbols/ExtrudeSymbol3DLayer',\n            'esri/symbols/PolygonSymbol3D',\n            'esri/symbols/SimpleMarkerSymbol',\n            'esri/symbols/PictureMarkerSymbol',\n            'esri/symbols/SimpleLineSymbol',\n            'esri/symbols/SimpleFillSymbol',\n            'esri/symbols/PointSymbol3D',\n            'esri/symbols/ObjectSymbol3DLayer',\n\n            'esri/geometry/Geometry',\n            'esri/geometry/Point',\n            'esri/geometry/Extent',\n\n            'esri/widgets/Search',\n\n            'dojo/on',\n            'dojo/domReady!'\n        ], (\n            esriConfig,\n            Map,\n            Graphic,\n            Camera,\n            SceneView,\n            FeatureLayer,\n            TileLayer,\n            GraphicsLayer,\n            watchUtils,\n            Collection,\n            UniqueValueRenderer,\n            ClassBreaksRenderer,\n            SimpleRenderer,\n            jsonUtils,\n            ExtrudeSymbol3DLayer,\n            PolygonSymbol3D,\n            SimpleMarkerSymbol,\n            PictureMarkerSymbol,\n            SimpleLineSymbol,\n            SimpleFillSymbol,\n            PointSymbol3D,\n            ObjectSymbol3DLayer,\n            Geometry,\n            Point,\n            Extent,\n            Search,\n            on\n        ) => {\n            global.options.cors.forEach(elm => {\n                esriConfig.request.corsEnabledServers.push(elm)\n            })\n\n            esriConfig.request.proxyUrl = global.options.proxy || ''\n\n            constructors.Map = Map\n            constructors.SceneView = SceneView\n\n            constructors.layer.FeatureLayer = FeatureLayer\n            constructors.layer.TileLayer = TileLayer\n            constructors.layer.GraphicsLayer = GraphicsLayer\n\n            constructors.utils.watchUtils = watchUtils\n            constructors.utils.Search = Search\n            constructors.utils.jsonUtils = jsonUtils\n            constructors.utils.Extent = Extent\n            constructors.utils.Camera = Camera\n\n            constructors.renderer.UniqueValueRenderer = UniqueValueRenderer\n            constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer\n            constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer\n            constructors.renderer.PolygonSymbol3D = PolygonSymbol3D\n            constructors.renderer.SimpleRenderer = SimpleRenderer\n            constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol\n            constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol\n            constructors.renderer.SimpleLineSymbol = SimpleLineSymbol\n            constructors.renderer.SimpleFillSymbol = SimpleFillSymbol\n            constructors.renderer.Graphic = Graphic\n            constructors.renderer.Point = Point\n            constructors.renderer.PointSymbol3D = PointSymbol3D\n            constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer\n\n            if (constructors.Map && constructors.SceneView) {\n                logger.log(`All constructorss created!`)\n\n                global.map = createMap(\n                    constructors.Map,\n                    global.options.basemap\n                )\n\n                global.view = createView(\n                    global.map,\n                    constructors.SceneView,\n                    global.options\n                )\n            } else {\n                logger.error(`Error during creating the necessary constructors... Try again.`)\n            }\n        })\n    } else {\n        logger.fatal(`Fatal error! You need set some map options.`)\n    }\n}\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nconst createMap = (Map, basemap) => {\n    logger.log(`Creating map...`)\n\n    const map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation',\n        layers: []\n    })\n\n    return map\n}\n\n\n\n// WEBPACK FOOTER //\n// ./map.js","import * as map from './map'\nimport * as view from './view'\nimport * as layers from './layers'\n\nexport {\n    map,\n    view,\n    layers\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nexport function isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nexport function bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nexport function dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\nexport default {\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n};\n//# sourceMappingURL=esri-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/esri-loader/src/esri-loader.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}