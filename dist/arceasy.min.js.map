{"version":3,"sources":["webpack:///arceasy.min.js","webpack:///webpack/bootstrap b5ce1bac003f855bf0c5","webpack:///./config.js","webpack:///./logger.js","webpack:///./view.js","webpack:///./layers.js","webpack:///./map.js","webpack:///./index.js","webpack:///../~/esri-loader/src/esri-loader.js","webpack:///./utils.js"],"names":["module","exports","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","prefix","global","map","view","options","cdn","element","scale","center","longitude","latitude","basemap","stars","atmosphere","enable","quality","watcher","search","position","index","cors","proxy","loaded","constructors","layer","FeatureLayer","TileLayer","container","utils","watchUtils","Search","jsonUtils","Extent","renderer","UniqueValueRenderer","ClassBreaksRenderer","ExtrudeSymbol3DLayer","PolygonSymbol3D","SimpleRenderer","SimpleMarkerSymbol","PictureMarkerSymbol","SimpleLineSymbol","SimpleFillSymbol","templates","renderers","symbols","warn","fatal","error","log","undefined","_config","logCounter","errorCounter","fatalCounter","warnCounter","message","_object","console","Error","changeBasemap","newPosition","createView","_logger","logger","_interopRequireWildcard","obj","newObj","key","default","View","viewingMode","starsEnabled","atmosphereEnabled","then","controlUI","watcherRunning","whenTrue","refreshExtent","urlQuery","extent","xmin","xmax","ymin","ymax","allLayers","raw","minScale","maxScale","type","definitionExpression","outOfRange","visible","title","url","environment","searchWidget","ui","add","remove","_ref","coordinates","camera","goTo","tilt","heading","showAll","hideAll","setOpacity","setVisibility","all","layers","indx","validate","id","create","_layer","layerConstructors","utilsConstructors","LayerType","layerLabel","fromJSON","parseInt","find","_items","filter","visibility","_opacity","opacity","changeVisibility","start","_esriLoader","esriLoader","_view","_options","length","Promise","resolve","reject","isLoaded","bootstrap","err","dojoLoader","dojoRequire","esriConfig","Map","Graphic","Camera","SceneView","GraphicsLayer","Collection","PointSymbol3D","ObjectSymbol3DLayer","Geometry","Point","on","forEach","elm","request","corsEnabledServers","push","proxyUrl","createMap","ground","_map","_layers","_utils","__webpack_exports__","getScript","document","querySelector","window","callback","script","createElement","src","dataset","onload","body","appendChild","script_1","onScriptLoad_1","removeEventListener","addEventListener","hideGraphicLayers","addGraphicLayer","_symbol","_point","graphicsLayer","objectSymbol","symbolLayers","width","height","resource","primitive","material","color","point","x","y","z","pointGraphic","geometry","symbol","arr"],"mappings":"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","file":"arceasy.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar prefix = exports.prefix = 'ArcEasy';\n\nvar global = exports.global = {\n    map: '',\n    view: '',\n    options: {\n        cdn: 'https://js.arcgis.com/4.3/',\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: true,\n        atmosphere: {\n            enable: true,\n            quality: 'low'\n        },\n        watcher: true,\n        search: {\n            enable: false,\n            position: 'top-left',\n            index: 1\n        },\n        cors: '',\n        proxy: ''\n    },\n    loaded: false\n};\n\nvar constructors = exports.constructors = {\n    layer: {\n        FeatureLayer: '',\n        TileLayer: ''\n    },\n    map: '',\n    container: '',\n    view: '',\n    utils: {\n        watchUtils: '',\n        Search: '',\n        jsonUtils: '',\n        Extent: ''\n    },\n    renderer: {\n        UniqueValueRenderer: '',\n        ClassBreaksRenderer: '',\n        ExtrudeSymbol3DLayer: '',\n        PolygonSymbol3D: '',\n        SimpleRenderer: '',\n        SimpleMarkerSymbol: '',\n        PictureMarkerSymbol: '',\n        SimpleLineSymbol: '',\n        SimpleFillSymbol: ''\n    }\n};\n\nvar templates = exports.templates = {\n    renderers: [],\n    symbols: []\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.warn = exports.fatal = exports.error = exports.log = undefined;\n\nvar _config = __webpack_require__(0);\n\nvar logCounter = 0;\nvar errorCounter = 0;\nvar fatalCounter = 0;\nvar warnCounter = 0;\n\n/**\n * Add conter and prefix and execute simple console.log()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nvar log = exports.log = function log(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    logCounter++;\n\n    return console.log(logCounter + ' [LOG|' + _config.prefix + '] ' + message, object);\n};\n\n/**\n * Add conter and prefix and execute console.error()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nvar error = exports.error = function error(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    errorCounter++;\n\n    return console.error(errorCounter + ' [ERROR|' + _config.prefix + '] ' + message, object);\n};\n\n/**\n * Add conter and prefix and create a throw new Error()\n * @param  {String} message - Your log text\n * @return {Function}\n */\nvar fatal = exports.fatal = function fatal(message) {\n    fatalCounter++;\n\n    throw new Error(fatalCounter + ' [FATAL|' + _config.prefix + '] ' + message);\n};\n\n/**\n * Add conter and prefix and execute console.warn()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nvar warn = exports.warn = function warn(message, _object) {\n    var object = _object !== undefined ? _object : '';\n\n    warnCounter++;\n\n    return console.warn(warnCounter + ' [WARN|' + _config.prefix + '] ' + message, object);\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.changeBasemap = exports.newPosition = exports.createView = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Create view inside map\n * @param  {Object} map - The map object in memory\n * @param  {Function} View - ESRI View constructor\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.watcher - If watcherRunning() is enabled\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n * @return {Object} Global view object descriptor\n */\nvar createView = exports.createView = function createView(map, View, options) {\n    if (_config.global.loaded) {\n        logger.log('Creating View...');\n\n        var view = new View({\n            container: options.element,\n            map: map,\n            scale: options.scale,\n            center: [options.center.longitude, options.center.latitude],\n            viewingMode: 'global',\n            starsEnabled: options.stars,\n            atmosphereEnabled: options.atmosphere.enable\n        });\n\n        view.then(function () {\n            logger.log('View ready!');\n\n            controlUI(view);\n\n            if (options.watcher) {\n                watcherRunning(view);\n            }\n        });\n\n        return view;\n    } else {\n        logger.fatal('Fatal error! You need set some map options.');\n    }\n};\n\n/**\n * Watcher that observe the globe moviment\n * and make requests with specific parameters\n * like extent on 'definitionExpression'\n * @param  {Object} view - Global view object descriptor\n */\nvar watcherRunning = function watcherRunning(view) {\n    var watchUtils = _config.constructors.utils.watchUtils;\n\n    watchUtils.whenTrue(view, 'stationary', function () {\n        logger.log('View changed! Getting extent to refreshing layers...'\n        // console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale)\n\n        );refreshExtent(view);\n    });\n};\n\n/**\n * Function to get the actual extent and set the definition expression\n * on layer and make an request to refreh the layer info\n * @param  {Object} view - Global view object descriptor\n */\nvar refreshExtent = function refreshExtent(view) {\n    var map = _config.global.map;\n    var urlQuery = '!xmin=' + view.extent.xmin + '!xmax=' + view.extent.xmax + '!ymin=' + view.extent.ymin + '!ymax=' + view.extent.ymax;\n\n    map.allLayers.map(function (layer) {\n        if (layer.raw !== undefined) {\n            if (view.scale < layer.minScale && view.scale > layer.maxScale || layer.minScale === 0 && layer.maxScale === 0) {\n                if (layer.raw.type === 0) {\n                    layer.definitionExpression = urlQuery;\n                }\n                layer.outOfRange = false;\n\n                if (layer.visible) {\n                    logger.log('Drawing layer: ' + layer.title + ' | URL requested: ' + layer.raw.url + '/where=' + urlQuery);\n                }\n            } else {\n                if (layer.visible) {\n                    logger.log(layer.title + ' it\\'s visible, but is out of range');\n                }\n\n                layer.outOfRange = true;\n            }\n        }\n    });\n};\n\n/**\n * Only setting some aspects from ESRI UI\n * @param  {Object} view - Global view object descriptor\n */\nvar controlUI = function controlUI(view) {\n    logger.log('Changing UI elements...');\n\n    view.environment.atmosphere.quality = _config.global.options.atmosphere.quality;\n\n    if (_config.global.options.search.enable) {\n        var Search = _config.constructors.utils.Search;\n        var searchWidget = new Search({\n            view: view\n        });\n\n        view.ui.add(searchWidget, {\n            position: _config.global.options.search.position,\n            index: _config.global.options.search.index\n        });\n    }\n\n    view.ui.remove(['zoom', 'compass', 'navigation-toggle']);\n};\n\n/**\n * Navigate on map using long/lat and camera position\n * @param  {Object} coordinates - Object that contain destiny longitude and latitude\n * @param  {Number} scale - Scale on earth\n * @param  {Object} camera - Object that contain new angles to position camera\n */\nvar newPosition = exports.newPosition = function newPosition(_ref) {\n    var coordinates = _ref.coordinates,\n        scale = _ref.scale,\n        camera = _ref.camera;\n\n    if (coordinates && scale && camera) {\n        var view = _config.global.view;\n\n        view.goTo({\n            center: [coordinates.longitude, coordinates.latitude],\n            scale: scale,\n            tilt: camera.tilt,\n            heading: camera.heading\n        });\n\n        logger.log('Changing map position...');\n    } else {\n        logger.error('You need set a new position formed by a pair of coordinates, a new scale and new camera positions');\n    }\n};\n\n/**\n * Change basemap on global map object\n * @param  {String} basemap - A basemap name that match with basemap's list from ESRI\n *                          'streets', 'satellite', 'hybrid', 'topo', 'gray',\n *                          'dark-gray', 'oceans', 'national-geographic',\n *                          'terrain', 'osm', 'dark-gray-vector', 'gray-vector',\n *                          'streets-vector', 'topo-vector', 'streets-night-vector',\n *                          'streets-relief-vector', 'streets-navigation-vector'\n *                          or 'none'\n */\nvar changeBasemap = exports.changeBasemap = function changeBasemap(basemap) {\n    if (basemap) {\n        var map = _config.global.map;\n\n        map.basemap = basemap;\n\n        logger.log('Change basemap...');\n    } else {\n        logger.error('You need set a new basemap');\n    }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.showAll = exports.hideAll = exports.setOpacity = exports.setVisibility = exports.all = exports.add = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Recieve all layers, work and add on map\n * @constructor\n * @param  {Array} layers - List of layers\n */\nvar add = exports.add = function add(layers) {\n    var map = _config.global.map;\n\n    layers.map(function (layer, indx) {\n        if (validate(layer)) {\n            if (layer.id === undefined || layer.id === '' || !layer.id) {\n                logger.log('Adding id by index on layer');\n                layer.id = indx;\n            }\n\n            layer.outOfRange = true;\n\n            return map.add(create(layer));\n        }\n    });\n};\n\n/**\n * Validate single layer\n * @param  {Object} layer - Layer with some options\n * @return {Boolean} True or false to validation\n */\nvar validate = function validate(layer) {\n    if (layer) {\n        !layer.title || logger.log('Validating layer: ' + layer.title);\n\n        if (layer.title === undefined || layer.title === '' || !layer.title) {\n            logger.fatal('You need provide a layer title');\n\n            return false;\n        }\n\n        if (layer.visible === undefined || layer.visible === '') {\n            layer.visible = true;\n            logger.warn('You not set intial visible. Usign default: true');\n        }\n\n        if (layer.definitionExpression === undefined || layer.definitionExpression === '') {\n            layer.definitionExpression = '';\n            logger.warn('You not set intial definitionExpression. Usign default: \\'\\'');\n        }\n\n        if (layer.type === undefined || layer.type === '' || layer.type === false) {\n            logger.fatal('You need provide a layer type (0 = FeatureLayer, 1 = TileLayer)');\n\n            return false;\n        }\n\n        if (layer.url === undefined || layer.url === '' || !layer.url) {\n            logger.fatal('You need provide an URL layer');\n\n            return false;\n        }\n\n        return true;\n    } else {\n        logger.fatal('You need pass some informations to describe your layer');\n        return false;\n    }\n};\n\n/**\n * Recieve a single layer object and return layer ready\n * @param {Object} _layer - Valid Layer object previously worked\n * @return {Object} Layer ready to add on map\n */\nvar create = function create(_layer) {\n    var layerConstructors = _config.constructors.layer;\n    var utilsConstructors = _config.constructors.utils;\n    var jsonUtils = utilsConstructors.jsonUtils;\n    var LayerType = void 0;\n    var layerLabel = void 0;\n\n    if (_layer.type === 0) {\n        layerLabel = 'Feature Layer';\n        LayerType = layerConstructors.FeatureLayer;\n    } else if (_layer.type === 1) {\n        layerLabel = 'Tile Layer';\n        LayerType = layerConstructors.TileLayer;\n    }\n\n    var layer = new LayerType({\n        id: _layer.id,\n        title: _layer.title,\n        url: _layer.url,\n        definitionExpression: _layer.definitionExpression,\n        raw: _layer,\n        visible: _layer.visible\n    });\n\n    logger.log('Adding a ' + layerLabel + ' on map: ' + layer.raw.title + ' | Visibility: ' + layer.raw.visible + ' | URL: ' + layer.raw.url);\n\n    if (layer.raw.renderer) {\n        logger.log('Applying renderer...');\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.renderer);\n    }\n\n    // if (layer.raw.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(function () {\n        logger.log('Layer ' + layer.title + ' ready!');\n\n        if (layer.raw.type === 1) {\n            layer.minScale = layer.raw.minScale !== null && parseInt(layer.raw.minScale) !== 0 ? layer.raw.minScale : 0;\n            layer.maxScale = layer.raw.maxScale !== null && parseInt(layer.raw.maxScale) ? layer.raw.maxScale : 0;\n\n            // logger.log(`minScale: ${parseInt(layer.minScale)} and maxScale: ${parseInt(layer.maxScale)} defined manually`)\n        }\n    });\n\n    return layer;\n};\n\n/**\n * Find specific layer in map\n * @param  {String|Number} _layer - Layer title or ID\n * @return {Object} Layer that will be manipulated\n */\nvar find = function find(_layer) {\n    var map = _config.global.map;\n\n    return map.allLayers.find(function (layer) {\n        if (layer.raw !== undefined) {\n            if (layer.raw.title === _layer || layer.raw.id === _layer) {\n                return layer;\n            }\n        }\n    });\n};\n\n/**\n * get all layers included on map\n * @return {Array} list of all layers included by user\n */\nvar all = exports.all = function all() {\n    var map = _config.global.map;\n\n    return map.allLayers._items.filter(function (layer) {\n        if (layer.raw !== undefined) {\n            return true;\n        }\n    });\n};\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} visibility - Set if layer is visible or not\n */\nvar setVisibility = exports.setVisibility = function setVisibility(_layer, visibility) {\n    var layer = find(_layer);\n\n    if (layer) {\n        layer.visible = visibility;\n        logger.log('Change visibility of layer: ' + _layer + ' to: ' + visibility);\n    } else {\n        logger.error('Can\\'t find layer: ' + _layer + ' in map. You already added this layer?');\n    }\n};\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nvar setOpacity = exports.setOpacity = function setOpacity(_layer, _opacity) {\n    var layer = find(_layer);\n\n    if (layer) {\n        layer.opacity = _opacity / 100;\n        logger.log('Change opacity of layer: ' + _layer + ' to: ' + _opacity);\n    } else {\n        logger.error('Can\\'t find layer: ' + _layer + ' in map. You already added this layer?');\n    }\n};\n\n/**\n * Change visibility of all layers using parameter\n * @param  {Boolean} visibility - new opacity\n */\nvar changeVisibility = function changeVisibility(visibility) {\n    var map = _config.global.map;\n\n    map.allLayers.map(function (layer) {\n        if (layer.raw !== undefined) {\n            if (layer.visible === !visibility) {\n                layer.visible = visibility;\n                logger.log('Change visibility of layer: ' + layer.raw.title + ' to: ' + visibility);\n            }\n        }\n    });\n};\n\n/**\n * Set visibility of all layers to false\n */\nvar hideAll = exports.hideAll = function hideAll() {\n    changeVisibility(false);\n};\n\n/**\n * Set visibility of all layers to true\n */\nvar showAll = exports.showAll = function showAll() {\n    changeVisibility(true);\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.start = exports.options = undefined;\n\nvar _esriLoader = __webpack_require__(6);\n\nvar esriLoader = _interopRequireWildcard(_esriLoader);\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _view = __webpack_require__(2);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Simple function to set globaly options about the map\n * To start using ArcEasy you need invocate this function first\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.watcher - If watcherRunning() is enabled\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nvar options = exports.options = function options(_options) {\n    if (_options) {\n        _options.cdn || logger.warn('You not set any ESRI CDN. Usign default: ' + _config.global.options.cdn);\n\n        _options.element || logger.fatal('You need pass an valid DOM element');\n\n        _options.scale || logger.warn('You not set scale. Usign default scale: ' + _config.global.options.scale);\n\n        if (_options.center) {\n            _options.center.longitude || logger.warn('You not set intial longitude. Usign default: ' + _config.global.options.center.longitude);\n\n            _options.center.latitude || logger.warn('You not set intial latitude. Usign default: ' + _config.global.options.center.latitude);\n        } else {\n            logger.warn('You not set the map center. Usign defaults | longitude: ' + _config.global.options.center.longitude + ', latitude: ' + _config.global.options.center.latitude);\n        }\n\n        _options.basemap || logger.warn('You not set initial basemap. Usign default: ' + _config.global.options.basemap);\n\n        _options.stars === true || _options.stars === false || logger.warn('You not set if map usign stars. Usign default: ' + _config.global.options.stars);\n\n        if (_options.atmosphere) {\n            _options.atmosphere.enable === true || _options.atmosphere.enable === false || logger.warn('You not set if map usign atmosphere efect. Usign default: ' + _config.global.options.atmosphere.enable);\n\n            _options.atmosphere.quality || logger.warn('You not set atmosphere quality. Usign default: ' + _config.global.options.atmosphere.quality);\n        } else {\n            logger.warn('You not set the atmosphere options. Usign defaults | enable: ' + _config.global.options.atmosphere.enable + ', quality: ' + _config.global.options.atmosphere.quality);\n        }\n\n        _options.watcher === true || _options.watcher === false || logger.warn('You not set if map usign watcher to refresh the layers. Usign default: ' + _config.global.options.watcher);\n\n        if (_options.search) {\n            _options.search.enable === true || _options.search.enable === false || logger.warn('You not set Search. Usign default: ' + _config.global.options.search.enable);\n\n            _options.search.position || logger.warn('You not set Search position. Usign default: ' + _config.global.options.search.position);\n\n            _options.search.index || logger.warn('You not set Search index. Usign default: ' + _config.global.options.search.index);\n        } else {\n            logger.warn('You not set the search options. Usign defaults | enable: ' + _config.global.options.search.enable + ', position: ' + _config.global.options.search.position + ', index: ' + _config.global.options.search.index);\n        }\n\n        _options.cors && _options.cors.length > 0 || logger.warn('You not set any URL to enable CORS requests');\n\n        _options.proxy || logger.warn('You not set any URL to proxy your requests');\n\n        _config.global.options = {\n            cdn: _options.cdn !== '' && _options.cdn !== undefined ? _options.cdn : _config.global.options.cdn,\n            element: _options.element,\n            scale: _options.scale !== '' && _options.scale !== undefined ? _options.scale : _config.global.options.scale,\n            center: {\n                longitude: _options.center && _options.center.longitude !== '' && _options.center.longitude !== undefined ? _options.center.longitude : _config.global.options.center.longitude,\n                latitude: _options.center && _options.center.latitude !== '' && _options.center.latitude !== undefined ? _options.center.latitude : _config.global.options.center.latitude\n            },\n            basemap: _options.basemap !== '' && _options.basemap !== undefined ? _options.basemap : _config.global.options.basemap,\n            stars: _options.stars !== '' && _options.stars !== undefined ? _options.stars : _config.global.options.stars,\n            atmosphere: {\n                enable: _options.atmosphere && _options.atmosphere.enable !== '' && _options.atmosphere.enable !== undefined ? _options.atmosphere.enable : _config.global.options.atmosphere.enable,\n                quality: _options.atmosphere && _options.atmosphere.quality !== '' && _options.atmosphere.quality !== undefined ? _options.atmosphere.quality : _config.global.options.atmosphere.quality\n            },\n            watcher: _options.watcher !== '' && _options.watcher !== undefined ? _options.watcher : _config.global.options.watcher,\n            search: {\n                enable: _options.search && _options.search.enable !== '' && _options.search.enable !== undefined ? _options.search.enable : _config.global.options.search.enable,\n                position: _options.search && _options.search.position !== '' && _options.search.position !== undefined ? _options.search.position : _config.global.options.search.position,\n                index: _options.search && _options.search.index !== '' && _options.search.index !== undefined ? _options.search.index : _config.global.options.search.index\n            },\n            cors: _options.cors !== '' && _options.cors !== undefined ? _options.cors : '',\n            proxy: _options.proxy !== '' && _options.proxy !== undefined ? _options.proxy : ''\n        };\n\n        _config.global.loaded = true;\n        logger.log('Ready to start!');\n    } else {\n        logger.fatal('You need pass some informations to describe your map');\n    }\n};\n\n/**\n * The BigBang function\n * To create your map you need invocate this function\n */\nvar start = exports.start = function start() {\n    return new Promise(function (resolve, reject) {\n        var cdn = _config.global.options.cdn;\n\n        if (cdn !== undefined && _config.global.loaded) {\n            // Has the ArcGIS API been added to the page?\n            if (!esriLoader.isLoaded()) {\n                // No, lazy load it the ArcGIS API before using its classes\n                esriLoader.bootstrap(function (err) {\n                    if (err) {\n                        logger.error(err);\n                    }\n                    // Once it's loaded, create the map\n                    logger.log('Waiting ESRI server...');\n                    dojoLoader(resolve, reject);\n                }, {\n                    // Use a specific version instead of latest 4.x\n                    url: cdn\n                });\n            } else {\n                // ArcGIS API is already loaded, just create the map\n                logger.log('Waiting ESRI server...');\n                dojoLoader(resolve, reject);\n            }\n        } else {\n            logger.fatal('Fatal error! You must provider an CDN.');\n            reject();\n        }\n    });\n};\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nvar dojoLoader = function dojoLoader(resolve, reject) {\n    if (_config.global.loaded) {\n        esriLoader.dojoRequire(['esri/config', 'esri/Map', 'esri/Graphic', 'esri/Camera', 'esri/views/SceneView', 'esri/layers/FeatureLayer', 'esri/layers/TileLayer', 'esri/layers/GraphicsLayer', 'esri/core/watchUtils', 'esri/core/Collection', 'esri/renderers/UniqueValueRenderer', 'esri/renderers/ClassBreaksRenderer', 'esri/renderers/SimpleRenderer', 'esri/renderers/support/jsonUtils', 'esri/symbols/ExtrudeSymbol3DLayer', 'esri/symbols/PolygonSymbol3D', 'esri/symbols/SimpleMarkerSymbol', 'esri/symbols/PictureMarkerSymbol', 'esri/symbols/SimpleLineSymbol', 'esri/symbols/SimpleFillSymbol', 'esri/symbols/PointSymbol3D', 'esri/symbols/ObjectSymbol3DLayer', 'esri/geometry/Geometry', 'esri/geometry/Point', 'esri/geometry/Extent', 'esri/widgets/Search', 'dojo/on', 'dojo/domReady!'], function (esriConfig, Map, Graphic, Camera, SceneView, FeatureLayer, TileLayer, GraphicsLayer, watchUtils, Collection, UniqueValueRenderer, ClassBreaksRenderer, SimpleRenderer, jsonUtils, ExtrudeSymbol3DLayer, PolygonSymbol3D, SimpleMarkerSymbol, PictureMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, PointSymbol3D, ObjectSymbol3DLayer, Geometry, Point, Extent, Search, on) {\n            if (_config.global.options.cors) {\n                _config.global.options.cors.forEach(function (elm) {\n                    esriConfig.request.corsEnabledServers.push(elm);\n                });\n            }\n\n            esriConfig.request.proxyUrl = _config.global.options.proxy || '';\n\n            _config.constructors.Map = Map;\n            _config.constructors.SceneView = SceneView;\n\n            _config.constructors.layer.FeatureLayer = FeatureLayer;\n            _config.constructors.layer.TileLayer = TileLayer;\n            _config.constructors.layer.GraphicsLayer = GraphicsLayer;\n\n            _config.constructors.utils.watchUtils = watchUtils;\n            _config.constructors.utils.Search = Search;\n            _config.constructors.utils.jsonUtils = jsonUtils;\n            _config.constructors.utils.Extent = Extent;\n            _config.constructors.utils.Camera = Camera;\n\n            _config.constructors.renderer.UniqueValueRenderer = UniqueValueRenderer;\n            _config.constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer;\n            _config.constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer;\n            _config.constructors.renderer.PolygonSymbol3D = PolygonSymbol3D;\n            _config.constructors.renderer.SimpleRenderer = SimpleRenderer;\n            _config.constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol;\n            _config.constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol;\n            _config.constructors.renderer.SimpleLineSymbol = SimpleLineSymbol;\n            _config.constructors.renderer.SimpleFillSymbol = SimpleFillSymbol;\n            _config.constructors.renderer.Graphic = Graphic;\n            _config.constructors.renderer.Point = Point;\n            _config.constructors.renderer.PointSymbol3D = PointSymbol3D;\n            _config.constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer;\n\n            if (_config.constructors.Map && _config.constructors.SceneView) {\n                logger.log('All constructorss created!');\n\n                _config.global.map = createMap(_config.constructors.Map, _config.global.options.basemap);\n\n                _config.global.view = (0, _view.createView)(_config.global.map, _config.constructors.SceneView, _config.global.options);\n\n                resolve();\n            } else {\n                logger.error('Error during creating the necessary constructors... Try again.');\n                reject();\n            }\n        });\n    } else {\n        logger.fatal('Fatal error! You need set some map options.');\n        reject();\n    }\n};\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nvar createMap = function createMap(Map, basemap) {\n    logger.log('Creating map...');\n\n    var map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation'\n    });\n\n    return map;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _map = __webpack_require__(4);\n\nvar map = _interopRequireWildcard(_map);\n\nvar _view = __webpack_require__(2);\n\nvar view = _interopRequireWildcard(_view);\n\nvar _layers = __webpack_require__(3);\n\nvar layers = _interopRequireWildcard(_layers);\n\nvar _utils = __webpack_require__(7);\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nmodule.exports = {\n    map: map,\n    view: view,\n    layers: layers,\n    utils: utils,\n    obj: {\n        map: _config.global.map,\n        view: _config.global.view\n    }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"isLoaded\"] = isLoaded;\n/* harmony export (immutable) */ __webpack_exports__[\"bootstrap\"] = bootstrap;\n/* harmony export (immutable) */ __webpack_exports__[\"dojoRequire\"] = dojoRequire;\n// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nfunction isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nfunction bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nfunction dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n});\n//# sourceMappingURL=esri-loader.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.hideGraphicLayers = exports.addGraphicLayer = undefined;\n\nvar _logger = __webpack_require__(1);\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar _config = __webpack_require__(0);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Helper to add a simple point symbol on map using layer\n * @param {Object} _symbol - Some informations about your symbol\n * @param {String} _symbol.id - You can pass an ID to find this layer after\n * @param {Number} _symbol.width - Width of the symbol\n * @param {Number} _symbol.height - Height of the symbol\n * @param {String} _symbol.primitive - Name of the symbol\n * @param {String} _symbol.color - Color of the symbol\n * @param {Object} _point - Some information about the position of the symbol\n * @param {Number} _point.x - X axis position\n * @param {Number} _point.y - Y axis position\n * @param {Number} _point.z - Z axis position\n */\nvar addGraphicLayer = exports.addGraphicLayer = function addGraphicLayer(_symbol, _point) {\n    var map = _config.global.map;\n    var GraphicsLayer = _config.constructors.layer.GraphicsLayer;\n    var PointSymbol3D = _config.constructors.renderer.PointSymbol3D;\n    var ObjectSymbol3DLayer = _config.constructors.renderer.ObjectSymbol3DLayer;\n    var Point = _config.constructors.renderer.Point;\n    var Graphic = _config.constructors.renderer.Graphic;\n\n    var graphicsLayer = new GraphicsLayer({\n        id: _symbol.id !== '' || _symbol.id !== undefined ? _symbol.id : '[ArcE]Graph'\n    });\n\n    var objectSymbol = new PointSymbol3D({\n        symbolLayers: [new ObjectSymbol3DLayer({\n            width: _symbol.width,\n            height: _symbol.height,\n            resource: {\n                primitive: _symbol.primitive\n            },\n            material: {\n                color: _symbol.color\n            }\n        })]\n    });\n\n    var point = new Point({\n        x: _point.x,\n        y: _point.y,\n        z: _point.z\n    });\n\n    var pointGraphic = new Graphic({\n        geometry: point,\n        symbol: objectSymbol\n    });\n\n    map.add(graphicsLayer);\n    graphicsLayer.add(pointGraphic);\n\n    logger.log('Adding a Graphic Layer on map...');\n};\n\nvar hideGraphicLayers = exports.hideGraphicLayers = function hideGraphicLayers() {\n    var map = _config.global.map;\n\n    map.allLayers.map(function (elm, indx, arr) {\n        if (elm.id === '[ArcE]Graph') {\n            if (elm.visible === true) {\n                elm.visible = false;\n                logger.log('Hiding Graphic Layer...');\n            }\n        }\n    });\n};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// arceasy.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b5ce1bac003f855bf0c5","export const prefix = 'ArcEasy'\n\nexport const global = {\n    map: '',\n    view: '',\n    options: {\n        cdn: 'https://js.arcgis.com/4.3/',\n        element: '',\n        scale: 25000000,\n        center: {\n            longitude: -13.78,\n            latitude: -52.17\n        },\n        basemap: 'streets',\n        stars: true,\n        atmosphere: {\n            enable: true,\n            quality: 'low'\n        },\n        watcher: true,\n        search: {\n            enable: false,\n            position: 'top-left',\n            index: 1\n        },\n        cors: '',\n        proxy: ''\n    },\n    loaded: false\n}\n\nexport const constructors = {\n    layer: {\n        FeatureLayer: '',\n        TileLayer: ''\n    },\n    map: '',\n    container: '',\n    view: '',\n    utils: {\n        watchUtils: '',\n        Search: '',\n        jsonUtils: '',\n        Extent: ''\n    },\n    renderer: {\n        UniqueValueRenderer: '',\n        ClassBreaksRenderer: '',\n        ExtrudeSymbol3DLayer: '',\n        PolygonSymbol3D: '',\n        SimpleRenderer: '',\n        SimpleMarkerSymbol: '',\n        PictureMarkerSymbol: '',\n        SimpleLineSymbol: '',\n        SimpleFillSymbol: ''\n    }\n}\n\nexport const templates = {\n    renderers: [],\n    symbols: []\n}\n\n\n\n// WEBPACK FOOTER //\n// ./config.js","import { prefix } from './config'\n\nlet logCounter = 0\nlet errorCounter = 0\nlet fatalCounter = 0\nlet warnCounter = 0\n\n/**\n * Add conter and prefix and execute simple console.log()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nexport const log = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    logCounter++\n\n    return console.log(`${logCounter} [LOG|${prefix}] ${message}`, object)\n}\n\n/**\n * Add conter and prefix and execute console.error()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nexport const error = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    errorCounter++\n\n    return console.error(`${errorCounter} [ERROR|${prefix}] ${message}`, object)\n}\n\n/**\n * Add conter and prefix and create a throw new Error()\n * @param  {String} message - Your log text\n * @return {Function}\n */\nexport const fatal = (message) => {\n    fatalCounter++\n\n    throw new Error(`${fatalCounter} [FATAL|${prefix}] ${message}`)\n}\n\n/**\n * Add conter and prefix and execute console.warn()\n * @param  {String} message - Your log text\n * @param  {Object} _object - If you pass an object or array, it's will be put together\n * @return {Function}\n */\nexport const warn = (message, _object) => {\n    const object = _object !== undefined\n        ? _object\n        : ''\n\n    warnCounter++\n\n    return console.warn(`${warnCounter} [WARN|${prefix}] ${message}`, object)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./logger.js","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Create view inside map\n * @param  {Object} map - The map object in memory\n * @param  {Function} View - ESRI View constructor\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.watcher - If watcherRunning() is enabled\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n * @return {Object} Global view object descriptor\n */\nexport const createView = (map, View, options) => {\n    if (global.loaded) {\n        logger.log('Creating View...')\n\n        const view = new View({\n            container: options.element,\n            map: map,\n            scale: options.scale,\n            center: [\n                options.center.longitude,\n                options.center.latitude\n            ],\n            viewingMode: 'global',\n            starsEnabled: options.stars,\n            atmosphereEnabled: options.atmosphere.enable\n        })\n\n        view.then(() => {\n            logger.log('View ready!')\n\n            controlUI(view)\n\n            if (options.watcher) {\n                watcherRunning(view)\n            }\n        })\n\n        return view\n    } else {\n        logger.fatal(`Fatal error! You need set some map options.`)\n    }\n}\n\n/**\n * Watcher that observe the globe moviment\n * and make requests with specific parameters\n * like extent on 'definitionExpression'\n * @param  {Object} view - Global view object descriptor\n */\nconst watcherRunning = view => {\n    const watchUtils = constructors.utils.watchUtils\n\n    watchUtils.whenTrue(view, 'stationary', () => {\n        logger.log(`View changed! Getting extent to refreshing layers...`)\n        // console.log(view.extent.center.latitude, view.extent.center.longitude, view.scale)\n\n        refreshExtent(view)\n    })\n}\n\n /**\n  * Function to get the actual extent and set the definition expression\n  * on layer and make an request to refreh the layer info\n  * @param  {Object} view - Global view object descriptor\n  */\nconst refreshExtent = view => {\n    const map = global.map\n    const urlQuery = `!xmin=${view.extent.xmin}!xmax=${view.extent.xmax}!ymin=${view.extent.ymin}!ymax=${view.extent.ymax}`\n\n    map.allLayers.map(layer => {\n        if (layer.raw !== undefined) {\n            if ((view.scale < layer.minScale &&\n                    view.scale > layer.maxScale) ||\n                    (layer.minScale === 0 &&\n                    layer.maxScale === 0)) {\n                if (layer.raw.type === 0) {\n                    layer.definitionExpression = urlQuery\n                }\n                layer.outOfRange = false\n\n                if (layer.visible) {\n                    logger.log(`Drawing layer: ${layer.title} | URL requested: ${layer.raw.url}/where=${urlQuery}`)\n                }\n            } else {\n                if (layer.visible) {\n                    logger.log(`${layer.title} it's visible, but is out of range`)\n                }\n\n                layer.outOfRange = true\n            }\n        }\n    })\n}\n\n/**\n * Only setting some aspects from ESRI UI\n * @param  {Object} view - Global view object descriptor\n */\nconst controlUI = view => {\n    logger.log('Changing UI elements...')\n\n    view.environment.atmosphere.quality = global.options.atmosphere.quality\n\n    if (global.options.search.enable) {\n        const Search = constructors.utils.Search\n        const searchWidget = new Search({\n            view: view\n        })\n\n        view.ui.add(searchWidget, {\n            position: global.options.search.position,\n            index: global.options.search.index\n        })\n    }\n\n    view.ui.remove([\n        'zoom',\n        'compass',\n        'navigation-toggle'\n    ])\n}\n\n/**\n * Navigate on map using long/lat and camera position\n * @param  {Object} coordinates - Object that contain destiny longitude and latitude\n * @param  {Number} scale - Scale on earth\n * @param  {Object} camera - Object that contain new angles to position camera\n */\nexport const newPosition = ({coordinates, scale, camera}) => {\n    if (coordinates && scale && camera) {\n        const view = global.view\n\n        view.goTo({\n            center: [\n                coordinates.longitude,\n                coordinates.latitude\n            ],\n            scale: scale,\n            tilt: camera.tilt,\n            heading: camera.heading\n        })\n\n        logger.log(`Changing map position...`)\n    } else {\n        logger.error(`You need set a new position formed by a pair of coordinates, a new scale and new camera positions`)\n    }\n}\n\n/**\n * Change basemap on global map object\n * @param  {String} basemap - A basemap name that match with basemap's list from ESRI\n *                          'streets', 'satellite', 'hybrid', 'topo', 'gray',\n *                          'dark-gray', 'oceans', 'national-geographic',\n *                          'terrain', 'osm', 'dark-gray-vector', 'gray-vector',\n *                          'streets-vector', 'topo-vector', 'streets-night-vector',\n *                          'streets-relief-vector', 'streets-navigation-vector'\n *                          or 'none'\n */\nexport const changeBasemap = basemap => {\n    if (basemap) {\n        const map = global.map\n\n        map.basemap = basemap\n\n        logger.log(`Change basemap...`)\n    } else {\n        logger.error(`You need set a new basemap`)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./view.js","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Recieve all layers, work and add on map\n * @constructor\n * @param  {Array} layers - List of layers\n */\nexport const add = layers => {\n    const map = global.map\n\n    layers.map((layer, indx) => {\n        if (validate(layer)) {\n            if (layer.id === undefined ||\n                layer.id === '' ||\n                !layer.id) {\n                logger.log(`Adding id by index on layer`)\n                layer.id = indx\n            }\n\n            layer.outOfRange = true\n\n            return map.add(create(layer))\n        }\n    })\n}\n\n/**\n * Validate single layer\n * @param  {Object} layer - Layer with some options\n * @return {Boolean} True or false to validation\n */\nconst validate = layer => {\n    if (layer) {\n        !layer.title ||\n            logger.log(`Validating layer: ${layer.title}`)\n\n        if (layer.title === undefined ||\n            layer.title === '' ||\n            !layer.title) {\n            logger.fatal(`You need provide a layer title`)\n\n            return false\n        }\n\n        if (layer.visible === undefined ||\n            layer.visible === '') {\n            layer.visible = true\n            logger.warn(`You not set intial visible. Usign default: true`)\n        }\n\n        if (layer.definitionExpression === undefined ||\n            layer.definitionExpression === '') {\n            layer.definitionExpression = ''\n            logger.warn(`You not set intial definitionExpression. Usign default: ''`)\n        }\n\n        if (layer.type === undefined ||\n            layer.type === '' ||\n            layer.type === false) {\n            logger.fatal(`You need provide a layer type (0 = FeatureLayer, 1 = TileLayer)`)\n\n            return false\n        }\n\n        if (layer.url === undefined ||\n            layer.url === '' ||\n            !layer.url) {\n            logger.fatal(`You need provide an URL layer`)\n\n            return false\n        }\n\n        return true\n    } else {\n        logger.fatal(`You need pass some informations to describe your layer`)\n        return false\n    }\n}\n\n/**\n * Recieve a single layer object and return layer ready\n * @param {Object} _layer - Valid Layer object previously worked\n * @return {Object} Layer ready to add on map\n */\nconst create = _layer => {\n    const layerConstructors = constructors.layer\n    const utilsConstructors = constructors.utils\n    const jsonUtils = utilsConstructors.jsonUtils\n    let LayerType\n    let layerLabel\n\n    if (_layer.type === 0) {\n        layerLabel = 'Feature Layer'\n        LayerType = layerConstructors.FeatureLayer\n    } else if (_layer.type === 1) {\n        layerLabel = 'Tile Layer'\n        LayerType = layerConstructors.TileLayer\n    }\n\n    const layer = new LayerType({\n        id: _layer.id,\n        title: _layer.title,\n        url: _layer.url,\n        definitionExpression: _layer.definitionExpression,\n        raw: _layer,\n        visible: _layer.visible\n    })\n\n    logger.log(`Adding a ${layerLabel} on map: ${layer.raw.title} | Visibility: ${layer.raw.visible} | URL: ${layer.raw.url}`)\n\n    if (layer.raw.renderer) {\n        logger.log(`Applying renderer...`)\n\n        layer.renderer = jsonUtils.fromJSON(layer.raw.renderer)\n    }\n\n    // if (layer.raw.popupTemplate) {\n    //     layer.popupTemplate = applyingPopups(layer.raw)\n    // }\n\n    layer.then(() => {\n        logger.log(`Layer ${layer.title} ready!`)\n\n        if (layer.raw.type === 1) {\n            layer.minScale = layer.raw.minScale !== null &&\n                parseInt(layer.raw.minScale) !== 0\n                ? layer.raw.minScale\n                : 0\n            layer.maxScale = layer.raw.maxScale !== null &&\n                parseInt(layer.raw.maxScale)\n                ? layer.raw.maxScale\n                : 0\n\n            // logger.log(`minScale: ${parseInt(layer.minScale)} and maxScale: ${parseInt(layer.maxScale)} defined manually`)\n        }\n    })\n\n    return layer\n}\n\n/**\n * Find specific layer in map\n * @param  {String|Number} _layer - Layer title or ID\n * @return {Object} Layer that will be manipulated\n */\nconst find = _layer => {\n    const map = global.map\n\n    return map.allLayers.find(layer => {\n        if (layer.raw !== undefined) {\n            if (layer.raw.title === _layer ||\n                layer.raw.id === _layer) {\n                return layer\n            }\n        }\n    })\n}\n\n/**\n * get all layers included on map\n * @return {Array} list of all layers included by user\n */\nexport const all = () => {\n    const map = global.map\n\n    return map.allLayers._items.filter(layer => {\n        if (layer.raw !== undefined) {\n            return true\n        }\n    })\n}\n\n/**\n * Change layer visibility\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Boolean} visibility - Set if layer is visible or not\n */\nexport const setVisibility = (_layer, visibility) => {\n    const layer = find(_layer)\n\n    if (layer) {\n        layer.visible = visibility\n        logger.log(`Change visibility of layer: ${_layer} to: ${visibility}`)\n    } else {\n        logger.error(`Can't find layer: ${_layer} in map. You already added this layer?`)\n    }\n}\n\n/**\n * Change layer opacity\n * @param  {String|Number} _layer - Layer title or ID\n * @param  {Number} _opacity - new opacity\n */\nexport const setOpacity = (_layer, _opacity) => {\n    const layer = find(_layer)\n\n    if (layer) {\n        layer.opacity = _opacity / 100\n        logger.log(`Change opacity of layer: ${_layer} to: ${_opacity}`)\n    } else {\n        logger.error(`Can't find layer: ${_layer} in map. You already added this layer?`)\n    }\n}\n\n/**\n * Change visibility of all layers using parameter\n * @param  {Boolean} visibility - new opacity\n */\nconst changeVisibility = visibility => {\n    const map = global.map\n\n    map.allLayers.map(layer => {\n        if (layer.raw !== undefined) {\n            if (layer.visible === !visibility) {\n                layer.visible = visibility\n                logger.log(`Change visibility of layer: ${layer.raw.title} to: ${visibility}`)\n            }\n        }\n    })\n}\n\n/**\n * Set visibility of all layers to false\n */\nexport const hideAll = () => {\n    changeVisibility(false)\n}\n\n/**\n * Set visibility of all layers to true\n */\nexport const showAll = () => {\n    changeVisibility(true)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./layers.js","import * as esriLoader from 'esri-loader'\nimport * as logger from './logger'\nimport { createView } from './view'\nimport { global, constructors } from './config'\n\n/**\n * Simple function to set globaly options about the map\n * To start using ArcEasy you need invocate this function first\n * @param  {Object} options - Group of informations about your\n *                            app and how map will be\n * @param  {String} options.cdn - ESRI CDN Server\n * @param  {String} options.element - DOM element that map will be created\n * @param  {Number} options.scale - Initial map scale\n * @param  {Number} options.center.longitude - Center map Longitude\n * @param  {Number} options.center.latitude - Center map Latitude\n * @param  {String} options.basemap - Initial basemap\n * @param  {Boolean} options.stars - If stars is enabled\n * @param  {Boolean} options.atmosphere.enable - If atmosphere is enabled\n * @param  {String} options.atmosphere.quality - Atmosphere quality\n * @param  {Boolean} options.watcher - If watcherRunning() is enabled\n * @param  {Boolean} options.search.enable - If search is enabled\n * @param  {String} options.search.position - Search position\n * @param  {Number} options.search.index - Search index\n * @param  {Array} options.cors - A group of URLs that you need enable CORS\n * @param  {String} options.proxy - Single URL that will proxy your requests\n */\nexport const options = options => {\n    if (options) {\n        options.cdn ||\n            logger.warn(`You not set any ESRI CDN. Usign default: ${global.options.cdn}`)\n\n        options.element ||\n            logger.fatal(`You need pass an valid DOM element`)\n\n        options.scale ||\n            logger.warn(`You not set scale. Usign default scale: ${global.options.scale}`)\n\n        if (options.center) {\n            options.center.longitude ||\n                logger.warn(`You not set intial longitude. Usign default: ${global.options.center.longitude}`)\n\n            options.center.latitude ||\n                logger.warn(`You not set intial latitude. Usign default: ${global.options.center.latitude}`)\n        } else {\n            logger.warn(`You not set the map center. Usign defaults | longitude: ${global.options.center.longitude}, latitude: ${global.options.center.latitude}`)\n        }\n\n        options.basemap ||\n            logger.warn(`You not set initial basemap. Usign default: ${global.options.basemap}`)\n\n        options.stars === true ||\n        options.stars === false ||\n            logger.warn(`You not set if map usign stars. Usign default: ${global.options.stars}`)\n\n        if (options.atmosphere) {\n            options.atmosphere.enable === true ||\n            options.atmosphere.enable === false ||\n                logger.warn(`You not set if map usign atmosphere efect. Usign default: ${global.options.atmosphere.enable}`)\n\n            options.atmosphere.quality ||\n                logger.warn(`You not set atmosphere quality. Usign default: ${global.options.atmosphere.quality}`)\n        } else {\n            logger.warn(`You not set the atmosphere options. Usign defaults | enable: ${global.options.atmosphere.enable}, quality: ${global.options.atmosphere.quality}`)\n        }\n\n        options.watcher === true ||\n        options.watcher === false ||\n            logger.warn(`You not set if map usign watcher to refresh the layers. Usign default: ${global.options.watcher}`)\n\n        if (options.search) {\n            options.search.enable === true ||\n            options.search.enable === false ||\n                logger.warn(`You not set Search. Usign default: ${global.options.search.enable}`)\n\n            options.search.position ||\n                logger.warn(`You not set Search position. Usign default: ${global.options.search.position}`)\n\n            options.search.index ||\n                logger.warn(`You not set Search index. Usign default: ${global.options.search.index}`)\n        } else {\n            logger.warn(`You not set the search options. Usign defaults | enable: ${global.options.search.enable}, position: ${global.options.search.position}, index: ${global.options.search.index}`)\n        }\n\n        options.cors &&\n        options.cors.length > 0 ||\n            logger.warn(`You not set any URL to enable CORS requests`)\n\n        options.proxy ||\n            logger.warn(`You not set any URL to proxy your requests`)\n\n        global.options = {\n            cdn: options.cdn !== '' &&\n                options.cdn !== undefined\n                ? options.cdn\n                : global.options.cdn,\n            element: options.element,\n            scale: options.scale !== '' &&\n                options.scale !== undefined\n                ? options.scale\n                : global.options.scale,\n            center: {\n                longitude: options.center &&\n                    options.center.longitude !== '' &&\n                    options.center.longitude !== undefined\n                    ? options.center.longitude\n                    : global.options.center.longitude,\n                latitude: options.center &&\n                    options.center.latitude !== '' &&\n                    options.center.latitude !== undefined\n                    ? options.center.latitude\n                    : global.options.center.latitude\n            },\n            basemap: options.basemap !== '' &&\n                options.basemap !== undefined\n                ? options.basemap\n                : global.options.basemap,\n            stars: options.stars !== '' &&\n                options.stars !== undefined\n                ? options.stars\n                : global.options.stars,\n            atmosphere: {\n                enable: options.atmosphere &&\n                    options.atmosphere.enable !== '' &&\n                    options.atmosphere.enable !== undefined\n                    ? options.atmosphere.enable\n                    : global.options.atmosphere.enable,\n                quality: options.atmosphere &&\n                    options.atmosphere.quality !== '' &&\n                    options.atmosphere.quality !== undefined\n                    ? options.atmosphere.quality\n                    : global.options.atmosphere.quality\n            },\n            watcher: options.watcher !== '' &&\n                options.watcher !== undefined\n                ? options.watcher\n                : global.options.watcher,\n            search: {\n                enable: options.search &&\n                    options.search.enable !== '' &&\n                    options.search.enable !== undefined\n                    ? options.search.enable\n                    : global.options.search.enable,\n                position: options.search &&\n                    options.search.position !== '' &&\n                    options.search.position !== undefined\n                    ? options.search.position\n                    : global.options.search.position,\n                index: options.search &&\n                    options.search.index !== '' &&\n                    options.search.index !== undefined\n                    ? options.search.index\n                    : global.options.search.index\n            },\n            cors: options.cors !== '' &&\n                options.cors !== undefined\n                ? options.cors\n                : '',\n            proxy: options.proxy !== '' &&\n                options.proxy !== undefined\n                ? options.proxy\n                : ''\n        }\n\n        global.loaded = true\n        logger.log(`Ready to start!`)\n    } else {\n        logger.fatal(`You need pass some informations to describe your map`)\n    }\n}\n\n/**\n * The BigBang function\n * To create your map you need invocate this function\n */\nexport const start = () => {\n    return new Promise((resolve, reject) => {\n        const cdn = global.options.cdn\n\n        if (cdn !== undefined && global.loaded) {\n            // Has the ArcGIS API been added to the page?\n            if (!esriLoader.isLoaded()) {\n                // No, lazy load it the ArcGIS API before using its classes\n                esriLoader.bootstrap(err => {\n                    if (err) {\n                        logger.error(err)\n                    }\n                    // Once it's loaded, create the map\n                    logger.log(`Waiting ESRI server...`)\n                    dojoLoader(resolve, reject)\n                }, {\n                    // Use a specific version instead of latest 4.x\n                    url: cdn\n                })\n            } else {\n                // ArcGIS API is already loaded, just create the map\n                logger.log(`Waiting ESRI server...`)\n                dojoLoader(resolve, reject)\n            }\n        } else {\n            logger.fatal(`Fatal error! You must provider an CDN.`)\n            reject()\n        }\n    })\n}\n\n/**\n * Require all packages from ESRI CDN,\n * create necessary constructors,\n * create map,\n * create view,\n * and put in page\n */\nconst dojoLoader = (resolve, reject) => {\n    if (global.loaded) {\n        esriLoader.dojoRequire([\n            'esri/config',\n            'esri/Map',\n            'esri/Graphic',\n            'esri/Camera',\n\n            'esri/views/SceneView',\n\n            'esri/layers/FeatureLayer',\n            'esri/layers/TileLayer',\n            'esri/layers/GraphicsLayer',\n\n            'esri/core/watchUtils',\n            'esri/core/Collection',\n\n            'esri/renderers/UniqueValueRenderer',\n            'esri/renderers/ClassBreaksRenderer',\n            'esri/renderers/SimpleRenderer',\n            'esri/renderers/support/jsonUtils',\n\n            'esri/symbols/ExtrudeSymbol3DLayer',\n            'esri/symbols/PolygonSymbol3D',\n            'esri/symbols/SimpleMarkerSymbol',\n            'esri/symbols/PictureMarkerSymbol',\n            'esri/symbols/SimpleLineSymbol',\n            'esri/symbols/SimpleFillSymbol',\n            'esri/symbols/PointSymbol3D',\n            'esri/symbols/ObjectSymbol3DLayer',\n\n            'esri/geometry/Geometry',\n            'esri/geometry/Point',\n            'esri/geometry/Extent',\n\n            'esri/widgets/Search',\n\n            'dojo/on',\n            'dojo/domReady!'\n        ], (\n            esriConfig,\n            Map,\n            Graphic,\n            Camera,\n            SceneView,\n            FeatureLayer,\n            TileLayer,\n            GraphicsLayer,\n            watchUtils,\n            Collection,\n            UniqueValueRenderer,\n            ClassBreaksRenderer,\n            SimpleRenderer,\n            jsonUtils,\n            ExtrudeSymbol3DLayer,\n            PolygonSymbol3D,\n            SimpleMarkerSymbol,\n            PictureMarkerSymbol,\n            SimpleLineSymbol,\n            SimpleFillSymbol,\n            PointSymbol3D,\n            ObjectSymbol3DLayer,\n            Geometry,\n            Point,\n            Extent,\n            Search,\n            on\n        ) => {\n            if (global.options.cors) {\n                global.options.cors.forEach(elm => {\n                    esriConfig.request.corsEnabledServers.push(elm)\n                })\n            }\n\n            esriConfig.request.proxyUrl = global.options.proxy || ''\n\n            constructors.Map = Map\n            constructors.SceneView = SceneView\n\n            constructors.layer.FeatureLayer = FeatureLayer\n            constructors.layer.TileLayer = TileLayer\n            constructors.layer.GraphicsLayer = GraphicsLayer\n\n            constructors.utils.watchUtils = watchUtils\n            constructors.utils.Search = Search\n            constructors.utils.jsonUtils = jsonUtils\n            constructors.utils.Extent = Extent\n            constructors.utils.Camera = Camera\n\n            constructors.renderer.UniqueValueRenderer = UniqueValueRenderer\n            constructors.renderer.ClassBreaksRenderer = ClassBreaksRenderer\n            constructors.renderer.ExtrudeSymbol3DLayer = ExtrudeSymbol3DLayer\n            constructors.renderer.PolygonSymbol3D = PolygonSymbol3D\n            constructors.renderer.SimpleRenderer = SimpleRenderer\n            constructors.renderer.SimpleMarkerSymbol = SimpleMarkerSymbol\n            constructors.renderer.PictureMarkerSymbol = PictureMarkerSymbol\n            constructors.renderer.SimpleLineSymbol = SimpleLineSymbol\n            constructors.renderer.SimpleFillSymbol = SimpleFillSymbol\n            constructors.renderer.Graphic = Graphic\n            constructors.renderer.Point = Point\n            constructors.renderer.PointSymbol3D = PointSymbol3D\n            constructors.renderer.ObjectSymbol3DLayer = ObjectSymbol3DLayer\n\n            if (constructors.Map && constructors.SceneView) {\n                logger.log(`All constructorss created!`)\n\n                global.map = createMap(\n                    constructors.Map,\n                    global.options.basemap\n                )\n\n                global.view = createView(\n                    global.map,\n                    constructors.SceneView,\n                    global.options\n                )\n\n                resolve()\n            } else {\n                logger.error(`Error during creating the necessary constructors... Try again.`)\n                reject()\n            }\n        })\n    } else {\n        logger.fatal(`Fatal error! You need set some map options.`)\n        reject()\n    }\n}\n\n/**\n * Create map using ESRI Map constructor\n * @param  {Function} Map - ESRI Map constructor\n * @param  {String} basemap - The initial basemap\n * @return {Object} Global map object descriptor\n */\nconst createMap = (Map, basemap) => {\n    logger.log(`Creating map...`)\n\n    const map = new Map({\n        basemap: basemap,\n        ground: 'world-elevation'\n    })\n\n    return map\n}\n\n\n\n// WEBPACK FOOTER //\n// ./map.js","import * as map from './map'\nimport * as view from './view'\nimport * as layers from './layers'\nimport * as utils from './utils'\nimport { global } from './config'\n\nmodule.exports = {\n    map,\n    view,\n    layers,\n    utils,\n    obj: {\n        map: global.map,\n        view: global.view\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nexport function isLoaded() {\n    // would like to just use window.require, but fucking typescript\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nexport function bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = 'https://js.arcgis.com/4.3/';\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        return;\n    }\n    // create a script object whose source points to the API\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = options.url;\n    script.dataset['esriLoader'] = 'loading';\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, dojoRequire);\n        }\n    };\n    // load the script\n    document.body.appendChild(script);\n}\nexport function dojoRequire(modules, callback) {\n    if (isLoaded()) {\n        window['require'](modules, callback);\n    }\n    else {\n        var script_1 = getScript();\n        if (script_1) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            var onScriptLoad_1 = function () {\n                window['require'](modules, callback);\n                script_1.removeEventListener('load', onScriptLoad_1, false);\n            };\n            script_1.addEventListener('load', onScriptLoad_1);\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\nexport default {\n    isLoaded: isLoaded,\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n};\n//# sourceMappingURL=esri-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/esri-loader/src/esri-loader.js\n// module id = 6\n// module chunks = 0","import * as logger from './logger'\nimport { global, constructors } from './config'\n\n/**\n * Helper to add a simple point symbol on map using layer\n * @param {Object} _symbol - Some informations about your symbol\n * @param {String} _symbol.id - You can pass an ID to find this layer after\n * @param {Number} _symbol.width - Width of the symbol\n * @param {Number} _symbol.height - Height of the symbol\n * @param {String} _symbol.primitive - Name of the symbol\n * @param {String} _symbol.color - Color of the symbol\n * @param {Object} _point - Some information about the position of the symbol\n * @param {Number} _point.x - X axis position\n * @param {Number} _point.y - Y axis position\n * @param {Number} _point.z - Z axis position\n */\nexport const addGraphicLayer = (_symbol, _point) => {\n    const map = global.map\n    const GraphicsLayer = constructors.layer.GraphicsLayer\n    const PointSymbol3D = constructors.renderer.PointSymbol3D\n    const ObjectSymbol3DLayer = constructors.renderer.ObjectSymbol3DLayer\n    const Point = constructors.renderer.Point\n    const Graphic = constructors.renderer.Graphic\n\n    const graphicsLayer = new GraphicsLayer({\n        id: _symbol.id !== '' ||\n            _symbol.id !== undefined\n            ? _symbol.id\n            : '[ArcE]Graph'\n    })\n\n    const objectSymbol = new PointSymbol3D({\n        symbolLayers: [\n            new ObjectSymbol3DLayer({\n                width: _symbol.width,\n                height: _symbol.height,\n                resource: {\n                    primitive: _symbol.primitive\n                },\n                material: {\n                    color: _symbol.color\n                }\n            })\n        ]\n    })\n\n    const point = new Point({\n        x: _point.x,\n        y: _point.y,\n        z: _point.z\n    })\n\n    const pointGraphic = new Graphic({\n        geometry: point,\n        symbol: objectSymbol\n    })\n\n    map.add(graphicsLayer)\n    graphicsLayer.add(pointGraphic)\n\n    logger.log(`Adding a Graphic Layer on map...`)\n}\n\nexport const hideGraphicLayers = () => {\n    const map = global.map\n\n    map.allLayers.map((elm, indx, arr) => {\n        if (elm.id === '[ArcE]Graph') {\n            if (elm.visible === true) {\n                elm.visible = false\n                logger.log(`Hiding Graphic Layer...`)\n            }\n        }\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils.js"],"sourceRoot":""}